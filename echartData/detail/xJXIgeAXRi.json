{"status":0,"data":{"cid":"xJXIgeAXRi","authorUid":"obd-oAgFGb6MEa5FM7lEEcZQplG8klrvv7N","authorUserName":"筱***e","title":"乐山市-房屋分布图","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2020-10-12T06:34:08.000Z","lastUpdateTime":"2020-10-12T06:34:08.000Z","auth":1,"uid":"obd-oAgFGb6MEa5FM7lEEcZQplG8klrvv7N","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.8.0","versionCreateTime":"2020-10-12T06:42:46.000Z","code":"//各地区地图json: http://datav.aliyun.com/tools/atlas/#&lat=31.769817845138945&lng=104.29901249999999&zoom=4\r\n\r\n\r\nlet mapdata = [{\r\n        name: '夹江县',\r\n        value: 4544,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '井研县',\r\n        value: 423,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '峨眉山市',\r\n        value: 0,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '市中区',\r\n        value: 1234,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '五通桥区',\r\n        value: 12,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '沙湾区',\r\n        value: 3456,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '犍为县',\r\n        value: 678,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '金口河区',\r\n        value: 99,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '峨边彝族自治县',\r\n        value: 123,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '马边彝族自治县',\r\n        value: 0,\r\n        v: 22,\r\n    },\r\n    {\r\n        name: '沐川县',\r\n        value: 567,\r\n        v: 22,\r\n    },\r\n];\r\nlet mapUrl = 'https://geo.datav.aliyun.com/areas_v2/bound/511100_full.json';\r\n\r\n\r\n//循环高亮显示图例\r\nlet index = -1;\r\nvar timer = setInterval(() => {\r\n    // 隐藏提示框\r\n    myChart.dispatchAction({\r\n        type: 'hideTip',\r\n        seriesIndex: 0,\r\n        dataIndex: index\r\n    });\r\n    // 显示提示框\r\n    myChart.dispatchAction({\r\n        type: 'showTip',\r\n        seriesIndex: 0,\r\n        dataIndex: index + 1\r\n    });\r\n    // 取消高亮指定的数据图形\r\n    myChart.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: index\r\n    });\r\n    // 高亮指定的数据图形\r\n    myChart.dispatchAction({\r\n        type: 'highlight',\r\n        seriesIndex: 0,\r\n        dataIndex: index + 1\r\n    });\r\n    index++;\r\n    if (index > 10) {\r\n        index = -1;\r\n    }\r\n}, 1500);\r\n//---------------------------------------------鼠标移入静止播放\r\nmyChart.on('mouseout', (e) => {\r\n    clearInterval(timer);\r\n    myChart.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0,\r\n        dataIndex: e.dataIndex\r\n    }); //鼠标移出后先把上次的高亮取消\r\n    timer = setInterval(() => {\r\n        // 隐藏提示框\r\n        myChart.dispatchAction({\r\n            type: 'hideTip',\r\n            seriesIndex: 0,\r\n            dataIndex: index\r\n        });\r\n        // 显示提示框\r\n        myChart.dispatchAction({\r\n            type: 'showTip',\r\n            seriesIndex: 0,\r\n            dataIndex: index + 1\r\n        });\r\n        // 取消高亮指定的数据图形\r\n        myChart.dispatchAction({\r\n            type: 'downplay',\r\n            seriesIndex: 0,\r\n            dataIndex: index\r\n        });\r\n        // 高亮指定的数据图形\r\n        myChart.dispatchAction({\r\n            type: 'highlight',\r\n            seriesIndex: 0,\r\n            dataIndex: index + 1\r\n        });\r\n        index++;\r\n        if (index > 10) {\r\n            index = -1;\r\n        }\r\n    }, 1500);\r\n});\r\nmyChart.on('mousemove', (e) => {\r\n    clearInterval(timer);\r\n    myChart.dispatchAction({\r\n        type: 'downplay',\r\n        seriesIndex: 0\r\n    });\r\n    myChart.dispatchAction({\r\n        type: 'highlight',\r\n        seriesIndex: 0,\r\n        dataIndex: e.dataIndex\r\n    });\r\n    myChart.dispatchAction({\r\n        type: 'showTip',\r\n        seriesIndex: 0,\r\n        dataIndex: e.dataIndex\r\n    });\r\n});\r\n\r\n\r\n\r\nmyChart.showLoading();\r\n$.getJSON(mapUrl, function(geoJson) {\r\n    drawCharts(geoJson)\r\n})\r\n\r\nfunction drawCharts(json) {\r\n    echarts.registerMap('leshan', json);\r\n    myChart.hideLoading();\r\n    var option = {\r\n        backgroundColor: '#020933',\r\n        title: {\r\n            top: 20,\r\n            text: '乐山市',\r\n            subtext: '',\r\n            x: 'center',\r\n            textStyle: {\r\n                color: '#ccc'\r\n            }\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: function(params) {\r\n                let d = params.data;\r\n                let str = '';\r\n                str += `<div style='line-height:20px;backgroundColor:#0B1521;'>\r\n                          <p style='margin:0;'>安置房：<span style='color:#13B0AF;'>${d.value}座</span></p>\r\n                          <p style='margin:0;'>商品房：<span style='color:#13B0AF;'>${d.v}座</span></p>\r\n                      </div>`\r\n                return str;\r\n            }\r\n        },\r\n        dataRange: {\r\n            bottom: 100,\r\n            right: 100,\r\n            textStyle: {\r\n                color: '#FFFF'\r\n            },\r\n            splitList: [{\r\n                    start: 10000,\r\n                    label: '>=10000',\r\n                },\r\n                {\r\n                    start: 500,\r\n                    end: 900\r\n                },\r\n                {\r\n                    start: 100,\r\n                    end: 400\r\n                },\r\n                {\r\n                    start: 1,\r\n                    end: 99\r\n                },\r\n                {\r\n                    end: 1,\r\n                    label: '0',\r\n                },\r\n            ],\r\n            color: ['#0E3159', '#21446C', '#3168A5', '#428CD7', '#8FBBE8']\r\n        },\r\n        geo: {\r\n            map: 'leshan',\r\n            aspectScale: .75, //长宽比\r\n            zoom: 1.1,\r\n            roam: false,\r\n            itemStyle: {\r\n                normal: {\r\n                    areaColor: '#013C62',\r\n                    shadowColor: '#182f68',\r\n                    shadowOffsetX: 15,\r\n                    shadowOffsetY: 25,\r\n                    borderWidth: 1,\r\n                },\r\n            },\r\n        },\r\n        series: [{\r\n                type: 'map',\r\n                roam: false, //是否可拖动\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n\r\n                itemStyle: {\r\n                    normal: {\r\n                        borderColor: '#006699',\r\n                        borderWidth: 2,\r\n                        areaColor: '#003366',\r\n                    },\r\n                    emphasis: { //设置高亮样式\r\n                        shadowColor: '#25EEFE',\r\n                        areaColor: '#35ABDD', //轮播的底色\r\n                        borderWidth: 0,\r\n                        borderColor: 'rgba(147, 235, 248, 1)',\r\n                        color: '#35ABDD',\r\n                        shadowOffsetX: 6, //高亮部分的阴影偏移量\r\n                        shadowOffsetY: 10,\r\n                        shadowBlur: -10\r\n                    }\r\n                },\r\n                zoom: 1.1,\r\n                map: 'leshan', //使用\r\n                data: mapdata //热力图数据   不同区域 不同的底色\r\n            },\r\n            {\r\n                type: 'effectScatter',\r\n                coordinateSystem: 'geo',\r\n                showEffectOn: 'render',\r\n                rippleEffect: {\r\n                    period: 15,\r\n                    scale: 4,\r\n                    brushType: 'fill'\r\n                },\r\n                hoverAnimation: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#ffff',\r\n                        shadowBlur: 10,\r\n                        shadowColor: 'rgba(128, 217, 248, 1)'\r\n                    }\r\n                },\r\n            }\r\n\r\n        ]\r\n    };\r\n    myChart.setOption(option);\r\n}","html":"","externalScripts":"","updaterUID":"obd-oAgFGb6MEa5FM7lEEcZQplG8klrvv7N","theme":"","layout":"","viewCount":1187,"userName":"筱***e","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xJXIgeAXRi.png?v=1602484966808","isCustomThumbnail":0,"builtinTags":["category-work","geo","series-effectScatter","series-map","title","tooltip","visualMap"],"customTags":[],"updaterUserName":"筱***e"}}