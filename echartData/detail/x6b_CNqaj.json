{"status":0,"data":{"cid":"x6b_CNqaj","authorUid":"bd-900618179","authorUserName":"御***r","title":"数据分类统计情况","description":"可以展示同一维度不同类型的数据，也可以展示多个维度的数据","latestVersion":1,"alwaysLatest":1,"createTime":"2019-12-18T09:24:45.000Z","lastUpdateTime":"2019-12-18T09:24:45.000Z","auth":2,"uid":"bd-900618179","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.4.0","versionCreateTime":"2019-12-18T09:24:45.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1482909900836-H1BC_1WHg.json\";\n\n$.getJSON(uploadedDataURL, function(geoJson) {\n    echarts.registerMap('', geoJson); //注册 地图\n\n    // 各区中心点经纬度\n    var geoCoordMap = {};\n\n    // 柱状图纵坐标\n    var barType = []\n\n    var geoData = JSON.parse(JSON.stringify(geoJson))\n    geoData.features.forEach(e => {\n        barType.push(e.properties.name)\n        geoCoordMap[e.properties.name] = e.properties.cp\n    })\n\n    // 数据梯度或类别\n    var dataType = [\"全部\", \"A\", \"B\", \"C\"]\n    var colorType = ['#00ffea', '#00ff8c', '#f9ff00', '#ff5500']\n\n    option = {\n        // 时间轴样式\n        baseOption: {\n            timeline: {\n                axisType: 'category',\n                autoPlay: true,\n                playInterval: 5000,\n                data: dataType,\n                label: {\n                    color: 'rgba(0,168,255,.6)'\n                },\n                lineStyle: {\n                    color: '#666'\n                },\n                checkpointStyle: {\n                    color: 'rgba(0,168,255,1)',\n                    borderColor: 'rgba(0,168,255,0.3)'\n                },\n                itemStyle: {\n                    opacity: 0.3\n                },\n                controlStyle: {\n                    opacity: 0.3\n                },\n                emphasis: {\n                    label: {\n                        color: 'rgba(0,168,255,1)'\n                    },\n                    controlStyle: {\n                        color: 'rgba(0,168,255,1)',\n                        borderColor: 'rgba(0,168,255,1)',\n                        opacity: 1\n                    }\n                }\n            },\n            title: {\n                subtext: ''\n            },\n            tooltip: {},\n            calculable: true,\n            grid: {\n                top: 80,\n                bottom: 80,\n                right: '2%',\n                width: '30%'\n            },\n            geo: {\n                type: 'map',\n                mapType: 'shanghai',\n                roam: true,\n                left: \"8%\",\n                label: {\n                    normal: {\n                        show: false\n                    },\n                    emphasis: {\n                        show: false,\n                        textStyle: {\n                            color: '#000'\n                        }\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgba(0,168,255,.6)',\n                        borderWidth: 2,\n                        areaColor: 'rgba(0,81,138,.3)',\n                    },\n                    emphasis: {\n                        borderColor: 'rgba(0,168,255,.6)',\n                        borderWidth: 2,\n                        areaColor: 'rgba(0,81,138,.3)',\n                    }\n                },\n                animation: false\n            }\n        },\n        options: []\n    }\n\n    dataType.forEach((e, i) => {\n        // 柱状图模拟数据\n        var barData = [];\n        // 地图撒点数据 [{name:名字,value:[lng,lat,数值]}]\n        var mapData = []\n        // 地图飞线数据\n        var mapFlyLinesData = [];\n        var endPoint = barType[_random(0, barType.length - 1)]\n\n        barType.forEach(res => {\n            var value = _random(100, 800);\n            barData.push({\n                'name': res,\n                'value': value\n            })\n\n            var point = JSON.parse(JSON.stringify(geoCoordMap[res]));\n            point.push(value)\n            mapData.push({\n                'name': res,\n                'value': point\n            })\n\n            if (endPoint === res) return;\n            mapFlyLinesData.push([{\n                coord: geoCoordMap[res]\n            }, {\n                coord: geoCoordMap[endPoint]\n            }])\n        })\n\n\n        // change options\n        option.options.push({\n            title: [{\n                id: 'title1',\n                text: e + \"数据类型分析统计\",\n                right: '5%',\n                top: '2%',\n                textStyle: {\n                    color: '#fff',\n                    fontSize: 22\n                }\n            }],\n            xAxis: {\n                type: 'value',\n                scale: true,\n                position: 'top',\n                min: 0,\n                boundaryGap: false,\n                splitLine: {\n                    show: false\n                },\n                axisLine: {\n                    show: false\n                },\n                axisTick: {\n                    show: false\n                },\n                axisLabel: {\n                    margin: 2,\n                    textStyle: {\n                        color: '#aaa'\n                    }\n                },\n            },\n            yAxis: {\n                type: 'category',\n                nameGap: 16,\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#ddd'\n                    }\n                },\n                axisTick: {\n                    show: false,\n                    lineStyle: {\n                        color: '#ddd'\n                    }\n                },\n                axisLabel: {\n                    interval: 0,\n                    textStyle: {\n                        color: '#ddd'\n                    }\n                },\n                data: barType\n            },\n            series: [\n                // scatter 数据映射\n                {\n                    name: 'point',\n                    type: 'scatter',\n                    coordinateSystem: 'geo',\n                    data: mapData,\n                    symbolSize: function(val) {\n                        return val[2] / 30;\n                    },\n                    itemStyle: {\n                        normal: {\n                            color: colorType[i]\n                        }\n                    }\n                },\n                // effectScatter 点位动画 数据映射  此层覆盖掉scatter层 若想看上一层可把此obj注销 或提高上一层的层级\n                {\n                    type: 'effectScatter',\n                    coordinateSystem: 'geo',\n                    data: mapData,\n                    symbolSize: function(val) {\n                        return val[2] / 30;\n                    },\n                    showEffectOn: 'render',\n                    rippleEffect: {\n                        brushType: 'stroke'\n                    },\n                    hoverAnimation: true,\n                    label: {\n                        normal: {\n                            formatter: '{b}',\n                            position: 'right',\n                            show: true\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            color: colorType[i],\n                            shadowBlur: 10,\n                            shadowColor: colorType[i]\n                        }\n                    },\n                    zlevel: 1\n                },\n                //飞线层\n                {\n                    type: 'lines',\n                    zlevel: 2,\n                    effect: {\n                        show: true,\n                        period: 4, //箭头指向速度，值越小速度越快\n                        trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\n                        symbol: 'arrow', //箭头图标\n                        symbolSize: 3, //图标大小\n                    },\n                    lineStyle: {\n                        normal: {\n                            color: colorType[i],\n                            width: 0.1, //尾迹线条宽度\n                            opacity: 0.5, //尾迹线条透明度\n                            curveness: .3 //尾迹线条曲直度\n                        }\n                    },\n                    data: mapFlyLinesData\n                },\n                //柱状图\n                {\n                    zlevel: 1.5,\n                    type: 'bar',\n                    symbol: 'none',\n                    itemStyle: {\n                        normal: {\n                            color: colorType[i]\n                        }\n                    },\n                    data: barData\n                }\n            ]\n        })\n    })\n\n\n    myChart.setOption(option)\n})\n\n\nfunction _random(a, b) {\n    return Math.round(Math.random() * Math.abs(b - a) + a)\n}","html":"","externalScripts":"","updaterUID":"bd-900618179","theme":"dark","layout":"","viewCount":1660,"userName":"御***r","commentCount":0,"starCount":11,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x6b_CNqaj.png?v=1576661085539","isCustomThumbnail":0,"builtinTags":["category-work","geo","grid","series-bar","series-effectScatter","series-lines","series-scatter","timeline","title","tooltip"],"customTags":[],"updaterUserName":"御***r"}}