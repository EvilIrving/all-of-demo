{"status":0,"data":{"cid":"x3L6KdgQ5v","authorUid":"obd-otBkcV3qP49bbx1vf-8xtVXISLv5n8z","authorUserName":"8***0","title":"正态分布图曲线图","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2022-01-19T05:56:29.000Z","lastUpdateTime":"2022-01-19T07:30:22.000Z","auth":2,"uid":"obd-otBkcV3qP49bbx1vf-8xtVXISLv5n8z","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"5.2.2","versionCreateTime":"2022-01-19T07:30:22.000Z","code":"//计算正态数值分布频率\nfunction fun(x, u, a) {\n    return (1 / Math.sqrt(2 * Math.PI)) * a * Math.exp((-1 * ((x - u) * (x - u))) / (2 * a * a));\n}\n//给数组添加数据\nfunction addParam(arr, target) {\n    //是否是等于\n    var flag = false;\n    var target = parseFloat(target);\n    //最小\n    if (target < parseFloat(arr[0])) {\n        arr.unshift(target.toString());\n        return arr;\n    }\n\n    //最大\n    if (target > parseFloat(arr[arr.length - 1])) {\n        arr.push(target.toString());\n        return arr;\n    }\n\n    //中间\n    for (var i = 0; i < arr.length; i++) {\n        if (parseFloat(arr[i]) > target) {\n            if (arr[i - 1] == target) flag = true;\n            break;\n        }\n    }\n    if (flag) {\n        return arr;\n    } else {\n        arr.splice(i, 0, target.toString());\n        return arr;\n    }\n}\n//获取数据数组最大值\nfunction getTop(arr) {\n    var maxIndex = 0;\n    for (var i = 0; i < arr.length; i++) {\n        maxIndex = parseFloat(arr[i]) > parseFloat(arr[maxIndex]) ? i : maxIndex;\n    }\n    return parseFloat(arr[maxIndex]);\n}\n//构造正态曲线特定值对象\nfunction getParam(low, mean, up, top) {\n    var res = {};\n    res['low'] = low;\n    res['mean'] = mean;\n    res['up'] = up;\n    res['top'] = top;\n\n    return res;\n}\n//求数组和\nvar getSum = function (x, y) {\n    return parseFloat(x) + parseFloat(y);\n};\n//求平均值\nvar getMean = function (arr_x, arr_y) {\n    var mean = 0;\n    var sum = 0;\n    var len = 1;\n    if (arr_x.length == arr_y.length) {\n        len = arr_y.reduce(getSum);\n        for (var i = 0; i < arr_x.length; i++) {\n            sum = sum + parseFloat(arr_x[i]) * parseFloat(arr_y[i]);\n        }\n    } else {\n    }\n    mean = (sum / len).toFixed(0);\n    return mean;\n};\n//求标准偏差\nvar getStdev = function (arr_x, arr_y, avg) {\n    var sum = 0;\n    var len = arr_y.reduce(getSum); //总样本数\n    var subtractAvg = [];\n    for (var i = 0; i < arr_x.length; i++) {\n        //做平均差平方\n        subtractAvg.push((arr_x[i] - avg) * (arr_x[i] - avg));\n    }\n    for (var j = 0; j < subtractAvg.length; j++) {\n        //平均差平方和\n        sum = sum + parseFloat(subtractAvg[j]) * parseFloat(arr_y[j]);\n    }\n    return Math.sqrt(sum / len); //标准偏差\n};\n\nvar yArr = []; //正态分布频率\nvar xArr = []; //正态分布数值\n\n//数据值分布列\nvar x = [\n    2870.6894,\n    3189.6552,\n    3230.0885,\n    3293.1035,\n    3318.9655,\n    3353.448,\n    3362.0688,\n    3362.069,\n    3362.7844,\n    3362.8319,\n    3431.034,\n    3433.6283,\n    3439.655,\n    3508.6207,\n    3543.1033,\n    3543.1034,\n    3561.9475,\n    3568.3438,\n    3575.2212,\n    3575.2215,\n    3586.2069,\n    3592.9204,\n    3662.787,\n    3672.415,\n    3698.2743,\n    3706.8966,\n    3707.9646,\n    3711.2067,\n    3716.8141,\n    3716.8142,\n    3725.6636,\n    3725.6637,\n    3750.0,\n    3752.2122,\n    3752.2124,\n    3758.6207,\n    3775.862,\n    3787.6106,\n    3813.8078,\n    3823.0088,\n    3827.4336,\n    3827.5862,\n    3831.8584,\n    3839.9947,\n    3853.4483,\n    3853.4494,\n    3902.655,\n    3902.6551,\n    3911.5,\n    3938.053,\n    3942.4761,\n    3948.2761,\n    3961.1901,\n    4008.6207,\n    4043.1034,\n    4060.3448,\n    4083.0573,\n    4116.3791,\n    4116.3792,\n    4120.6897,\n    4129.3103,\n    4146.5517,\n    4159.292,\n    4163.7931,\n    4172.4118,\n    4172.4134,\n    4241.3793,\n    4491.3788,\n];\n//console.log(x);\n//数据值频数数组\nvar y = [\n    1,\n    2,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    1,\n    1,\n    2,\n    1,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    3,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    4,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    2,\n    1,\n    1,\n    1,\n    1,\n    1,\n];\n//console.log(y);\nvar mean = parseFloat(getMean(x, y)); //平均值\n//console.log(\"平均值:\"+mean);\nvar stdev = parseFloat(getStdev(x, y, mean)); //\n//console.log(\"标准偏差:\"+stdev);\n\n//正态分布3倍标准差范围\nvar low = mean - 1 * stdev;\nvar up = mean + 1 * stdev;\n\nxArr = x.concat();\nxArr = addParam(xArr, low.toFixed(0).toString()); //增加最小值整数\nxArr = addParam(xArr, mean.toFixed(0).toString()); //增加平均值整数\nxArr = addParam(xArr, up.toFixed(0).toString()); //增加最大值整数\n\nvar top = (1 / Math.sqrt(2 * Math.PI)) * stdev;\nvar mar = getParam(low.toFixed(0).toString(), mean.toFixed(0).toString(), up.toFixed(0).toString(), top);\n//console.log(mar);\n\nfor (var j = 0; j < x.length; j++) {\n    var res = fun(x[j], mean, stdev).toFixed(4);\n    yArr.push(res);\n}\n\nvar colors = ['#4BD3D6', '#FA61A3', '#0070C0', '#FF3428'];\noption = {\n   \n    color: colors,\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'cross',\n            \n        },\n    },\n    grid: {\n        right: '15%',\n    },\n    legend: {\n        data: ['原数据频数', '正态分布'],\n    },\n    xAxis: [\n        {\n            type: 'category',\n\n            axisTick: {\n                alignWithLabel: true,\n            },\n            data: x,\n        },\n    ],\n    yAxis: [\n        {\n            type: 'value',\n            name: '概率',\n            position: 'right',\n            axisLine: {\n                lineStyle: {\n                    color: colors[1],\n                },\n            },\n            axisLabel: {\n                formatter: '{value}',\n            },\n        },\n        {\n            type: 'value',\n            name: '频数',\n            position: 'left',\n            axisLine: {\n                lineStyle: {\n                    color: colors[0],\n                },\n            },\n            axisLabel: {\n                formatter: '{value}',\n            },\n        },\n    ],\n    series: [\n        {\n            name: '原数据频数',\n            type: 'bar',\n            yAxisIndex: 1,\n            data: y,\n        },\n        {\n            name: '正态分布',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 0,\n            data: yArr,\n        },\n        {\n            name: '满分线',\n            type: 'line',\n            markLine: {\n                itemStyle: {\n                    color: '#000',\n                    normal: {\n                        lineStyle: {\n                            width: 2,\n                            color: colors[2],\n                            type: 'solid', //'dotted'虚线 'solid'实线\n                        },\n                        label: {\n                            show: true,\n                            position: 'end',\n                            color: 'black',\n                            formatter: function (params) {\n                                str = mar.low;\n                                return str;\n                            },\n                        },\n                    },\n                },\n                name: 'low',\n                //symbol:'none',//去掉箭头\n                data: [\n                    [\n                        {\n                            coord: [mar.low, 0],\n                        },\n                        {\n                            coord: [mar.low, mar.top],\n                        }, //如何获取grid上侧最大值，目前是写死的\n                    ],\n                ],\n            },\n        },\n        {\n            name: '及格线',\n            type: 'line',\n            markLine: {\n                itemStyle: {\n                    color: '#000',\n                    normal: {\n                        lineStyle: {\n                            width: 2,\n                            color: colors[3],\n                            type: 'solid', //'dotted'虚线 'solid'实线\n                        },\n                        label: {\n                            show: true,\n                            position: 'end',\n                            color: 'black',\n                            formatter: function (params) {\n                                str = mar.up;\n                                return str;\n                            },\n                        },\n                    },\n                },\n                name: 'up',\n                yAxisIndex: 0,\n                //symbol: 'none',//去掉箭头\n                data: [\n                    [\n                        {\n                            coord: [mar.up, 0],\n                        },\n                        {\n                            coord: [mar.up, mar.top],\n                        }, //如何获取grid上侧最大值，目前是写死的\n                    ],\n                ],\n            },\n        },\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-otBkcV3qP49bbx1vf-8xtVXISLv5n8z","theme":"","layout":"","viewCount":0,"userName":"8***0","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x3L6KdgQ5v.png?v=1642577423037","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","markLine","series-bar","series-line","tooltip"],"customTags":[],"updaterUserName":"8***0"}}