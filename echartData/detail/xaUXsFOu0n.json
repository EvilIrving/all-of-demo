{"status":0,"data":{"cid":"xaUXsFOu0n","authorUid":"bd-258458457","authorUserName":"破***火","title":"时间轴随机点","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2019-06-20T06:33:05.000Z","lastUpdateTime":"2019-06-20T06:33:05.000Z","auth":2,"uid":"bd-258458457","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-20T07:41:00.000Z","code":"let data = [],\n    randomLen = 40,\n    timelineData = Array.from({\n        length: randomLen\n    }).map((item, idx) => {\n        item = 'Person' + idx\n        return item\n    }),\n    itemStyle = {\n        normal: {\n            opacity: 0.8,\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n    },\n    levelData = ['进门', '点餐', '取餐', '离开'],\n    seriesData = Array.from({\n        length: randomLen\n    }).map((item, idx) => {\n        return [\n            [\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 40),\n                levelData[Math.ceil(Math.random() * levelData.length-1)],\n                'Person' + Math.ceil(Math.random() * randomLen)\n            ],\n            [\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 50),\n                levelData[Math.ceil(Math.random() * levelData.length-1)],\n                'Person' + Math.ceil(Math.random() * randomLen)\n            ],\n            [\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 60),\n                levelData[Math.ceil(Math.random() * levelData.length-1)],\n                'Person' + Math.ceil(Math.random() * randomLen)\n            ],\n            [\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 4) - 1,\n                Math.ceil(Math.random() * 70),\n                levelData[Math.ceil(Math.random() * levelData.length-1)],\n                'Person' + Math.ceil(Math.random() * randomLen)\n            ]\n        ]\n    }),\n    sizeFunction = function(x) {\n        var y = Math.sqrt(x / 1e2) + 0.1\n        return y * 80\n    },\n    randomPoint = Math.ceil(Math.random() * 3),\n    optionsData = []\n\nfunction autoAddZero(val) {\n    return val < 10 ? '0' + val : val\n}\n\nfunction createXaxisData() {\n    return [\n        createTime(),\n        createTime(),\n        createTime(),\n        createTime()\n    ]\n}\n\nfunction createTime() {\n    return `${autoAddZero(Math.ceil(Math.random()*23))}:${autoAddZero(Math.ceil(Math.random()*59))}:${autoAddZero(Math.ceil(Math.random()*59))}`\n}\n\noption = {\n    animation: false,\n    baseOption: {\n        title: {\n            text: '单轴散点图'\n        },\n        timeline: {\n            axisType: 'category',\n            orient: 'vertical',\n            autoPlay: true,\n            inverse: true,\n            playInterval: 10000,\n            left: null,\n            right: 0,\n            top: 20,\n            bottom: 20,\n            width: 80,\n            height: null,\n            label: {\n                normal: {\n                    textStyle: {\n                        color: '#999'\n                    }\n                },\n                emphasis: {\n                    textStyle: {\n                        color: '#fff'\n                    }\n                }\n            },\n            symbol: 'none',\n            lineStyle: {\n                color: '#555'\n            },\n            checkpointStyle: {\n                color: '#bbb',\n                borderColor: '#777',\n                borderWidth: 2\n            },\n            controlStyle: {\n                showNextBtn: false,\n                showPrevBtn: false,\n                normal: {\n                    color: '#666',\n                    borderColor: '#666'\n                },\n                emphasis: {\n                    color: '#aaa',\n                    borderColor: '#aaa'\n                }\n            },\n            data: []\n        },\n        xAxis: {\n            type: 'category',\n            // boundaryGap: false,\n            axisTick: {\n                // show: false\n            },\n            axisLabel: {\n                align: 'center'\n            },\n            data: createXaxisData()\n        },\n        yAxis: {\n            type: 'category',\n            data: levelData,\n            splitLine: {\n                lineStyle: {\n                    color: '#f00'\n                }\n            },\n            // splitArea: {\n            //     show: true,\n            //     areaStyle: {\n            //         color: ['rgba(0,0,0,.3)', 'rgba(0,255,0,.3)', 'rgba(0,0,255,.3)', 'rgba(255,0,0,.3)']\n            //     }\n            // }\n        },\n        visualMap: [\n            {\n                show: false,\n                dimension: 3,\n                categories: levelData,\n                calculable: true,\n                precision: 0.1,\n                textGap: 30,\n                textStyle: {\n                    color: '#ccc'\n                },\n                inRange: {\n                    color: (function () {\n                        var colors = ['#000', '#0f0', '#00f', '#f00'];\n                        return colors.concat(colors);\n                    })()\n                }\n            }\n        ],\n        series: [{\n            type: 'scatter',\n            itemStyle: itemStyle,\n            data: seriesData[0],\n            label: {\n                normal: {\n                    show: true\n                }\n            },\n            formatter: (params) => {\n                return params.seriesName\n            },\n            symbolSize: function(val) {\n                return sizeFunction(val[2]);\n            }\n        }],\n\n        tooltip: {},\n    },\n    options: optionsData\n}\n\nconsole.log(seriesData)\n\ntimelineData.forEach((item, idx) => {\n    option.baseOption.timeline.data.push(item)\n    optionsData.push({\n        title: {\n            show: true,\n            'text': item + ''\n        },\n        xAxis: {\n            data: createXaxisData()\n        },\n        series: {\n            name: item,\n            label: {\n                normal: {\n                    show: true,\n                    formatter: (params) => {\n                        return params.seriesName\n                    },\n                }\n            },\n            itemStyle: itemStyle,\n            type: 'scatter',\n            data: seriesData[idx],\n            symbolSize: function(val) {\n                return sizeFunction(val[2]);\n            }\n        }\n    })\n})\n\nconsole.log(option)","html":"","externalScripts":"","updaterUID":"bd-258458457","theme":"","layout":"","viewCount":716,"userName":"破***火","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xaUXsFOu0n.png?v=1561016460380","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-scatter","timeline","title","tooltip","visualMap"],"customTags":[],"updaterUserName":"破***火"}}