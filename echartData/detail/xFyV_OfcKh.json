{"status":0,"data":{"cid":"xFyV_OfcKh","authorUid":"bd-3893175972","authorUserName":"q***3","title":"城市标准数量","description":"","latestVersion":7,"alwaysLatest":1,"createTime":"2020-04-11T11:41:51.000Z","lastUpdateTime":"2020-04-11T11:41:51.000Z","auth":2,"uid":"bd-3893175972","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":7,"parentVersion":6,"echartsVersion":"4.7.0","versionCreateTime":"2020-04-22T15:11:12.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1586603611317--TJASLTUQ.json\";\n    var originData;\n    var linqData;\n    var StdType;\n    var FinalData = [];\n    $.getJSON(uploadedDataURL, function (data) {\n        originData = data;\n        linqData = JSLINQ(data.data);\n        StdType = linqData.Distinct(function (o) { return o.stdtype })\n        // console.log(linqData);\n        //console.log(StdType);\n\n        for (var i in StdType.items) {\n            var typedata = linqData.Where(function (o) { return o.stdtype == StdType.items[i] });\n            // console.log(typedata);\n            var FD = {\n                name: StdType.items[i],\n                type: 'bar',\n                stack: '企业标准',\n                data: []\n            };\n\n            for (var j in originData.city) {\n                var item = typedata.Where(function (o) { return o.city == originData.city[j] });\n                //console.log(item);\n\n                if (item.items.length > 0) {\n                    FD.data.push(item.items[0].name)\n                }\n                else {\n                    FD.data.push(0)\n                }\n            }\n            FinalData.push(FD);\n        }\n\n        // console.log(FinalData);\n\n       var option  = {\n       title: {\n        text: '全国各城市企业自我声明标准情况',\n        textStyle: {\n            align: 'center',\n            color: '#fff',\n            fontSize: 20,\n        },\n        top: '1%',\n        left: 'center',\n    },\n            color: [\"#4AA3FF\", \"#9967FA\", \"#00FED9\", \"#EFE26F\", \"#8DBB93\", \"#FB8993\", \"#FFB880\"],\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                },\n                //formatter: '{b0}<br /> {a0}:{c0}________________{a1}:{c1}<br /> {a2}:{c2}________________{a3}:{c3}<br /> {a4}:{c4}________________{a5}:{c5}<br /> {a6}:{c6}________________{a7}:{c7}<br /> {a8}:{c8}________________{a9}:{c9}<br /> {a10}:{c10}________________{a11}:{c11}<br /> {a12}:{c12}________________{a13}:{c13}<br /> {a14}:{c14}________________{a15}:{c15}<br /> {a16}:{c16}________________{a17}:{c17}<br /> {a18}:{c18}________________{a19}:{c19}<br /> {a20}:{c20}________________{a21}:{c21}<br /> {a22}:{c22}________________{a23}:{c23}<br /> {a24}:{c24}________________{a25}:{c25}<br /> {a26}:{c26}________________{a27}:{c27}<br /> {a28}:{c28}________________{a29}:{c29}<br /> {a30}:{c30}________________{a31}:{c31}<br /> {a32}:{c32}________________{a33}:{c33}<br /> {a34}:{c34}________________{a35}:{c35}<br /> {a36}:{c36}________________{a37}:{c37}<br /> {a38}:{c38}________________{a39}:{c39}<br /> {a40}:{c40}________________{a41}:{c41}'\n            },\n            dataZoom: [\n                  {\n                      type: 'inside',\n                      show: true,\n                      xAxisIndex: [0],\n                      start: 0,\n                      end: 5\n                  }],\n            grid: {\n                top: \"5%\",\n                left: '3%',\n                right: '4%',\n                bottom: '0%',\n                containLabel: true\n            },\n            xAxis: [{\n                type: 'category',\n                axisLine: {\n                    lineStyle: {\n                        color: \"#4169E1\"\n                    }\n                },\n                data: originData.city\n            }],\n            yAxis: [{\n                type: 'value',\n                axisLine: {\n                    lineStyle: {\n                        color: \"#4169E1\"\n                    }\n                },\n                splitLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#4169E1'\n                    }\n                },\n            }],\n            series: FinalData\n        };\n\n\n    myChart.setOption(option);\n\n    });\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    (function() {\n    JSLINQ = window.JSLINQ = function(dataItems) {\n        return new JSLINQ.fn.init(dataItems);\n    };\n    JSLINQ.fn = JSLINQ.prototype = {\n        init: function(dataItems) {\n            this.items = dataItems;\n        },\n\n        // The current version of JSLINQ being used\n        jslinq: \"2.10\",\n\n        ToArray: function() { return this.items; },\n        Where: function(clause) {\n            var item;\n            var newArray = new Array();\n\n            // The clause was passed in as a Method that return a Boolean\n            for (var index = 0; index < this.items.length; index++) {\n                if (clause(this.items[index], index)) {\n                    newArray[newArray.length] = this.items[index];\n                }\n            }\n            return new JSLINQ(newArray);\n        },\n        Select: function(clause) {\n            var item;\n            var newArray = new Array();\n\n            // The clause was passed in as a Method that returns a Value\n            for (var i = 0; i < this.items.length; i++) {\n                if (clause(this.items[i])) {\n                    newArray[newArray.length] = clause(this.items[i]);\n                }\n            }\n            return new JSLINQ(newArray);\n        },\n        OrderBy: function(clause) {\n            var tempArray = new Array();\n            for (var i = 0; i < this.items.length; i++) {\n                tempArray[tempArray.length] = this.items[i];\n            }\n            return new JSLINQ(\n            tempArray.sort(function(a, b) {\n                var x = clause(a);\n                var y = clause(b);\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n            })\n        );\n        },\n        OrderByDescending: function(clause) {\n            var tempArray = new Array();\n            for (var i = 0; i < this.items.length; i++) {\n                tempArray[tempArray.length] = this.items[i];\n            }\n            return new JSLINQ(\n            tempArray.sort(function(a, b) {\n                var x = clause(b);\n                var y = clause(a);\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n            })\n        );\n        },\n        SelectMany: function(clause) {\n            var r = new Array();\n            for (var i = 0; i < this.items.length; i++) {\n                r = r.concat(clause(this.items[i]));\n            }\n            return new JSLINQ(r);\n        },\n        Count: function(clause) {\n            if (clause == null)\n                return this.items.length;\n            else\n                return this.Where(clause).items.length;\n        },\n        Distinct: function(clause) {\n            var item;\n            var dict = new Object();\n            var retVal = new Array();\n            for (var i = 0; i < this.items.length; i++) {\n                item = clause(this.items[i]);\n                // TODO - This doens't correctly compare Objects. Need to fix this\n                if (typeof (item) == \"object\") {\n                    if (dict[item[\"ID\"]] == null) {\n                        dict[item[\"ID\"]] = true;\n                        retVal[retVal.length] = item;\n                    }\n                }\n                else {\n                    if (dict[item] == null) {\n                        dict[item] = true;\n                        retVal[retVal.length] = item;\n                    }\n                }\n\n            }\n            dict = null;\n            return new JSLINQ(retVal);\n        },\n        Any: function(clause) {\n            for (var index = 0; index < this.items.length; index++) {\n                if (clause(this.items[index], index)) { return true; }\n            }\n            return false;\n        },\n        All: function(clause) {\n            for (var index = 0; index < this.items.length; index++) {\n                if (!clause(this.items[index], index)) { return false; }\n            }\n            return true;\n        },\n        Reverse: function() {\n            var retVal = new Array();\n            for (var index = this.items.length - 1; index > -1; index--)\n                retVal[retVal.length] = this.items[index];\n            return new JSLINQ(retVal);\n        },\n        First: function(clause) {\n            if (clause != null) {\n                return this.Where(clause).First();\n            }\n            else {\n                // If no clause was specified, then return the First element in the Array\n                if (this.items.length > 0)\n                    return this.items[0];\n                else\n                    return null;\n            }\n        },\n        Last: function(clause) {\n            if (clause != null) {\n                return this.Where(clause).Last();\n            }\n            else {\n                // If no clause was specified, then return the First element in the Array\n                if (this.items.length > 0)\n                    return this.items[this.items.length - 1];\n                else\n                    return null;\n            }\n        },\n        ElementAt: function(index) {\n            return this.items[index];\n        },\n        Concat: function(array) {\n            var arr = array.items || array;\n            return new JSLINQ(this.items.concat(arr));\n        },\n        Intersect: function(secondArray, clause) {\n            var clauseMethod;\n            if (clause != undefined) {\n                clauseMethod = clause;\n            } else {\n                clauseMethod = function(item, index, item2, index2) { return item == item2; };\n            }\n\n            var sa = secondArray.items || secondArray;\n\n            var result = new Array();\n            for (var a = 0; a < this.items.length; a++) {\n                for (var b = 0; b < sa.length; b++) {\n                    if (clauseMethod(this.items[a], a, sa[b], b)) {\n                        result[result.length] = this.items[a];\n                    }\n                }\n            }\n            return new JSLINQ(result);\n        },\n        DefaultIfEmpty: function(defaultValue) {\n            if (this.items.length == 0) {\n                return defaultValue;\n            }\n            return this;\n        },\n        ElementAtOrDefault: function(index, defaultValue) {\n            if (index >= 0 && index < this.items.length) {\n                return this.items[index];\n            }\n            return defaultValue;\n        },\n        FirstOrDefault: function(defaultValue) {\n            return this.First() || defaultValue;\n        },\n        LastOrDefault: function(defaultValue) {\n            return this.Last() || defaultValue;\n        }\n    };\n    JSLINQ.fn.init.prototype = JSLINQ.fn;\n    })();","html":"","externalScripts":"","updaterUID":"bd-3893175972","theme":"dark","layout":"","viewCount":285,"userName":"q***3","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xFyV_OfcKh.png?v=1587568272867","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","series-bar","title","tooltip"],"customTags":[],"updaterUserName":"q***3"}}