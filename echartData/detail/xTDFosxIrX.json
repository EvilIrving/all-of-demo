{"status":0,"data":{"cid":"xTDFosxIrX","authorUid":"bd-1158218442","authorUserName":"J***r","title":"星轨","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2018-12-07T02:25:39.000Z","lastUpdateTime":"2018-12-07T02:25:39.000Z","auth":2,"uid":"bd-1158218442","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.0","versionCreateTime":"2018-12-07T02:25:39.000Z","code":"// github: github.com/jackshawn/pics-by-echarts\n\nlet w = document.getElementById('chart-panel').offsetWidth\nlet h = document.getElementById('chart-panel').offsetHeight\n\nlet getColor = function() {\n    let color = ['#dadc21', '#b4d0e1', '#9fa085', '#304635', '#323b4a', '#285473', '#9ac2dd', '#0263bb', '#abb8bf', '#daecfc', '#0f7fbd', '#bacbcc', '#738792', '#008bea', '#ccc', '#ccc', '#ccc', '#fff', '#fff', '#fff']\n    return color[Math.random() * color.length | 0]\n}\n\nlet getNodes = function() {\n    let deg = 10; // 角度\n    let p = Math.PI * 2 / 360;\n    let r;\n    let x1, y1, x2, y2;\n\n    x1 = w * (Math.random() - .6);\n    y1 = h * (Math.random() - .7);\n    r = Math.sqrt(x1 * x1 + y1 * y1)\n\n\n    let a, b;\n    if(x1 > 0 && y1 > 0) {\n        a = 1;\n        b = 1;\n    }\n    if(x1 < 0 && y1 < 0) {\n        a = -1;\n        b = -1;\n    }\n    if(x1 > 0 && y1 < 0) {\n        a = -1;\n        b = 1;\n    }\n    if(x1 < 0 && y1 > 0) {\n        a = 1;\n        b = -1;\n    }\n\n    x2 = Math.cos((Math.acos(x1 / r) / p + a * deg) * p) * r\n    y2 = Math.sin((Math.asin(y1 / r) / p + b * deg) * p) * r\n\n    if(x2 < w * .4 && x2 > -1 * w * .6 && y2 < h * .3 && y2 > -1 * h * .7) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n        }\n    } else {\n        return getNodes()\n    }\n}\n\n\noption = {\n    grid: {\n        top: '0',\n        right: '0',\n        bottom: '0',\n        left: '0',\n    },\n    backgroundColor: new echarts.graphic.RadialGradient(0.6, 0.7, 1, [{\n        offset: 0,\n        color: '#061734'\n    }, {\n        offset: 1,\n        color: '#030b19'\n    }], false),\n    xAxis: [{\n        boundaryGap: false,\n        data: new Array(10),\n        splitLine: {\n            show: false\n        }\n    }],\n    yAxis: [\n        {\n            min: 0,\n            max: 10,\n            type: 'value',\n            splitLine: {\n                show: false\n            }\n\n        }\n    ],\n    series: [\n        {\n            type: 'graph',\n            width: w,\n            height: h,\n            data: [\n                {\n                    symbolSize: 1,\n                    x: -240,\n                    y: -140\n                },\n                {\n                    symbolSize: 1,\n                    x: 160,\n                    y: 60\n                },\n                {\n                    name: 'center',\n                    symbolSize: 1,\n                    x: 0,\n                    y: 0\n                },\n\n            ],\n            links: [],\n            lineStyle: {\n                curveness: 0.055,\n            }\n\n        },\n        {\n            type: 'line',\n            areaStyle: {\n                normal: {\n                    color: '#000',\n                    opacity: 1\n                }\n            },\n            data: (() => {\n                let arr = []\n                for(let i = 0; i < 10; i++) {\n                    arr.push(Math.random() * 2 + 1)\n                }\n                arr[0] = 0;\n                arr[1] = 1;\n                arr[9] = 1;\n                arr[6] = 3;\n                return arr;\n            })(),\n\n            symbolSize: 0,\n            lineStyle: {\n                normal: {\n                    width: 0\n                }\n            },\n            animationDelayUpdate: function(idx) {\n                return idx * 5;\n            }\n        },\n    ]\n};\n\nfor(let i = 0; i < 500; i++) {\n\n    let {x1, y1, x2, y2} = getNodes()\n\n    option.series[0].data.push({\n        name: 'source' + i,\n        symbolSize: Math.random() > .7 ? 1 : 0,\n        x: x1,\n        y: y1,\n        itemStyle: {\n            color: getColor(),\n            opacity: Math.random(),\n        }\n    })\n    option.series[0].data.push({\n        name: 'target' + i,\n        symbolSize: Math.random() > .7 ? 1 : 0,\n        x: x2,\n        y: y2,\n        itemStyle: {\n            color: getColor(),\n            opacity: Math.random(),\n        }\n    })\n    option.series[0].links.push({\n        source: 'source' + i,\n        target: 'target' + i,\n        lineStyle: {\n            opacity: Math.random() / 2,\n            color: getColor(),\n            width: Math.random() + .5\n        }\n    })\n\n    option.series[0].data.push({\n        symbolSize: Math.random() * 3,\n        x: w * (Math.random() - .6),\n        y: h * (Math.random() - .7),\n        itemStyle: {\n            color: getColor(),\n            opacity: Math.random() / 3,\n        }\n    })\n}","html":"","externalScripts":"","updaterUID":"bd-1158218442","theme":"","layout":"","viewCount":1074,"userName":"J***r","commentCount":3,"starCount":7,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xTDFosxIrX.png?v=1544149539310","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-graph","series-line"],"customTags":[],"updaterUserName":"J***r"}}