{"status":0,"data":{"cid":"xFsaTEowS6","authorUid":"obd-oNSF9n2o3f2q71aQ-1HmDoPYN_kizCm","authorUserName":"道***我","title":"四象限图","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2020-10-30T06:21:26.000Z","lastUpdateTime":"2020-10-30T06:21:26.000Z","auth":1,"uid":"obd-oNSF9n2o3f2q71aQ-1HmDoPYN_kizCm","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"4.8.0","versionCreateTime":"2020-10-30T06:53:23.000Z","code":"var xCenter = 3;\r\nvar yCenter = 1;\r\n\r\nvar random = Math.random;\r\n\r\nvar numberWithSign = function(max) {\r\n    var sign = random() > 0.5 ? -1 : 1;\r\n    return random() * max * sign;\r\n}\r\n\r\n\r\nvar seriesData = new Array(100).fill(0).map((v, i) => ({\r\n    value: [numberWithSign(800), numberWithSign(500), random()*2000],\r\n    name: '数据' + i,\r\n}))\r\n\r\noption ={\r\n    color: ['rgba(51, 103, 214, .5)'],\r\n    tooltip: {\r\n      trigger: 'item',\r\n      backgroundColor: '#fff',\r\n      borderWidth: 1,\r\n      borderColor: '#e2e2e2',\r\n      textStyle: {\r\n        color: '#000',\r\n      },\r\n      padding: 10,\r\n      axisPointer: {\r\n        show: true,\r\n        type: 'cross',\r\n        lineStyle: {\r\n          type: 'dashed',\r\n          width: 1\r\n        },\r\n      },\r\n    },\r\n    dataZoom: [\r\n      {\r\n        type: 'slider',\r\n        xAxisIndex: 0,\r\n        filterMode: 'empty',\r\n      },\r\n      {\r\n        type: 'slider',\r\n        yAxisIndex: 0,\r\n        filterMode: 'empty',\r\n        right: 16,\r\n      },\r\n      {\r\n        type: 'inside',\r\n        xAxisIndex: 0,\r\n        filterMode: 'empty'\r\n      },\r\n      {\r\n        type: 'inside',\r\n        yAxisIndex: 0,\r\n        filterMode: 'empty'\r\n      }\r\n    ],\r\n    grid: {\r\n      left: 20,\r\n      right: 100,\r\n      top: 40,\r\n      bottom: 50,\r\n      containLabel: true,\r\n    },\r\n    visualMap: [\r\n      {\r\n        show: false,\r\n        left: 'right',\r\n        top: '10%',\r\n        // 需要映射圆形大小的数据列\r\n        dimension: 2,\r\n        itemWidth: 30,\r\n        itemHeight: 120,\r\n        calculable: true,\r\n        precision: 0.1,\r\n        text: ['圆形大小'],\r\n        padding: [30, 0, 0, 30],\r\n        textGap: 20,\r\n        textStyle: {\r\n          color: '#000'\r\n        },\r\n        inRange: {\r\n          symbolSize: [10, 70]\r\n        },\r\n        outOfRange: {\r\n          symbolSize: [10, 70],\r\n          color: ['rgba(255, 255, 255, .2)']\r\n        },\r\n        controller: {\r\n          inRange: {\r\n            color: ['rgba(51, 103, 214, .5)']\r\n          },\r\n          outOfRange: {\r\n            color: ['#e1e1e1']\r\n          }\r\n        }\r\n      },\r\n\r\n    ],\r\n    xAxis: {\r\n      type: 'value',\r\n      scale: true,\r\n      nameTextStyle: {\r\n        color: 'transparent'\r\n      },\r\n      splitLine: {\r\n        show: true,\r\n        lineStyle: {\r\n          color: '#e1e1e1'\r\n        }\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: '#999'\r\n        }\r\n      },\r\n      min: (value) => {\r\n        const ret = adjustMinMax(value, xCenter);\r\n        return toFixed(ret.min);\r\n      },\r\n      max: (value) => {\r\n        const ret = adjustMinMax(value, xCenter);\r\n        return toFixed(ret.max);\r\n      }\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      scale: true,\r\n      min: (value) => {\r\n        const ret = adjustMinMax(value, yCenter);\r\n        return toFixed(ret.min);\r\n      },\r\n      max: (value) => {\r\n        const ret = adjustMinMax(value, yCenter);\r\n        return toFixed(ret.max);\r\n      },\r\n      nameTextStyle: {\r\n        color: 'transparent'\r\n      },\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n      splitLine: {\r\n        show: true,\r\n        lineStyle: {\r\n          color: '#e1e1e1'\r\n        }\r\n      },\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: '#999'\r\n        }\r\n      }\r\n    },\r\n    series: {\r\n      type: 'scatter',\r\n      label: {\r\n        show: true,\r\n        formatter: '{b}',\r\n        // color: '#000'\r\n      },\r\n      markLine: {\r\n        animation: false,\r\n        lineStyle: {\r\n          color: '#000',\r\n          type: 'solid',\r\n          width: 2,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: 'start',\r\n          formatter: '{b}',\r\n          fontSize: 11,\r\n          color: '#666',\r\n        },\r\n        // 起 止\r\n        symbol: ['none', 'none'],\r\n        silent: true,\r\n        data: [{\r\n          xAxis: xCenter,\r\n        }, {\r\n          yAxis: yCenter,\r\n        }]\r\n      },\r\n      data: seriesData\r\n    },\r\n  };\r\n  \r\n  function adjustMinMax(value, center) {\r\n  const { min, max } = value;\r\n  let mid = center;\r\n\r\n  if (!isFinite(center)) {\r\n    mid = 0;\r\n  }\r\n  // 无数据时，随便取一个\r\n  if (!isFinite(min)) {\r\n    return {\r\n      max: mid + 2,\r\n      min: mid - 2,\r\n    };\r\n  }\r\n\r\n  const right = Math.abs(max - mid);\r\n  const left = Math.abs(mid - min);\r\n\r\n  const distance = Math.max(right, left);\r\n  const nextMax = mid + distance;\r\n  const nextMin = mid - distance;\r\n\r\n  return {\r\n    max: nextMax,\r\n    min: nextMin,\r\n  };\r\n}\r\n\r\nfunction toFixed(num) {\r\n  return Number(num.toFixed(2));\r\n}\r\n","html":"","externalScripts":"","updaterUID":"obd-oNSF9n2o3f2q71aQ-1HmDoPYN_kizCm","theme":"","layout":"","viewCount":541,"userName":"道***我","commentCount":0,"starCount":7,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xFsaTEowS6.png?v=1604040803733","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-line","title"],"customTags":["scatter"],"updaterUserName":"道***我"}}