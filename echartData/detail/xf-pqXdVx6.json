{"status":0,"data":{"cid":"xf-pqXdVx6","authorUid":"bd-357076357","authorUserName":"d***7","title":"ads","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2018-11-03T03:02:11.000Z","lastUpdateTime":"2018-11-03T03:02:11.000Z","auth":2,"uid":"bd-357076357","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.2.0","versionCreateTime":"2018-11-03T03:22:55.000Z","code":"var chart = echarts.init(document.getElementById('chart-panel'));\n\nfunction loadJSON() {\n    var i, o, n, m, l, k, j;\n    a = myChart, a.showLoading(), i = $(\".panel\").find(\"option:selected\").last(), i.attr(\"selected\", !0), \n    o = i.val().split(\"|\"), n = o[0], m = o[1], l = i.text(), k = {\n        subdistrict: 1,\n        extensions: \"all\"\n    }, j = new AMap.DistrictSearch(k), j.setSubdistrict(1), j.setLevel(n), j.search(l, function(A, z) {\n        function y() {\n            this.type = \"FeatureCollection\", this.features = [];\n        }\n        function x() {\n            this.type = \"Feature\", this.id = \"\", this.properties = {\n                name: \"\",\n                cp: [],\n                childNum: 1\n            }, this.geometry = {\n                type: \"Polygon\",\n                coordinates: []\n            };\n        }\n        function w(H, G) {\n            var F, E, D, C = [], B = [], q = [], p = H.boundaries.length;\n            if (1 === p) {\n                for (F = H.boundaries[0], E = 0; E < F.length; E++) {\n                    C[0] = F[E].lng, C[1] = F[E].lat, B.push(C), C = [];\n                }\n                G.push(B);\n            } else {\n                for (D = 0; p > D; D++) {\n                    for (F = H.boundaries[D], E = 0; E < F.length; E++) {\n                        C[0] = F[E].lng, C[1] = F[E].lat, B.push(C), C = [];\n                    }\n                    q.push(B), B = [], G.push(q), q = [];\n                }\n            }\n        }\n        function v(f) {\n            f.UTF8Encoding = !0;\n            var c = f.features;\n            return c ? (c.forEach(function(p) {\n                var g = p.geometry.encodeOffsets = [], q = p.geometry.coordinates;\n                \"Polygon\" === p.geometry.type ? q.forEach(function(b, B) {\n                    q[B] = u(b, g[B] = []);\n                }) : \"MultiPolygon\" === p.geometry.type && q.forEach(function(b, B) {\n                    g[B] = [], b.forEach(function(C, D) {\n                        q[B][D] = u(C, g[B][D] = []);\n                    });\n                });\n            }), f) : void 0;\n        }\n        function u(q, p) {\n            var F, E, D = \"\", C = t(q[0][0]), B = t(q[0][1]);\n            for (p[0] = C, p[1] = B, F = 0; F < q.length; F++) {\n                E = q[F], D += s(E[0], C), D += s(E[1], B), C = t(E[0]), B = t(E[1]);\n            }\n            return D;\n        }\n        function t(b) {\n            return Math.ceil(1024 * b);\n        }\n        function s(f, c) {\n            return f = t(f), f -= c, 8232 == 64 + (f << 1 ^ f >> 15) && f--, f = f << 1 ^ f >> 15, \n            String.fromCharCode(f + 64);\n        }\n        function r(K, J, I) {\n            var H, G, F, E = new y(), D = E.features, C = K[0], B = C.districtList, g = C.citycode, f = 0;\n            if (g.length) {\n                for (H = 0, G = B.length; G > H; H++) {\n                    f++, j.search(B[H].name, function(c, L) {\n                        function q(N, M) {\n                            var T, S, R, Q, P, O;\n                            for (T = new x(), S = [], R = [], Q = 0, P = N.length; P > Q; Q++) {\n                                if (O = N[Q], O.citycode === M) {\n                                    return T.id = O.adcode, T.properties.name = O.name, T.properties.childNum = O.boundaries.length, \n                                    T.properties.childNum > 1 && (T.geometry.type = \"MultiPolygon\"), S[0] = O.center.lng, \n                                    S[1] = O.center.lat, T.properties.cp = S, S = [], w(O, R), T.geometry.coordinates = R, \n                                    R = [], T;\n                                }\n                            }\n                        }\n                        f--;\n                        var p = L.districtList, b = q(p, m);\n                        b && D.push(b), 0 === f && (J && (E = v(E)), I(E), j.setSubdistrict(1));\n                    });\n                }\n            } else {\n                for (H = 0, G = B.length; G > H; H++) {\n                    F = B[H].name, f++, j.search(F, function(p, c) {\n                        function M(O) {\n                            var N, T, S, R, Q, P;\n                            for (N = new x(), T = [], S = [], R = 0, Q = O.length; Q > R; R++) {\n                                return P = O[R], N.id = P.adcode, N.properties.name = P.name, N.properties.childNum = P.boundaries.length, \n                                N.properties.childNum > 1 && (N.geometry.type = \"MultiPolygon\"), T[0] = P.center.lng, \n                                T[1] = P.center.lat, N.properties.cp = T, T = [], w(P, S), N.geometry.coordinates = S, \n                                S = [], N;\n                            }\n                        }\n                        f--;\n                        var L = c.districtList, q = M(L);\n                        D.push(q), 0 === f && (E = v(E), I(E), j.setSubdistrict(1));\n                    });\n                }\n            }\n        }\n        function h(H, G, F) {\n            function E(I, p) {\n                var O, N, M, L, K, J;\n                for (O = new x(), N = [], M = [], L = 0, K = I.length; K > L; L++) {\n                    if (J = I[L], J.citycode == p) {\n                        return O.id = J.adcode, O.properties.name = J.name, O.properties.childNum = J.boundaries.length, \n                        O.properties.childNum > 1 && (O.geometry.type = \"MultiPolygon\"), N[0] = J.center.lng, \n                        N[1] = J.center.lat, O.properties.cp = N, N = [], w(J, M), O.geometry.coordinates = M, \n                        O;\n                    }\n                }\n            }\n            function D(I) {\n                var p = new x(), K = [], J = [];\n                return p.id = I.adcode, p.properties.name = I.name, p.properties.childNum = I.boundaries.length, \n                p.properties.childNum > 1 && (p.geometry.type = \"MultiPolygon\"), K[0] = I.center.lng, \n                K[1] = I.center.lat, p.properties.cp = K, K = [], w(I, J), p.geometry.coordinates = J, \n                p;\n            }\n            var C, B = new y(), q = B.features, g = H[0], f = (g.citycode, g.level);\n            C = \"district\" === f ? E(H, m) : D(g), q.push(C), G && (B = v(B)), F(B), j.setSubdistrict(1);\n        }\n        function e(f) {\n            var g = f.features.map(function(b) {\n                return {\n                    name: b.properties.name,\n                    height: 2 * Math.random() + 1\n                };\n            });\n            echarts.registerMap(\"mapArea\", f), $(\"#\" + a.getDom().id).contextmenu(function() {\n                return !1;\n            }), a.clear(), a.setOption({\n                color: [ \"#dd6b66\", \"#759aa0\", \"#e69d87\", \"#8dc1a9\", \"#ea7e53\", \"#eedd78\", \"#73a373\", \"#73b9bc\", \"#7289ab\", \"#91ca8c\", \"#f49f42\" ],\n                backgroundColor: \"#333\",\n                textStyle: {\n                    color: \"#eee\",\n                    fontFamily: \"Microsoft YaHei\",\n                    fontSize: 12,\n                    fontStyle: \"normal\",\n                    fontWeight: \"normal\"\n                },\n                title: {\n                    text: $(\".panel select:eq(-2) option:selected\").text(),\n                    textStyle: {\n                        color: \"#fff\"\n                    }\n                },\n                geo3D: {\n                    map: \"mapArea\",\n                    environment: \"/asset/get/s/data-1491837999815-H1_44Qtal.jpg\",\n                    itemStyle: {\n                        borderColor: \"rgba(100,149,237,1)\",\n                        borderWidth: 1.5\n                    },\n                    shading: \"lambert\",\n                    lambertMaterial: {\n                        baseTexture: \"/asset/get/s/data-1491896059428-B1QbPbq6e.jpg\",\n                        textureTiling: 20\n                    },\n                    regions: g\n                }\n            }), a.on(\"geoselectchanged\", function(b) {\n                $(\".panel select:last-child option\").each(function() {\n                    return $(this).text() == b.batch[0].name ? ($(this).attr(\"selected\", !0), void loadJSON()) : void 0;\n                });\n            }), a.getZr().on(\"mousedown\", function(b) {\n                switch (b.event.which) {\n                  case 3:\n                    $(\".panel select\").length > 2 && ($(\".panel select:last-child\").remove(), $(\".panel select:last-child\").remove(), \n                    loadJSON());\n                }\n            }), a.hideLoading();\n        }\n        switch (n) {\n          case \"district\":\n          case \"biz_area\":\n            h(z.districtList, !0, e);\n            break;\n\n          case \"city\":\n          case \"province\":\n            r(z.districtList, !0, e);\n\n          default:\n            var d = $(\"<select></select>\");\n            switch (d.change(function() {\n                $(this).nextAll().remove(), $(this).val() || $(this).remove(), loadJSON();\n            }), d.appendTo($(\".panel\")), n) {\n              case \"country\":\n                d.append($('<option value=\"\">--  所有省(行政区,直辖市)  --</option>'));\n                break;\n\n              case \"province\":\n                d.append($('<option value=\"\">--  所有城市  --</option>'));\n                break;\n\n              case \"city\":\n                d.append($('<option value=\"\">--  所有区县  --</option>'));\n            }\n            z.districtList[0].districtList.forEach(function(b) {\n                d.append($('<option value=\"' + b.level + (b.citycode ? \"|\" + b.citycode : \"\") + '\">' + b.name + \"</option>\"));\n            }), \"country\" == n && ($(\".panel\").find(\"option\").last().attr(\"selected\", !0), loadJSON());\n        }\n    });\n}\nchart.on('click', function(params) {\n    alert(\"click\");\n    loadMap(params.name, 10);\n});\n$(\"body\").append($('<div class=\"panel\" style=\"position: absolute;background-color: #fff;border: solid 1px silver;box-shadow: 3px 4px 3px 0px silver;right: 10px;top: 10px;padding: 5px 10px;font-size: 12px;border-radius: 4px\">请选择区域：<select><option selected=\"selected\" value=\"country\">中国</option></select></div>')), \nloadJSON();","html":"","externalScripts":"http://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js,/dep/echarts/map/js/china.js,http://webapi.amap.com/maps?v=1.3&key=9d4f5c2078ba12cb9d9d09c4e81c95d0&plugin=AMap.DistrictSearch","updaterUID":"bd-357076357","theme":"","layout":"","viewCount":34,"userName":"d***7","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xf-pqXdVx6.png?v=1541215375701","isCustomThumbnail":0,"builtinTags":["category-work","geo3D","title"],"customTags":[],"updaterUserName":"d***7"}}