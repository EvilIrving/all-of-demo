{"status":0,"data":{"cid":"xBJVgCUFyz","authorUid":"bd-1025214267","authorUserName":"d***e","title":"折叠关系图","description":"折叠关系图graph","latestVersion":2,"alwaysLatest":1,"createTime":"2017-11-15T06:25:47.000Z","lastUpdateTime":"2017-11-15T06:25:47.000Z","auth":2,"uid":"bd-1025214267","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"3.8.0","versionCreateTime":"2017-11-15T06:32:51.000Z","code":"var timeFn=null; \r\nvar sourceData = {\r\n            nodes: [\r\n                {name:'0',label:'xx大学',number:40, flag: 1, category: 0},\r\n                {name:'1',label:'校区1',number:30, flag: 0, category: 1},\r\n                {name:'2',label:'学院1',number:20, flag: 0, category: 2},\r\n                {name:'3',label:'学院2',number:20, flag: 0, category: 2},\r\n                {name:'4',label:'校区2',number:30, flag: 0, category: 1},\r\n                {name:'5',label:'学院1',number:20, flag: 0, category: 2},\r\n                {name:'6',label:'学院2',number:20, flag: 0, category: 2},\r\n                {name:'7',label:'学院3',number:20, flag: 0, category: 2},\r\n                {name:'8',label:'校区3',number:30, flag: 0, category: 1},\r\n                {name:'9',label:'学院1',number:20, flag: 0, category: 2},\r\n                {name:'10',label:'学院2',number:20, flag: 0, category: 2},\r\n                {name:'11',label:'学院3',number:20, flag: 0, category: 2},\r\n                {name:'12',label:'学院4',number:20, flag: 0, category: 2},\r\n                {name:'13',label:'一班',number:45, flag: 0, category: 3},\r\n                {name:'14',label:'二班',number:52, flag: 0, category: 3}\r\n            ],\r\n            links: [\r\n                        {target : '1',source : '0'}, {target : '4',source : '0'}, {target : '8',source : '0'},\r\n                        {target : '2',source : '1'}, {target : '3',source : '1'}, {target : '5',source : '4'}, \r\n                        {target : '6',source : '4'}, {target : '7',source : '4'}, {target : '9',source : '8'}, \r\n                        {target : '10',source : '8'}, {target : '11',source : '8'}, {target : '12',source : '8'},\r\n                        {target : '13',source : '6'}, {target : '14',source : '6'}\r\n            ]};\r\n\r\n//加载完后初次显示\r\nvar graphOpt = createGraphOption(sourceData);\r\nmyChart.setOption(graphOpt);\r\n\r\n//创建option\r\nfunction createGraphOption(data){\r\n    var nodes = data.nodes,\r\n        links = data.links;\r\n\r\n    var colorArray = [\"#2e2e2e\", \"#5b9bd5\", \"#70ad47\", \"#f6ae8f\", \"#ffc000\"];\r\n\r\n    //获取子节点数\r\n    for(var i in nodes){\r\n        var childrenNum = 0;\r\n        for(var j in links){                       \r\n            if(nodes[i].name == links[j].source){\r\n                childrenNum++;\r\n            }\r\n        }\r\n        nodes[i].childrenNum = childrenNum;\r\n        nodes[i].itemStyle = {\r\n            normal: {\r\n                color: colorArray[nodes[i].category]\r\n            }\r\n        };\r\n    }\r\n\r\n    //初始化节点与连线数据\r\n    var initNodes = [nodes[0]];\r\n    var initLinks = links.filter(function(i){\r\n        if(i.source == \"0\") {\r\n            for(var j in nodes){\r\n                if(i.target == nodes[j].name){\r\n                    initNodes.push(nodes[j]);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    })\r\n\r\n    var option = {\r\n            tooltip: {},\r\n            animationEasingUpdate: 'quinticInOut',\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        fontSize: 12\r\n                    },\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'graph',\r\n                    layout: 'force',\r\n                    symbolSize: 45,\r\n                    roam: true,\r\n                    tooltip:{\r\n                        trigger:'item',\r\n                        formatter:function(params){\r\n                            return params.data.label + \": \" + params.data.childrenNum;\r\n                        }\r\n                    },\r\n        \r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            formatter:function(params){\r\n                                return params.data.label + \"\\n\" + params.data.childrenNum;\r\n                            }\r\n                        }\r\n                    },\r\n                    \r\n                    edgeSymbolSize: [0, 5],\r\n                    edgeSymbol:'arrow',\r\n                    \r\n                    nodes: initNodes,\r\n                    links: initLinks,\r\n\r\n                    force: {\r\n                        repulsion: 1000,\r\n                        initLayout:'circular',\r\n                        layoutAnimation:false\r\n                    }\r\n                    \r\n                }\r\n            ]\r\n    };\r\n    return option;\r\n}\r\n\r\n//点击事件  \r\nmyChart.on('click', cevent);\r\n\r\nfunction cevent(param) {\r\n    clearTimeout(timeFn);\r\n    //执行延时\r\n    timeFn = setTimeout(function(){\r\n        var option = myChart.getOption();\r\n        var data = param.data,\r\n            nodes = sourceData.nodes,\r\n            links = sourceData.links;\r\n \r\n        if (data != null && data != undefined) {\r\n            var cName = data.name,\r\n                chartNodes = option.series[0].nodes,\r\n                chartLinks = option.series[0].links;\r\n\r\n            if(data.childrenNum < 1) return false;\r\n\r\n            if(data.flag === 0){\r\n\r\n                //显示子节点\r\n                for(var i in links){                  \r\n                    if(cName == links[i].source){\r\n                        chartLinks.push(links[i]);\r\n                        for (var j in nodes) {\r\n                            if(links[i].target == nodes[j].name){\r\n                                chartNodes.push(nodes[j]);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }                   \r\n                }\r\n\r\n            }else{\r\n\r\n                //循环获取子节点\r\n                function getChildren(name){\r\n                    for(var i in chartLinks){\r\n                        if(name == chartLinks[i].source){\r\n                            transferLinksData.push(chartLinks[i]);\r\n                            transferNodesData.push(chartLinks[i].target);\r\n                            getChildren(chartLinks[i].target);\r\n                        }\r\n                    }  \r\n                }\r\n\r\n                //获取应该隐藏的子节点数据   \r\n                var transferNodesData = [],\r\n                    transferLinksData = [];\r\n                getChildren(cName);\r\n\r\n                //过滤点应该隐藏的子节点数据\r\n                chartNodes = chartNodes.filter(function(i){\r\n                                        var m = 0;\r\n                                        for(var j in transferNodesData){\r\n                                            if(transferNodesData[j] == i.Name){\r\n                                                m = 1;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        return (m == 0 ? true : false);\r\n                                    });\r\n                chartLinks = chartLinks.filter(function(i){\r\n                                        var m = 0;\r\n                                        for(var j in transferLinksData){\r\n                                            if(transferLinksData[j].source == i.source && transferLinksData[j].target == i.target){\r\n                                                m = 1;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        return (m == 0 ? true : false);\r\n                                    });\r\n            }\r\n\r\n            //设置flag\r\n            var fFlag = (data.flag == 0 ? 1 : 0);\r\n            for(var i in chartNodes){\r\n                if(cName == chartNodes[i].name){\r\n                    chartNodes[i].flag = fFlag;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //排序节点\r\n            option.series[0].nodes = quicksort(chartNodes);\r\n            option.series[0].links = chartLinks;\r\n\r\n            //重绘图形\r\n            myChart.clear();\r\n            myChart.setOption(option);\r\n        }\r\n    },300);\r\n}\r\n\r\n//排序\r\nfunction quicksort(arr){\r\n    if (arr.length == 0)\r\n        return [];\r\n \r\n    var left = new Array();\r\n    var right = new Array();\r\n    var pivot = arr[0];\r\n \r\n    for (var i = 1; i < arr.length; i++) {\r\n        if (arr[i]['name'] < pivot['name']) {\r\n           left.push(arr[i]);\r\n        } else {\r\n           right.push(arr[i]);\r\n        }\r\n    }\r\n\r\n    return quicksort(left).concat(pivot, quicksort(right));\r\n}\r\n\r\n$(document).on(\"resize\", function(){\r\n    myChart.resize();\r\n})","html":"","externalScripts":"","updaterUID":"bd-1025214267","theme":"","layout":"","viewCount":4579,"userName":"d***e","commentCount":1,"starCount":4,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xBJVgCUFyz.png?v=1510727571283","isCustomThumbnail":0,"builtinTags":["category-work","series-graph","tooltip"],"customTags":[],"updaterUserName":"d***e"}}