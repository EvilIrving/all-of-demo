{"status":0,"data":{"cid":"xTJMSHNTIK","authorUid":"obd-otwkbXlSxkFkQPEpyPtP6CMYCCmr18b","authorUserName":"h***0","title":"玩转ECharts之实现“动态颜色的Label”","description":"玩转ECharts之实现“动态颜色的Label”","latestVersion":3,"alwaysLatest":1,"createTime":"2020-07-16T08:01:17.000Z","lastUpdateTime":"2020-07-16T08:01:17.000Z","auth":2,"uid":"obd-otwkbXlSxkFkQPEpyPtP6CMYCCmr18b","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-16T08:04:24.000Z","code":"var formats = {}\r\n// 这里是右图的完成配置项，文中介绍的效果核心为\"label\"配置项。\r\noption = {\r\n    \"backgroundColor\": 'rgb(0,0,0)',\r\n    \"color\": [\"#1576d2\", \"#d14a82\", \"#26c1f2\", \"#a166ff\", \"#1271cc\", \"#272f67\", \"rgba(156, 43, 182, 1)\"],\r\n    \"series\": [{\r\n        \"radius\": [\"42%\", \"48%\", 0],\r\n        \"data\": [{\r\n            \"value\": 1,\r\n            \"itemStyle\": {\r\n                \"color\": \"#a0a0a0\",\r\n                \"matchColor\": true,\r\n                \"opacity\": 0.3\r\n            }\r\n        }],\r\n        \"type\": \"pie\",\r\n        \"silent\": true,\r\n        \"label\": {\r\n            \"show\": false\r\n        },\r\n        \"labelLine\": {\r\n            \"show\": false\r\n        },\r\n        \"animation\": false\r\n    }, {\r\n        \"type\": \"pie\",\r\n        \"data\": [{\r\n            \"name\": \"x0\",\r\n            \"value\": 80,\r\n            \"itemStyle\": {},\r\n            \"_startArc\": 0,\r\n            \"_endArc\": 1.6589268137767885,\r\n            \"_color\": \"#1576d2\",\r\n            \"_percent\": 0.264026402640264\r\n        }, {\r\n            \"name\": \"x1\",\r\n            \"value\": 98,\r\n            \"itemStyle\": {},\r\n            \"_startArc\": 1.6589268137767885,\r\n            \"_endArc\": 3.6911121606533546,\r\n            \"_color\": \"#d14a82\",\r\n            \"_percent\": 0.3234323432343234\r\n        }, {\r\n            \"name\": \"x2\",\r\n            \"value\": 10,\r\n            \"itemStyle\": {},\r\n            \"_startArc\": 3.6911121606533546,\r\n            \"_endArc\": 3.898478012375453,\r\n            \"_color\": \"#26c1f2\",\r\n            \"_percent\": 0.033003300330033\r\n        }, {\r\n            \"name\": \"x3\",\r\n            \"value\": 80,\r\n            \"itemStyle\": {},\r\n            \"_startArc\": 3.898478012375453,\r\n            \"_endArc\": 5.557404826152241,\r\n            \"_color\": \"#a166ff\",\r\n            \"_percent\": 0.264026402640264\r\n        }, {\r\n            \"name\": \"x4\",\r\n            \"value\": 35,\r\n            \"itemStyle\": {},\r\n            \"_startArc\": 5.557404826152241,\r\n            \"_endArc\": 6.283185307179586,\r\n            \"_color\": \"#1271cc\",\r\n            \"_percent\": 0.11551155115511551\r\n        }],\r\n        \"radius\": [\"45%\", \"65%\"],\r\n        // 核心代码\r\n        \"label\": {\r\n            \"nameColor\": \"#CACACA\",\r\n            \"valueColor\": \"color\",\r\n            \"labelStyle\": \"style2\",\r\n            \"formatterText\": [\"{b}-{d}%\", \"{d}%-{b}\"],\r\n            \"fontSize\": 18,\r\n            \"opacity\": 1,\r\n            \"position\": \"outside\",\r\n            \"formatter\": function formatterFunc(params) {\r\n                // 这里分别定义了左右两种情况的formatter值，根据数值的左右分别取用。\r\n                const formatter = [\"{a|}{b_color|{b}} {c_color|{d}}\", \"{c_color|{d}} {b_color|{b}}{a|}\"];\r\n                const formatterText = [\"{b}-{d}%\", \"{d}%-{b}\"];\r\n                var templateLen = formatter.length;\r\n                var values = params.data; // 内容\r\n\r\n                var formatterTextIsArray = Array.isArray(formatterText);\r\n\r\n                if (templateLen === 0) {\r\n                    return null;\r\n                }\r\n\r\n                if (templateLen === 1 && !formatterTextIsArray) {\r\n                    return getText(formatter[0], values, formatterText);\r\n                } else {\r\n                    // 将输入:[f1][t1,t2]、 [f1,f2][t1]、[f1,f2]t1\r\n                    // 都写成[f1,f2][t1,t2]的形式，以简化判断\r\n                    if (!formatterTextIsArray) {\r\n                        formatterText = [formatterText, formatterText];\r\n                    }\r\n\r\n                    if (formatterText.length === 1) {\r\n                        formatterText[1] = formatterText[0];\r\n                    }\r\n\r\n                    if (templateLen === 1) {\r\n                        formatter[1] = formatter[0];\r\n                    } // 镜像返回\r\n\r\n                    // 这里计算了当前数值的角度，用于区分左右。\r\n                    var midAngle = (values._startArc + values._endArc) / 2;\r\n\r\n                    if (midAngle <= Math.PI) {\r\n                        return getText(formatter[0], values, formatterText[0]);\r\n                    } else {\r\n                        return getText(formatter[1], values, formatterText[1]);\r\n                    }\r\n                }\r\n            },\r\n            \"matchColor\": true,\r\n            \"rich\": {\r\n                \"a\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_1576d2\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_1576d2\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_1576d2\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_d14a82\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_d14a82\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"#d14a82\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_d14a82\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_26c1f2\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_26c1f2\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"#26c1f2\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_26c1f2\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_a166ff\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_a166ff\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"#a166ff\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_a166ff\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_1271cc\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_1271cc\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"#1271cc\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_1271cc\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_272f67\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_272f67\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"#272f67\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_272f67\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"a_156_43_182_1\": {\r\n                    \"color\": \"#999\",\r\n                    \"height\": 12,\r\n                    \"width\": 8,\r\n                    \"backgroundColor\": \"#264884\"\r\n                },\r\n                \"c_156_43_182_1\": {\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"color\": \"rgba(156, 43, 182, 1)\",\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                },\r\n                \"b_156_43_182_1\": {\r\n                    \"color\": \"#CACACA\",\r\n                    \"verticalAlign\": \"middle\",\r\n                    \"fontSize\": 18,\r\n                    \"height\": 30,\r\n                    \"borderColor\": \"#264884\",\r\n                    \"borderWidth\": 1,\r\n                    \"padding\": [0, 10],\r\n                    \"fontFamily\": \"微软雅黑\"\r\n                }\r\n            }\r\n        },\r\n        \"labelLine\": {\r\n            \"lineStyle\": {\r\n                \"color\": \"#fff\"\r\n            }\r\n        },\r\n        \"itemStyle\": {\r\n            \"borderColor\": \"#000\",\r\n            \"borderWidth\": 2\r\n        },\r\n        \"hoverAnimation\": false\r\n    }]\r\n}\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction toFixed(value, maxDecimals, roundingFunction, optionals) {\r\n    var splitValue = value.toString().split('.');\r\n    var minDecimals = maxDecimals - (optionals || 0);\r\n    var boundedPrecision = splitValue.length === 2 ? Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals) : minDecimals;\r\n    var power = Math.pow(10, boundedPrecision);\r\n    var output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\r\n\r\n    if (optionals > maxDecimals - boundedPrecision) {\r\n        var optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\r\n        output = output.replace(optionalsRegExp, '');\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction numIsNaN(value) {\r\n    return typeof value === 'number' && isNaN(value);\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction numerify(input, formatType, roundingFunction) {\r\n    var value = void 0;\r\n\r\n    if (input === 0 || typeof input === 'undefined') {\r\n        value = 0;\r\n    } else if (input === null || numIsNaN(input)) {\r\n        value = null;\r\n    } else if (typeof input === 'string') {\r\n        if (options.zeroFormat && input === options.zeroFormat) {\r\n            value = 0;\r\n        } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\r\n            value = null;\r\n        } else {\r\n            value = +input;\r\n        }\r\n    } else {\r\n        value = +input || null;\r\n    }\r\n\r\n    return format(value, formatType, roundingFunction);\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction format(value, formatType, roundingFunction) {\r\n    formatType = formatType || options.defaultFormat;\r\n    roundingFunction = roundingFunction || Math.round;\r\n    var output = void 0;\r\n    var formatFunction = void 0;\r\n\r\n    if (value === 0 && options.zeroFormat !== null) {\r\n        output = options.zeroFormat;\r\n    } else if (value === null && options.nullFormat !== null) {\r\n        output = options.nullFormat;\r\n    } else {\r\n        for (var kind in formats) {\r\n            if (formats[kind] && formatType.match(formats[kind].regexp)) {\r\n                formatFunction = formats[kind].format;\r\n                break;\r\n            }\r\n        }\r\n        formatFunction = formatFunction || numberToFormat.bind(null, options);\r\n        output = formatFunction(value, formatType, roundingFunction, numerify);\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction numberToFormat(options, value, format, roundingFunction) {\r\n    var abs = Math.abs(value);\r\n    var negP = false;\r\n    var optDec = false;\r\n    var abbr = '';\r\n    var decimal = '';\r\n    var neg = false;\r\n    var abbrForce = void 0;\r\n    var signed = void 0;\r\n    format = format || '';\r\n\r\n    value = value || 0;\r\n\r\n    if (~format.indexOf('(')) {\r\n        negP = true;\r\n        format = format.replace(/[(|)]/g, '');\r\n    } else if (~format.indexOf('+') || ~format.indexOf('-')) {\r\n        signed = ~format.indexOf('+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\r\n        format = format.replace(/[+|-]/g, '');\r\n    }\r\n    if (~format.indexOf('a')) {\r\n        abbrForce = format.match(/a(k|m|b|t)?/);\r\n\r\n        abbrForce = abbrForce ? abbrForce[1] : false;\r\n\r\n        if (~format.indexOf(' a')) abbr = ' ';\r\n        format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\r\n\r\n        if (abs >= TRILLION && !abbrForce || abbrForce === 't') {\r\n            abbr += options.abbrLabel.tr;\r\n            value = value / TRILLION;\r\n        } else if (abs < TRILLION && abs >= BILLION && !abbrForce || abbrForce === 'b') {\r\n            abbr += options.abbrLabel.bi;\r\n            value = value / BILLION;\r\n        } else if (abs < BILLION && abs >= MILLION && !abbrForce || abbrForce === 'm') {\r\n            abbr += options.abbrLabel.mi;\r\n            value = value / MILLION;\r\n        } else if (abs < MILLION && abs >= THOUSAND && !abbrForce || abbrForce === 'k') {\r\n            abbr += options.abbrLabel.th;\r\n            value = value / THOUSAND;\r\n        }\r\n    }\r\n    if (~format.indexOf('[.]')) {\r\n        optDec = true;\r\n        format = format.replace('[.]', '.');\r\n    }\r\n    let int = value.toString().split('.')[0];\r\n    let precision = format.split('.')[1];\r\n    let thousands = format.indexOf(',');\r\n    let leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\r\n\r\n    if (precision) {\r\n        if (~precision.indexOf('[')) {\r\n            precision = precision.replace(']', '');\r\n            precision = precision.split('[');\r\n            decimal = toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\r\n        } else {\r\n            decimal = toFixed(value, precision.length, roundingFunction);\r\n        }\r\n\r\n        int = decimal.split('.')[0];\r\n        decimal = ~decimal.indexOf('.') ? '.' + decimal.split('.')[1] : '';\r\n        if (optDec && +decimal.slice(1) === 0) decimal = '';\r\n    } else {\r\n        int = toFixed(value, 0, roundingFunction);\r\n    }\r\n    if (abbr && !abbrForce && +int >= 1000 && abbr !== ABBR.trillion) {\r\n        int = '' + +int / 1000;\r\n        abbr = ABBR.million;\r\n    }\r\n    if (~int.indexOf('-')) {\r\n        int = int.slice(1);\r\n        neg = true;\r\n    }\r\n    if (int.length < leadingCount) {\r\n        for (let i = leadingCount - int.length; i > 0; i--) {\r\n            int = '0' + int;\r\n        }\r\n    }\r\n\r\n    if (thousands > -1) {\r\n        int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + ',');\r\n    }\r\n\r\n    if (!format.indexOf('.')) int = '';\r\n\r\n    let output = int + decimal + (abbr || '');\r\n\r\n    if (negP) {\r\n        output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\r\n    } else {\r\n        if (signed >= 0) {\r\n            output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\r\n        } else if (neg) {\r\n            output = '-' + output;\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction getText(template, values, formatterText) {\r\n    const {\r\n        name,\r\n        value,\r\n        _percent\r\n    } = values;\r\n    // 修改颜色\r\n    template = getRichColor(template, values);\r\n\r\n    // 内容\r\n    const paramsMap = {\r\n        '{b}': name,\r\n        '{c}': value,\r\n        '{d}': Math.round(_percent * 100),\r\n        '{d.00}': numerify(_percent * 100, '0.00')\r\n    };\r\n    const regex = /(\\{d[.]00\\})|(\\{[a-d]\\})/g;\r\n    let splitArray = template.split(regex);\r\n    let resFormatter = null;\r\n    if (!formatterText) {\r\n        splitArray.forEach((d, idx) => {\r\n            if (regex.test(d)) {\r\n                splitArray[idx] = paramsMap[d];\r\n            }\r\n        });\r\n        resFormatter = splitArray.join('');\r\n    } else {\r\n        let setTextsArray = formatterText.split('-');\r\n        const sourceLength = setTextsArray.length;\r\n        setTextsArray.forEach((sourceString, i) => {\r\n            let sourceSplits = sourceString.split(regex);\r\n            sourceSplits.forEach((s, idx) => {\r\n                if (regex.test(s)) {\r\n                    sourceSplits[idx] = paramsMap[s];\r\n                }\r\n            });\r\n            setTextsArray[i] = sourceSplits.join('');\r\n        });\r\n        // template set\r\n        let sourceIndex = 0;\r\n        splitArray.forEach((d, idx) => {\r\n            if (regex.test(d)) {\r\n                if (sourceIndex < sourceLength) {\r\n                    splitArray[idx] = setTextsArray[sourceIndex];\r\n                    sourceIndex++;\r\n                } else {\r\n                    splitArray[idx] = '';\r\n                }\r\n            }\r\n        });\r\n        resFormatter = splitArray.join('');\r\n    }\r\n    return resFormatter;\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction getRichColor(template, values) {\r\n    const {\r\n        _color\r\n    } = values;\r\n    const regex = /(_color\\|)/g;\r\n    let splitArray = template.split(regex);\r\n    splitArray.forEach((d, idx) => {\r\n        if (regex.test(d)) {\r\n            splitArray[idx] = getColorKeyName(_color) + '|';\r\n        }\r\n    });\r\n    return splitArray.join('');\r\n}\r\n\r\n// 以下代码均为辅助性代码理论上不需要详细阅读，未做详细介绍\r\nfunction getColorKeyName(color) {\r\n    let colorBadge = color;\r\n    if (color && color.indexOf('#') >= 0) {\r\n        colorBadge = color.replace('#', '_');\r\n    } else if (color && (color.indexOf('rgb') >= 0 || color.indexOf('rgba') >= 0)) {\r\n        const colorMatch = colorBadge.match(/\\(([^)]*)\\)/);\r\n        if (colorMatch) {\r\n            colorBadge = '_' + colorMatch[1].replace(/(\\s*)\\,(\\s*)/g, '_');\r\n            colorBadge = colorBadge.replace(/(\\s*)(\\%|\\.)(\\s*)/g, '_');\r\n        }\r\n    } else if (color && color.indexOf('hsl') >= 0) {\r\n        const colorMatch = colorBadge.match(/\\(([^)]*)\\)/);\r\n        if (colorMatch) {\r\n            colorBadge = '_' + colorMatch[1].replace(/(\\s*)\\,(\\s*)/g, '_');\r\n            colorBadge = colorBadge.replace(/(\\s*)(\\%|\\.)(\\s*)/g, '_');\r\n        }\r\n    }\r\n    return colorBadge;\r\n}","html":"","externalScripts":"","updaterUID":"obd-otwkbXlSxkFkQPEpyPtP6CMYCCmr18b","theme":"","layout":"","viewCount":142,"userName":"h***0","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xTJMSHNTIK.png?v=1594886665048","isCustomThumbnail":0,"builtinTags":["category-work","series-pie"],"customTags":["layer","奇安信","雷尔"],"updaterUserName":"h***0"}}