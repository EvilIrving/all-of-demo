{"status":0,"data":{"cid":"xlZnoGvAkW","authorUid":"bd-1832650076","authorUserName":"凌***殇","title":"浙江杭州地图 三级下钻","description":"杭州市到区县的下钻是完整的","latestVersion":6,"alwaysLatest":1,"createTime":"2020-05-08T01:46:45.000Z","lastUpdateTime":"2020-05-08T01:46:45.000Z","auth":2,"uid":"bd-1832650076","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":6,"parentVersion":5,"echartsVersion":"4.8.0","versionCreateTime":"2021-03-24T09:18:57.000Z","code":"\r\n//模仿的浙江下钻地图  自用备份 小白多多关照\r\n// json下载地址：https://datav.aliyun.com/tools/atlas\r\n\r\n// 省\r\nvar zhejiang = \"/asset/get/s/data-1588901828820-ymVHvaRtU.json\";\r\n// 市\r\nvar hangzhou = \"/asset/get/s/data-1589003571047-8Xg37jcwv.json\";\r\nvar zhoushan = \"/asset/get/s/data-1589003566916-ohp8QsNF9.json\";\r\nvar jiaxin = \"/asset/get/s/data-1589003552334-5OQ_uGIPs.json\";\r\nvar ningbo = \"/asset/get/s/data-1589003540474-BkDTACUUL.json\";\r\nvar taizhou = \"/asset/get/s/data-1589003536896-6DDlyRZab.json\";\r\nvar wenzhou = \"/asset/get/s/data-1589003533265-AkeJlc9Ps.json\";\r\nvar lishui = \"/asset/get/s/data-1589003526529-SQeTLEaOJ.json\";\r\nvar huzhou = \"/asset/get/s/data-1589003522912-OrPXCa6ye.json\";\r\nvar quzhou = \"/asset/get/s/data-1589003519348-WpDW6vYTD.json\";\r\nvar jinhua = \"/asset/get/s/data-1589003512597-pX-ocI1Wr.json\";\r\nvar shaoxing = \"/asset/get/s/data-1589003496398-Qbj2FVpud.json\";\r\n\r\n// 杭州市各区\r\nvar yuhang = \"/asset/get/s/data-1589002810673-aR1YzRH61.json\";\r\nvar xihu = \"/asset/get/s/data-1589002855913-aEdHbUtV1.json\";\r\nvar shangcheng = \"/asset/get/s/data-1589002846878-tS3MyeChU.json\";\r\nvar xiacheng = \"/asset/get/s/data-1589002861672-GBErE4ZQK.json\";\r\nvar binjiang = \"/asset/get/s/data-1589002818402-wXtY_arX7.json\";\r\nvar tonglu = \"/asset/get/s/data-1589002851190-IGhlcvixI.json\";\r\nvar fuyang = \"/asset/get/s/data-1589002828168-4oGOJElFc.json\";\r\nvar jiande = \"/asset/get/s/data-1589002832817-Lx7Zqmlzg.json\";\r\nvar xiaoshan = \"/asset/get/s/data-1616576317566-dNbbL-2Um.json\";\r\nvar gongshu = \"/asset/get/s/data-1589002980875-rbR_QPOcH.json\";\r\nvar linan = \"/asset/get/s/data-1589002842369-20yopBJgF.json\";\r\nvar jianggan = \"/asset/get/s/data-1589002837571-4zlnwvYh0.json\";\r\nvar chunan = \"/asset/get/s/data-1589002822195-Zm_Tq0ACJ.json\";\r\n\r\n// 区域分块\r\nvar zhuchengqu = \"/asset/get/s/data-1588930596592-U3Cbn2KuL.json\";\r\n\r\n\r\n// 模拟点数据——数据点位无实际意义 仅供参考\r\nvar mapArr = {\r\n    浙江省: [{\r\n            name: \"杭州\",\r\n            value: [120.210896, 30.246036, 1],\r\n        },\r\n        {\r\n            name: \"湖州\",\r\n            value: [120.086881, 30.894178, 0],\r\n        },\r\n        {\r\n            name: \"嘉兴\",\r\n            value: [120.755623, 30.746814, 0],\r\n        },\r\n        {\r\n            name: \"绍兴\",\r\n            value: [120.583305, 30.051136, 0],\r\n        },\r\n        {\r\n            name: \"宁波\",\r\n            value: [121.62454, 29.860258, 0],\r\n        },\r\n        {\r\n            name: \"舟山\",\r\n            value: [122.207395, 29.985578, 0],\r\n        },\r\n        {\r\n            name: \"衢州\",\r\n            value: [118.859307, 28.970229, 0],\r\n        },\r\n        {\r\n            name: \"金华\",\r\n            value: [119.647265, 29.079195, 0],\r\n        },\r\n        {\r\n            name: \"台州\",\r\n            value: [121.42079, 28.655716, 0],\r\n        },\r\n        {\r\n            name: \"丽水\",\r\n            value: [119.923249, 28.467694, 0],\r\n        },\r\n        {\r\n            name: \"温州\",\r\n            value: [120.699279, 27.993849, 0],\r\n        },\r\n    ],\r\n    杭州市: [{\r\n            name: \"余杭区\",\r\n            value: [120.3060892965, 30.4244838332, 1],\r\n        },\r\n        {\r\n            name: \"西湖区\",\r\n            value: [120.1371565592, 30.2651970958, 0],\r\n        },\r\n        {\r\n            name: \"拱墅区\",\r\n            value: [120.1484873743, 30.324906244, 0],\r\n        },\r\n        {\r\n            name: \"上城区\",\r\n            value: [120.2040848844, 30.2328603996, 0],\r\n        },\r\n        {\r\n            name: \"下城区\",\r\n            value: [120.1876141702, 30.28673585, 0],\r\n        },\r\n        {\r\n            name: \"江干区\",\r\n            value: [120.2114310483, 30.2628716672, 0],\r\n        },\r\n        {\r\n            name: \"滨江区\",\r\n            value: [120.2184566077, 30.2143928485, 0],\r\n        },\r\n        {\r\n            name: \"萧山区\",\r\n            value: [120.2708053894, 30.1895246409, 0],\r\n        },\r\n        {\r\n            name: \"临安区\",\r\n            value: [119.7313212674, 30.239743139, 0],\r\n        },\r\n        {\r\n            name: \"富阳区\",\r\n            value: [119.9671985789, 30.0539026103, 0],\r\n        },\r\n        {\r\n            name: \"桐庐区\",\r\n            value: [119.6981058619, 29.7988325149, 0],\r\n        },\r\n        {\r\n            name: \"建德区\",\r\n            value: [119.287548962, 29.4813766767, 0],\r\n        },\r\n        {\r\n            name: \"淳安区\",\r\n            value: [119.0484695874, 29.6152091789, 0],\r\n        },\r\n    ],\r\n    上城区: [{\r\n            name: \"33011003\",\r\n            value: [120.18915669224, 30.237287162543, 0],\r\n        },\r\n        {\r\n            name: \"33015057\",\r\n            value: [120.19922034051, 30.235133348706, 0],\r\n        },\r\n    ],\r\n    下城区: [{\r\n            name: \"33010127\",\r\n            value: [120.1671967765, 30.266743852496, 0],\r\n        },\r\n        {\r\n            name: \"33019028\",\r\n            value: [120.19384385251, 30.342224566937, 0],\r\n        },\r\n    ],\r\n    江干区: [{\r\n            name: \"33010164\",\r\n            value: [120.197120989581, 30.2722505771474, 0],\r\n        },\r\n\r\n        {\r\n            name: \"33015265\",\r\n            value: [120.26602565373, 30.3175431482886, 0],\r\n        },\r\n    ],\r\n    拱墅区: [{\r\n            name: \"33010487\",\r\n            value: [120.151508870388, 30.2850301964867, 0],\r\n        },\r\n        {\r\n            name: \"33014148\",\r\n            value: [120.173834955998, 30.3708542283502, 0],\r\n        },\r\n        {\r\n            name: \"33010164\",\r\n            value: [120.197120989581, 30.2722505771474, 0],\r\n        },\r\n\r\n        {\r\n            name: \"33015265\",\r\n            value: [120.26602565373, 30.3175431482886, 0],\r\n        },\r\n    ],\r\n    西湖区: [{\r\n            name: \"33010216\",\r\n            value: [120.14096678401, 30.273505030871, 0],\r\n        },\r\n        {\r\n            name: \"33014161\",\r\n            value: [120.10112323964, 30.29794196665, 0],\r\n        },\r\n        {\r\n            name: \"33011003\",\r\n            value: [120.18915669224, 30.237287162543, 0],\r\n        },\r\n        {\r\n            name: \"33015057\",\r\n            value: [120.19922034051, 30.235133348706, 0],\r\n        },\r\n    ],\r\n    滨江区: [{\r\n            name: \"33011065\",\r\n            value: [120.2151700964, 30.199560551644, 0],\r\n        },\r\n        {\r\n            name: \"33019249\",\r\n            value: [120.13585717584, 30.16852739334, 0],\r\n        },\r\n    ],\r\n    萧山区: [{\r\n            name: \"33017388\",\r\n            value: [120.24728418493, 30.180294169914, 0],\r\n        },\r\n        {\r\n            name: \"33015378\",\r\n            value: [119.033746561182, 29.6055595157275, 0],\r\n        },\r\n    ],\r\n    余杭区: [{\r\n            name: \"33015501\",\r\n            value: [120.29494435694, 30.412715702058, 0],\r\n        },\r\n        {\r\n            name: \"33014521\",\r\n            value: [120.29659123326, 30.501453905111, 0],\r\n        },\r\n    ],\r\n    富阳区: [{\r\n            name: \"33011406\",\r\n            value: [119.94520844126, 30.053833453656, 0],\r\n        },\r\n        {\r\n            name: \"33015403\",\r\n            value: [119.66472313905, 29.985457240343, 0],\r\n        },\r\n    ],\r\n    淳安县: [{\r\n            name: \"33011922\",\r\n            value: [119.043620031871, 29.6058306092139, 0],\r\n        },\r\n        {\r\n            name: \"33019919\",\r\n            value: [119.046607704754, 29.6038488141601, 0],\r\n        },\r\n    ],\r\n    临安区: [{\r\n            name: \"33011601\",\r\n            value: [119.70560939215, 30.229842691419, 0],\r\n        },\r\n        {\r\n            name: \"33019608\",\r\n            value: [119.7051829209, 30.231791316266, 0],\r\n        },\r\n    ],\r\n    主城区: [{\r\n            name: \"33010216\",\r\n            value: [120.14096678401, 30.273505030871, 0],\r\n        },\r\n        {\r\n            name: \"33014161\",\r\n            value: [120.10112323964, 30.29794196665, 0],\r\n        },\r\n        {\r\n            name: \"33011003\",\r\n            value: [120.18915669224, 30.237287162543, 0],\r\n        },\r\n        {\r\n            name: \"33015057\",\r\n            value: [120.19922034051, 30.235133348706, 0],\r\n        },\r\n        {\r\n            name: \"33010127\",\r\n            value: [120.1671967765, 30.266743852496, 0],\r\n        },\r\n        {\r\n            name: \"33019028\",\r\n            value: [120.19384385251, 30.342224566937, 0],\r\n        },\r\n        {\r\n            name: \"33010487\",\r\n            value: [120.151508870388, 30.2850301964867, 0],\r\n        },\r\n        {\r\n            name: \"33014148\",\r\n            value: [120.173834955998, 30.3708542283502, 0],\r\n        },\r\n        {\r\n            name: \"33010164\",\r\n            value: [120.197120989581, 30.2722505771474, 0],\r\n        },\r\n\r\n        {\r\n            name: \"33015265\",\r\n            value: [120.26602565373, 30.3175431482886, 0],\r\n        },\r\n    ],\r\n};\r\n\r\n// 鼠标悬浮显示元素\r\n$(`<div id=\"hoverBox\" style=\"width: 200px;height: 80px;background-color: pink;position:absolute;z-index: 999;border-radius: 5px;display:none;justify-content: center;align-items: center;\">自定义内容</div>`).appendTo(\r\n    $('#chart-panel')\r\n);\r\n\r\n// 模拟动态修改点级别\r\n// 修改浙江-杭州/湖州/嘉兴\r\nlet arrZj = mapArr['浙江省'];\r\narrZj.forEach(function(item, index, arrZj) {\r\n    arrZj[0].value[2] = 2;\r\n    arrZj[1].value[2] = 3;\r\n    arrZj[2].value[2] = 3;\r\n})\r\n//修改杭州-余杭区/拱墅区/西湖区\r\nlet arrHz = mapArr['杭州市'];\r\narrHz.forEach(function(item, index, arrHz) {\r\n    arrHz[0].value[2] = 2;\r\n    arrHz[1].value[2] = 3;\r\n    arrHz[2].value[2] = 2;\r\n})\r\n\r\necharts.extendsMap = function(id, opt) {\r\n    // 实例\r\n    var chart = this.init(document.getElementById(id));\r\n\r\n    var curGeoJson = {};\r\n    var cityMap = {\r\n        '杭州市': hangzhou,\r\n        '舟山市': zhoushan,\r\n        '嘉兴市': jiaxin,\r\n        '宁波市': ningbo,\r\n        '台州市': taizhou,\r\n        '温州市': wenzhou,\r\n        '丽水市': lishui,\r\n        '湖州市': huzhou,\r\n        '衢州市': quzhou,\r\n        '金华市': jinhua,\r\n        '绍兴市': shaoxing\r\n    };\r\n\r\n    var quyMap = {\r\n        '余杭区': yuhang,\r\n        '西湖区': zhuchengqu,\r\n        '上城区': zhuchengqu,\r\n        '下城区': zhuchengqu,\r\n        '滨江区': binjiang,\r\n        '桐庐县': tonglu,\r\n        '富阳区': fuyang,\r\n        '建德市': jiande,\r\n        '萧山区': xiaoshan,\r\n        '拱墅区': zhuchengqu,\r\n        '临安区': linan,\r\n        '江干区': zhuchengqu,\r\n        '淳安县': chunan,\r\n\r\n    };\r\n    var geoCoordMap = {\r\n        '余杭': [120.3060892965, 30.4244838332],\r\n        '西湖': [120.1371565592, 30.2651970958],\r\n        '拱墅': [120.1484873743, 30.324906244],\r\n        '上城': [120.2040848844, 30.2328603996],\r\n        '下城': [120.1876141702, 30.28673585],\r\n        '江干': [120.2114310483, 30.2628716672],\r\n        '滨江': [120.2184566077, 30.2143928485],\r\n        '萧山': [120.2708053894, 30.1895246409],\r\n        '临安': [119.7313212674, 30.239743139],\r\n        '富阳': [119.9671985789, 30.0539026103],\r\n        '桐庐': [119.6981058619, 29.7988325149],\r\n        '建德': [119.287548962, 29.4813766767],\r\n        '淳安': [119.0484695874, 29.6152091789],\r\n    };\r\n    var levelColorMap = {\r\n        \"0\": \"#fff\",\r\n        \"1\": \"#26cff3\",\r\n        \"2\": \"#f0fb30\",\r\n        \"3\": \"#d11864\",\r\n    };\r\n\r\n\r\n    var defaultOpt = {\r\n        mapName: \"zhejiang\", // 地图展示\r\n        goDown: false, // 是否下钻\r\n        activeArea: [], // 区域高亮,同echarts配置项\r\n        data: [],\r\n        // 下钻回调(点击的地图名、实例对象option、实例对象)\r\n        callback: function(name, option, instance) {},\r\n    };\r\n    if (opt) opt = this.util.extend(defaultOpt, opt);\r\n\r\n    // 层级索引\r\n    var name = [opt.mapName];\r\n    var idx = 0;\r\n    var pos = {\r\n        leftPlus: 115,\r\n        leftCur: 150,\r\n        left: 198,\r\n        top: 50,\r\n    };\r\n\r\n    var line = [\r\n        [0, 0],\r\n        [8, 8],\r\n        [0, 16],\r\n    ];\r\n    // style\r\n    var style = {\r\n        font: '14px \"Microsoft YaHei\", sans-serif',\r\n        textColor: \"#0ab7ff\",\r\n        lineColor: \"rgba(147, 235, 248, 0.5)\",\r\n    };\r\n\r\n    var handleEvents = {\r\n        /**\r\n         * i 实例对象\r\n         * o option\r\n         * n 地图名\r\n         **/\r\n        resetOption: function(i, o, n) {\r\n            console.log(\"看我一下呗\")\r\n\r\n            var breadcrumb = this.createBreadcrumb(n);\r\n\r\n\r\n            var j = name.indexOf(n);\r\n            console.log(i);\r\n            console.log(o);\r\n            console.log(\"这是n\" + n);\r\n            console.log(j);\r\n            var l = o.graphic.length;\r\n            if (j < 0) {\r\n                o.graphic.push(breadcrumb);\r\n                o.graphic[0].children[0].shape.x2 = 140;\r\n                o.graphic[0].children[1].shape.x2 = 140;\r\n                //     o.series[0].data = [];\r\n                if (n === \"杭州市\") {\r\n                    o.series[0].data = arrHz;\r\n\r\n                }\r\n                // else o.series[0].data = [];\r\n\r\n                //   if(o.graphic.length > 2){\r\n                //         for(var x = 0; x < opt.data.length; x++){\r\n                //             console.log(opt.data[0])\r\n                //             if(n === opt.data[x].name + '市'){\r\n                //                 o.series[0].data =handleEvents.initSeriesData([mapArr[\"杭州市\"]])\r\n                //                 break;\r\n                //             }\r\n                //             else o.series[0].data = [];\r\n                //         }\r\n                //     };\r\n\r\n                name.push(n)\r\n                idx++;\r\n            } else {\r\n                o.graphic.splice(j + 2, l);\r\n                if (o.graphic.length <= 2) {\r\n                    o.graphic[0].children[0].shape.x2 = 50;\r\n                    o.graphic[0].children[1].shape.x2 = 50;\r\n                    o.series[0].data = arrZj;\r\n                    //  o.series[0].data = handleEvents.initSeriesData(opt.data);\r\n                }\r\n                name.splice(j + 1, l);\r\n\r\n                idx = j;\r\n                pos.leftCur -= pos.leftPlus * (l - j - 1);\r\n            }\r\n\r\n            o.geo.map = n;\r\n            o.geo.zoom = 0.4;\r\n            i.clear();\r\n            i.setOption(o);\r\n            this.zoomAnimation();\r\n            opt.callback(n, o, i);\r\n        },\r\n\r\n        /**\r\n         * name 地图名\r\n         **/\r\n        createBreadcrumb: function(name) {\r\n            var cityToPinyin = {\r\n                杭州市: \"hangzhou\",\r\n                舟山市: \"zhoushan\",\r\n                嘉兴市: \"jiaxing\",\r\n                温州市: \"wenzhou\",\r\n                衢州市: \"quzhou\",\r\n                丽水市: \"lishui\",\r\n                金华市: \"jinhua\",\r\n                台州市: \"taizhou\",\r\n                宁波市: \"ningbo\",\r\n                绍兴市: \"shaoxing\",\r\n                湖州市: \"huzhou\",\r\n            };\r\n\r\n            // 固定杭州市 下钻区县 标题显示为杭州市\r\n            var nameText = \"\";\r\n            if (\r\n                name == \"临安区\" ||\r\n                name == \"余杭区\" ||\r\n                name == \"上城区\" ||\r\n                name == \"下城区\" ||\r\n                name == \"江干区\" ||\r\n                name == \"滨江区\" ||\r\n                name == \"西湖区\" ||\r\n                name == \"拱墅区\" ||\r\n                name == \"萧山区\" ||\r\n                name == \"桐庐县\" ||\r\n                name == \"建德市\" ||\r\n                name == \"富阳区\" ||\r\n                name == \"淳安县\"\r\n            ) {\r\n                nameText = \"杭州市\";\r\n            } else {\r\n                nameText = name;\r\n            }\r\n\r\n            var breadcrumb = {\r\n                //标题市级样式\r\n                type: \"group\",\r\n                id: name,\r\n                left: 80,\r\n                top: 30,\r\n                children: [{\r\n                        type: \"polyline\",\r\n                        left: -90,\r\n                        top: 0,\r\n                        shape: {\r\n                            points: line,\r\n                        },\r\n                        style: {\r\n                            stroke: \"#0ab7ff\",\r\n                            key: name,\r\n\r\n                            // lineWidth: 2,\r\n                        },\r\n                        onclick: function() {\r\n                            var name = this.style.key;\r\n\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        },\r\n                    },\r\n                    {\r\n                        type: \"text\",\r\n                        left: -68,\r\n                        top: 0,\r\n                        style: {\r\n                            text: nameText,\r\n                            textAlign: \"center\",\r\n                            fill: style.textColor,\r\n                            font: '12px \"Microsoft YaHei\", sans-serif',\r\n                        },\r\n                        onclick: function() {\r\n                            var name = this.style.text;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        },\r\n                    },\r\n                    {\r\n                        // 标题市级拼音\r\n                        type: \"text\",\r\n                        left: -68,\r\n                        top: 15,\r\n                        style: {\r\n                            name: name,\r\n                            text: cityToPinyin[name] ? cityToPinyin[name].toUpperCase() : \"\",\r\n                            textAlign: \"center\",\r\n                            fill: style.textColor,\r\n                            font: '10px \"Microsoft YaHei\", sans-serif',\r\n                        },\r\n                        onclick: function() {\r\n                            // console.log(this.style);\r\n                            var name = this.style.name;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n\r\n            pos.leftCur += pos.leftPlus;\r\n\r\n            return breadcrumb;\r\n        },\r\n\r\n        // 设置effectscatter\r\n        initSeriesData: function(data) {\r\n            var temp = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var geoCoord = geoCoordMap[data[i].name];\r\n                if (geoCoord) {\r\n                    temp.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value, data[i].level),\r\n                    });\r\n                }\r\n            }\r\n            return temp;\r\n        },\r\n\r\n        zoomAnimation: function() {\r\n            var count = null;\r\n            var zoom = function(per) {\r\n                if (!count) count = per;\r\n                count = count + per;\r\n                // console.log(per,count);\r\n                chart.setOption({\r\n                    geo: {\r\n                        zoom: count,\r\n                    },\r\n                });\r\n                if (count < 1)\r\n                    window.requestAnimationFrame(function() {\r\n                        zoom(0.7);\r\n                    });\r\n            };\r\n            window.requestAnimationFrame(function() {\r\n                zoom(0.2);\r\n            });\r\n        },\r\n    };\r\n\r\n    var option = {\r\n\r\n        backgroundColor: \"#336699\",\r\n        graphic: [{\r\n                //标题的线\r\n                type: \"group\",\r\n                left: 15,\r\n                top: 20,\r\n                children: [{\r\n                        type: \"line\",\r\n                        left: 0,\r\n                        top: -20,\r\n                        shape: {\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            x2: 50,\r\n                            y2: 0,\r\n                        },\r\n                        style: {\r\n                            stroke: style.lineColor,\r\n                        },\r\n                    },\r\n                    {\r\n                        type: \"line\",\r\n                        left: 0,\r\n                        top: 20,\r\n                        shape: {\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            x2: 50,\r\n                            y2: 0,\r\n                        },\r\n                        style: {\r\n                            stroke: style.lineColor,\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                //省级标题样式\r\n                id: name[idx],\r\n                type: \"group\",\r\n                left: 20,\r\n                top: 30,\r\n                children: [{\r\n                        type: \"polyline\",\r\n                        left: 90,\r\n                        top: 0,\r\n                        shape: {\r\n                            points: line,\r\n                        },\r\n                        style: {\r\n                            stroke: \"transparent\",\r\n                            key: name[0],\r\n                        },\r\n                        onclick: function() {\r\n                            var name = this.style.key;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        },\r\n                    },\r\n                    {\r\n                        type: \"text\",\r\n                        left: 0,\r\n                        top: 0,\r\n                        style: {\r\n                            text: name[0] === \"浙江\" ? \"浙江省\" : name[0],\r\n                            textAlign: \"center\",\r\n                            fill: style.textColor,\r\n                            font: '12px \"Microsoft YaHei\", sans-serif',\r\n                        },\r\n                        onclick: function() {\r\n                            handleEvents.resetOption(chart, option, \"浙江\");\r\n                        },\r\n                    },\r\n                    {\r\n                        //省份拼音\r\n                        type: \"text\",\r\n                        left: 0,\r\n                        top: 15,\r\n                        style: {\r\n                            text: \"ZHEJIANG\",\r\n                            textAlign: \"center\",\r\n                            fill: style.textColor,\r\n                            font: '10px \"Microsoft YaHei\", sans-serif',\r\n                        },\r\n                        onclick: function() {\r\n                            handleEvents.resetOption(chart, option, \"浙江\");\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        geo: {\r\n            map: opt.mapName,\r\n            // roam: true, 是否缩放--在移动端无效\r\n            zoom: 1,\r\n            // selectedMode:true,  //多选地图区域\r\n            label: {\r\n                normal: {\r\n                    //地图名字\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: \"#fff\",\r\n                        fontSize: 10,\r\n                    },\r\n                },\r\n                emphasis: {\r\n                    //选中后颜色\r\n                    textStyle: {\r\n                        color: \"#fff\",\r\n                    },\r\n                },\r\n            },\r\n            itemStyle: {\r\n                //地图颜色配置\r\n                normal: {\r\n                    borderColor: \"rgba(147, 235, 248, 1)\",\r\n                    borderWidth: 1,\r\n                    areaColor: {\r\n                        type: \"radial\",\r\n                        x: 0.5,\r\n                        y: 0.5,\r\n                        r: 0.8,\r\n                        colorStops: [{\r\n                                offset: 0,\r\n                                color: \"rgba(147, 235, 248, 0)\", // 0% 处的颜色\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: \"rgba(147, 235, 248, .2)\", // 100% 处的颜色\r\n                            },\r\n                        ],\r\n                        globalCoord: false, // 缺省为 false\r\n                    },\r\n                    shadowColor: \"rgba(128, 217, 248, 1)\",\r\n                    // shadowColor: 'rgba(255, 255, 255, 1)',\r\n                    shadowOffsetX: -2,\r\n                    shadowOffsetY: 2,\r\n                    shadowBlur: 10,\r\n                },\r\n                emphasis: {\r\n                    areaColor: \"#389BB7\", //选中地图颜色\r\n                    borderWidth: 0,\r\n                },\r\n            },\r\n            regions: opt.activeArea.map(function(item) {\r\n                if (typeof item !== \"string\") {\r\n                    return {\r\n                        name: item.name,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                areaColor: item.areaColor || \"#389BB7\",\r\n                            },\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                show: item.showLabel,\r\n                                textStyle: {\r\n                                    color: \"#fff\",\r\n                                },\r\n                            },\r\n                        },\r\n                    };\r\n                } else {\r\n                    return {\r\n                        name: item,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                borderColor: \"#91e6ff\",\r\n                                areaColor: \"#389BB7\",\r\n                            },\r\n                        },\r\n                    };\r\n                }\r\n            }),\r\n        },\r\n        series: [{\r\n            type: \"effectScatter\", //涟漪特效\r\n            coordinateSystem: \"geo\",\r\n            // symbol: 'diamond',\r\n            symbolSize: 5, //标记的大小\r\n            showEffectOn: \"render\",\r\n            rippleEffect: {\r\n                //涟漪特效相关配置。\r\n                period: 5, //动画的周期，秒数。\r\n                scale: 10, //波纹的最大缩放比例。\r\n                brushType: \"stroke\", //波纹的绘制方式，可选 'stroke' 和 'fill'。\r\n            },\r\n            hoverAnimation: true,\r\n            itemStyle: {\r\n                normal: {\r\n                    color: function(params) {\r\n                        return levelColorMap[params.value[2]];\r\n                    },\r\n                    shadowBlur: 5,\r\n                    shadowColor: \"#333\",\r\n                },\r\n            },\r\n            // data: handleEvents.initSeriesData(opt.data),\r\n            data: arrZj,\r\n        }, ],\r\n    };\r\n\r\n    chart.setOption(option);\r\n    // 添加事件\r\n    chart.on(\"click\", function(params) {\r\n\r\n        var _self = this;\r\n        if (opt.goDown && params.name !== name[idx]) {\r\n            if (cityMap[params.name]) {\r\n\r\n\r\n                var url = cityMap[params.name];\r\n                $.get(url, function(response) {\r\n                    // console.log(response);\r\n                    curGeoJson = response;\r\n                    echarts.registerMap(params.name, response);\r\n                    handleEvents.resetOption(_self, option, params.name);\r\n                    if (params.name == \"杭州市\") {\r\n                        chart.setOption({\r\n                            series: [{\r\n                                type: \"effectScatter\", //涟漪特效\r\n                                coordinateSystem: \"geo\",\r\n                                // symbol: 'diamond',\r\n                                symbolSize: 5, //标记的大小\r\n                                showEffectOn: \"render\",\r\n                                rippleEffect: {\r\n                                    //涟漪特效相关配置。\r\n                                    period: 5, //动画的周期，秒数。\r\n                                    scale: 5, //波纹的最大缩放比例。\r\n                                    brushType: \"stroke\", //波纹的绘制方式，可选 'stroke' 和 'fill'。\r\n                                },\r\n                                hoverAnimation: true,\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: function(params) {\r\n                                            return levelColorMap[params.value[2]];\r\n                                        },\r\n                                        shadowBlur: 5,\r\n                                        shadowColor: \"#333\",\r\n                                    },\r\n                                },\r\n                                data: arrHz\r\n                                // data:arrHz\r\n\r\n                                // handleEvents.initSeriesData([opt.arrHz[x]]);\r\n                            }, ],\r\n                        });\r\n\r\n                    } else {\r\n                        chart.setOption({\r\n                            series: {\r\n                                data: []\r\n                            }\r\n                        })\r\n                    }\r\n\r\n\r\n\r\n                });\r\n            }\r\n            if (quyMap[params.name]) {\r\n                var url = quyMap[params.name];\r\n                $.get(url, function(response) {\r\n                    curGeoJson = response;\r\n                    // params.name.substring(0,params.name.length-1)\r\n                    var testname = params.name.substring(0, params.name.length - 1)\r\n                    console.log(\"区域后的\" + testname);\r\n\r\n\r\n                    echarts.registerMap(params.name, response);\r\n                    handleEvents.resetOption(_self, option, params.name);\r\n                    // 如果是主城区 显示主城区的点位\r\n                    if (params.name == \"西湖区\" || params.name == \"拱墅区\" || params.name == \"上城区\" || params.name == \"下城区\" || params.name == \"江干区\") {\r\n                        params.name = \"主城区\"\r\n                    }\r\n\r\n                    if (params.name) {\r\n\r\n                        chart.setOption({\r\n                            series: [{\r\n                                type: \"effectScatter\", //涟漪特效\r\n                                coordinateSystem: \"geo\",\r\n                                // symbol: 'diamond',\r\n                                symbolSize: 5, //标记的大小\r\n                                showEffectOn: \"render\",\r\n                                rippleEffect: {\r\n                                    //涟漪特效相关配置。\r\n                                    period: 5, //动画的周期，秒数。\r\n                                    scale: 2.5, //波纹的最大缩放比例。\r\n                                    brushType: \"stroke\", //波纹的绘制方式，可选 'stroke' 和 'fill'。\r\n                                },\r\n                                hoverAnimation: true,\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: function(params) {\r\n                                            return levelColorMap[params.value[2]];\r\n                                        },\r\n                                        shadowBlur: 5,\r\n                                        shadowColor: \"#333\",\r\n                                    },\r\n                                },\r\n                                data: mapArr[params.name]\r\n\r\n                            }, ],\r\n                        });\r\n\r\n                    }\r\n                });\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n    chart.on(\"mouseover\", function(params) {\r\n        var city = params.name; //当前城市\r\n        $(\"#hoverBox\").css(\"display\", \"flex\");\r\n        $(\"#hoverBox\").html(city);\r\n        $(\"#hoverBox\").show();\r\n\r\n        var layerX = params.event.offsetX;\r\n        var layerY = params.event.offsetY;\r\n\r\n        $(\"#hoverBox\").css({\r\n            top: layerY + 10,\r\n            left: layerX + 10,\r\n        });\r\n    });\r\n    chart.on(\"mouseout\", function(params) {\r\n        $(\"#hoverBox\").hide();\r\n    });\r\n\r\n\r\n    return chart;\r\n};\r\n\r\n$.getJSON(zhejiang, function(geoJson) {\r\n    echarts.registerMap(\"浙江\", geoJson);\r\n    var myChart = echarts.extendsMap(\"chart-panel\", {\r\n\r\n        mapName: \"浙江\", // 地图名\r\n        goDown: true, // 是否下钻\r\n        // 下钻回调\r\n        callback: function(name, option, instance) {\r\n            // console.log(name, option, instance);\r\n        },\r\n        // 数据展示\r\n        data: arrZj\r\n    });\r\n});","html":"","externalScripts":"","updaterUID":"bd-1832650076","theme":"","layout":"","viewCount":4109,"userName":"凌***殇","commentCount":13,"starCount":23,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xlZnoGvAkW.png?v=1588902405825","isCustomThumbnail":1,"builtinTags":["category-work","geo","graphic","series-effectScatter"],"customTags":[],"updaterUserName":"凌***殇"}}