{"status":0,"data":{"cid":"xpZLtdxU_D","authorUid":"obd-o2UacJV5hzcd4TNt5uY4Ohka8q6Bc6l","authorUserName":"決***0","title":"背景图测试","description":"","latestVersion":7,"alwaysLatest":1,"createTime":"2021-02-23T02:47:55.000Z","lastUpdateTime":"2021-02-23T02:47:55.000Z","auth":2,"uid":"obd-o2UacJV5hzcd4TNt5uY4Ohka8q6Bc6l","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":7,"parentVersion":6,"echartsVersion":"4.8.0","versionCreateTime":"2021-03-18T06:26:22.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1614828284945-i_KeAfQtX.png\";\n\nvar fullImage = new Image();\nlet waterLevel = 68; //水位\nlet sensorX = 491; //传感器在原图中的横向位置\n\nconst calcMargin = (height, width, margin = 0) => { //边留空白计算，margin要与grid设置一致\n    let mHeight = height * margin,\n        mWidth = width * margin,\n        outerWidth = width * window.devicePixelRatio,\n        outerHeight = height * window.devicePixelRatio,\n        innerWidth = (width - 2 * mWidth) * window.devicePixelRatio,\n        innerHeight = (height - 2 * mHeight) * window.devicePixelRatio;\n    return {\n        outerWidth,\n        outerHeight,\n        innerHeight,\n        innerWidth,\n        marginHeight: mHeight * window.devicePixelRatio,\n        marginWidth: mWidth * window.devicePixelRatio\n    };\n};\nconst marginObj = calcMargin(myChart.getHeight(), myChart.getWidth(), 0.1);\n\nconsole.log(marginObj);\n\nconst getImage = (url, {\n    outerWidth,\n    outerHeight,\n    innerHeight,\n    innerWidth,\n    marginHeight,\n    marginWidth\n}) => { //绘制背景图片\n    let img = new Image();\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n    canvas.width = outerWidth;\n    canvas.height = outerHeight;\n\n    return new Promise((resolve, reject) => {\n        img.onload = function() {\n            ctx.drawImage(img, 0, 0, img.width, img.height,\n                marginWidth, marginHeight, innerWidth, innerHeight\n            );\n            resolve({\n                src: canvas.toDataURL(),\n                width: img.width,\n                height: img.height\n            });\n        };\n        img.src = url;\n    });\n};\n\nconst setData = (xs, ys, xScale, yScale) => {\n    let nXs = xs.map(x => Math.round(xScale * x));\n    let nYs = ys.map(y => Math.round(yScale * y))\n    let res = nXs.map((x, i) => {\n        xValue = x;\n        yValue = ys[i] || null;\n        return {\n            value: [xValue, yValue],\n        };\n    });\n    return res;\n};\n\nconst getIntersectPoint = (xScale, yScale, yScaleWater) => {\n    let ctx = myChart._dom.querySelector('canvas[data-zr-dom-id=\"zr_1\"]').getContext('2d');\n    const {\n        outerWidth,\n        outerHeight,\n        innerHeight,\n        innerWidth,\n        marginHeight,\n        marginWidth\n    } = marginObj;\n\n    let x = xScale * sensorX + marginWidth,\n        y = marginHeight +  yScaleWater,\n        width = innerWidth - xScale * sensorX;\n    let {\n        data: arrs\n    } = ctx.getImageData(x, y, width, 1);\n    // debugger\n    let colors = [];\n    arrs = arrs.reverse();\n    for (let i = 0; i < arrs.length; i) {\n        let temp = arrs.slice(i, i += 4);\n        let prev = i > 0 ? colors[colors.length - 1] : null;\n        if (prev && (prev.join('') !== temp.join(''))) {\n            break;\n        }\n        colors.push(temp);\n    }\n    console.log(arrs);\n    console.log(colors);\n    return colors.length;\n}\n\noption = {\n    title: {\n        text: 'Awesome Chart'\n    },\n    grid: [{\n        show: true,\n        left: '10%',\n        bottom: '10%',\n        top: '10%',\n        zlevel: 1,\n        borderWidth: 0,\n        backgroundColor: {\n            image: fullImage, // 支持为 HTMLImageElement, HTMLCanvasElement，不支持路径字符串\n            repeat: 'no-repeat' // 是否平铺，可以是 'repeat-x', 'repeat-y', 'no-repeat'\n        },\n    }],\n    xAxis: {\n        show: false,\n        type: \"value\",\n        //开启x轴坐标\n        min: 0,\n        max: 1200,\n        axisPointer: {\n            show: false\n        },\n        zlevel: 1,\n    },\n    yAxis: {\n        show: true,\n        type: \"value\",\n        min: 0,\n        max: 1200,\n        //开启y轴坐标\n        axisPointer: {\n            show: false\n        },\n        zlevel: 1,\n    },\n    series: [{\n        zlevel: 1,\n        type: 'line',\n        smooth: true,\n        symbolSize: 15,\n        data: [],\n        symbol: 'circle',\n        itemStyle: {\n            color: 'red'\n        },\n        label: {\n            show: true,\n            position: 'top'\n        },\n    }, {\n        zlevel: 0,\n        type: 'line',\n        symbolSize: 0,\n        \"color\": \"#2dc3b5\",\n        \"areaStyle\": {\n            \"color\": \"#2dc3b5\",\n            // \"opacity\":1\n        },\n    }]\n};\n\ngetImage(uploadedDataURL, marginObj)\n    .then(({\n        src,\n        width,\n        height\n    }) => {\n        const {\n            outerWidth,\n            outerHeight,\n            innerHeight,\n            innerWidth,\n            marginHeight,\n            marginWidth\n        } = marginObj;\n        let yMax = 84,\n            yMin = 45.56,\n            xScale = innerWidth / width,\n            yScale = innerHeight / height,\n            yScaleWater = innerHeight * (yMax - waterLevel) / (yMax - yMin);\n        fullImage.src = src;\n        option.xAxis.max = innerWidth;\n        option.yAxis.max = yMax;\n        option.yAxis.min = yMin;\n        let waterY = waterLevel;\n        option.series[1]['data'] = [\n            [0, waterY],\n            [innerWidth, waterY]\n        ];\n\n        myChart.setOption(option);\n        myChart.resize();\n        setTimeout(() => {\n            let x = getIntersectPoint(xScale, yScale, yScaleWater);\n            let data = setData([sensorX, (innerWidth - x - 5) / xScale], [64, waterLevel],\n                xScale, yScale);\n            option.series[0]['data'] = data;\n            myChart.setOption(option);\n            console.log(data);\n            // console.log(myChart._dom.querySelector('canvas[data-zr-dom-id=\"zr_1\"]'));\n        }, 1000);\n\n    });","html":"","externalScripts":"","updaterUID":"obd-o2UacJV5hzcd4TNt5uY4Ohka8q6Bc6l","theme":"","layout":"","viewCount":88,"userName":"決***0","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xpZLtdxU_D.png?v=1616048782567","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-graph","title"],"customTags":[],"updaterUserName":"決***0"}}