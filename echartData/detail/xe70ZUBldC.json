{"status":0,"data":{"cid":"xe70ZUBldC","authorUid":"obd-o2LgI2pkVf9mddcHOk63ohWZi-vIuBd","authorUserName":"听***道","title":"3D饼图","description":"之前在社区看到过一个案例，找不到了现在。留作分享。  \n图表的高度和显示的数据进行了分离  ，直观不明显但是更加美观了","latestVersion":1,"alwaysLatest":1,"createTime":"2021-03-26T09:25:30.000Z","lastUpdateTime":"2021-03-26T09:25:30.000Z","auth":2,"uid":"obd-o2LgI2pkVf9mddcHOk63ohWZi-vIuBd","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2021-03-26T09:25:30.000Z","code":" var data = [{\r\n     \"name\": \"危运\",\r\n     \"value\": 40,\r\n     \"number\": 120,\r\n     itemStyle: {\r\n         // 透明度\r\n         opacity: 0.7,\r\n         // 扇形颜色\r\n         color: 'rgba(32,159,237,1)',\r\n     }\r\n }, {\r\n     \"name\": \"包车\",\r\n     \"value\": 30,\r\n     \"number\": 80,\r\n     itemStyle: {\r\n         // 透明度\r\n         opacity: 0.7,\r\n         // 扇形颜色\r\n         color: 'rgba(255,159,32,1)',\r\n     }\r\n }, {\r\n     \"name\": \"班车\",\r\n     \"value\": 20,\r\n     \"number\": 60,\r\n     itemStyle: {\r\n         // 透明度\r\n         opacity: 0.7,\r\n         // 扇形颜色\r\n         color: 'rgba(159,255,237,1)',\r\n     }\r\n }, {\r\n     \"name\": \"重货\",\r\n     \"value\": 10,\r\n     \"number\": 10,\r\n     itemStyle: {\r\n         // 透明度\r\n         opacity: 0.7,\r\n         // 扇形颜色\r\n         color: 'rgba(159,255,32,1)',\r\n     }\r\n }]\r\n function getParametricEquation(startRatio, endRatio, isSelected, isHovered, k, h) {\r\n                // 计算\r\n                let midRatio = (startRatio + endRatio) / 2;\r\n\r\n                let startRadian = startRatio * Math.PI * 2;\r\n                let endRadian = endRatio * Math.PI * 2;\r\n                let midRadian = midRatio * Math.PI * 2;\r\n\r\n                // 如果只有一个扇形，则不实现选中效果。\r\n                if (startRatio === 0 && endRatio === 1) {\r\n                    isSelected = false;\r\n                }\r\n\r\n                // 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\r\n                k = typeof k !== 'undefined' ? k : 1 / 3;\r\n\r\n                // 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\r\n                let offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\r\n                let offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\r\n\r\n                // 计算高亮效果的放大比例（未高亮，则比例为 1）\r\n                let hoverRate = isHovered ? 1.05 : 1;\r\n\r\n                // 返回曲面参数方程\r\n                return {\r\n                    u: {\r\n                        min: -Math.PI,\r\n                        max: Math.PI * 3,\r\n                        step: Math.PI / 32,\r\n                    },\r\n\r\n                    v: {\r\n                        min: 0,\r\n                        max: Math.PI * 2,\r\n                        step: Math.PI / 20,\r\n                    },\r\n\r\n                    x: function (u, v) {\r\n                        if (u < startRadian) {\r\n                            return offsetX + Math.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\r\n                        }\r\n                        if (u > endRadian) {\r\n                            return offsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\r\n                        }\r\n                        return offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\r\n                    },\r\n\r\n                    y: function (u, v) {\r\n                        if (u < startRadian) {\r\n                            return offsetY + Math.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\r\n                        }\r\n                        if (u > endRadian) {\r\n                            return offsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\r\n                        }\r\n                        return offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\r\n                    },\r\n\r\n                    z: function (u, v) {\r\n                        if (u < -Math.PI * 0.5) {\r\n                            return Math.sin(u);\r\n                        }\r\n                        if (u > Math.PI * 2.5) {\r\n                            return Math.sin(u) * h * 0.1;\r\n                        }\r\n                        return Math.sin(v) > 0 ? 1 * h * 0.1 : -1;\r\n                    },\r\n                };\r\n            }\r\n\r\n\r\n function getPie3D(pieData, internalDiameterRatio) {\r\n     let series = [];\r\n     let sumValue = 0;\r\n     let startValue = 0;\r\n     let endValue = 0;\r\n     let legendData = [];\r\n     let k = typeof internalDiameterRatio !== 'undefined' ? (1 - internalDiameterRatio) / (1 + internalDiameterRatio) : 1 / 3;\r\n\r\n     // 为每一个饼图数据，生成一个 series-surface 配置\r\n     for (let i = 0; i < pieData.length; i++) {\r\n         sumValue += pieData[i].value;\r\n\r\n         let seriesItem = {\r\n             name: typeof pieData[i].name === 'undefined' ? `series${i}` : pieData[i].name,\r\n             value: typeof pieData[i].value === 'undefined' ? `series${i}` : pieData[i].value,\r\n             type: 'surface',\r\n             parametric: true,\r\n             wireframe: {\r\n                 show: false,\r\n             },\r\n             pieData: pieData[i],\r\n             pieStatus: {\r\n                 selected: false,\r\n                 hovered: false,\r\n                 k: k,\r\n             },\r\n         };\r\n\r\n         if (typeof pieData[i].itemStyle != 'undefined') {\r\n             let itemStyle = {};\r\n\r\n             typeof pieData[i].itemStyle.color != 'undefined' ? (itemStyle.color = pieData[i].itemStyle.color) : null;\r\n             typeof pieData[i].itemStyle.opacity != 'undefined' ? (itemStyle.opacity = pieData[i].itemStyle.opacity) : null;\r\n\r\n             seriesItem.itemStyle = itemStyle;\r\n         }\r\n         seriesItem.label = {\r\n             formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\r\n             backgroundColor: '#eee',\r\n             borderColor: '#aaa',\r\n             borderWidth: 1,\r\n             borderRadius: 4,\r\n             // shadowBlur:3,\r\n             // shadowOffsetX: 2,\r\n             // shadowOffsetY: 2,\r\n             // shadowColor: '#999',\r\n             // padding: [0, 7],\r\n             rich: {\r\n                 a: {\r\n                     color: '#999',\r\n                     lineHeight: 22,\r\n                     align: 'center'\r\n                 },\r\n                 // abg: {\r\n                 //     backgroundColor: '#333',\r\n                 //     width: '100%',\r\n                 //     align: 'right',\r\n                 //     height: 22,\r\n                 //     borderRadius: [4, 4, 0, 0]\r\n                 // },\r\n                 hr: {\r\n                     borderColor: '#aaa',\r\n                     width: '100%',\r\n                     borderWidth: 0.5,\r\n                     height: 0\r\n                 },\r\n                 b: {\r\n                     fontSize: 16,\r\n                     lineHeight: 33\r\n                 },\r\n                 per: {\r\n                     color: '#eee',\r\n                     backgroundColor: '#334455',\r\n                     padding: [2, 4],\r\n                     borderRadius: 2\r\n                 }\r\n             }\r\n         };\r\n         series.push(seriesItem);\r\n     }\r\n     // 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\r\n     // 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\r\n     for (let i = 0; i < series.length; i++) {\r\n         endValue = startValue + series[i].pieData.value;\r\n\r\n         series[i].pieData.startRatio = startValue / sumValue;\r\n         series[i].pieData.endRatio = endValue / sumValue;\r\n         series[i].parametricEquation = getParametricEquation(\r\n             series[i].pieData.startRatio,\r\n             series[i].pieData.endRatio,\r\n             false,\r\n             false,\r\n             k,\r\n             series[i].pieData.value\r\n         );\r\n\r\n         startValue = endValue;\r\n         legendData.push(series[i].name);\r\n     }\r\n\r\n     // 补充一个透明的圆环，用于支撑高亮功能的近似实现。\r\n     series.push({\r\n         name: 'mouseoutSeries',\r\n         type: 'surface',\r\n         parametric: true,\r\n         wireframe: {\r\n             show: false,\r\n         },\r\n         itemStyle: {\r\n             opacity: 0,\r\n         },\r\n         parametricEquation: {\r\n             u: {\r\n                 min: 0,\r\n                 max: Math.PI * 2,\r\n                 step: Math.PI / 20,\r\n             },\r\n             v: {\r\n                 min: 0,\r\n                 max: Math.PI,\r\n                 step: Math.PI / 20,\r\n             },\r\n             x: function(u, v) {\r\n                 return Math.sin(v) * Math.sin(u) + Math.sin(u);\r\n             },\r\n             y: function(u, v) {\r\n                 return Math.sin(v) * Math.cos(u) + Math.cos(u);\r\n             },\r\n             z: function(u, v) {\r\n                 return Math.cos(v) > 0 ? 0.1 : -0.1;\r\n             },\r\n         },\r\n     });\r\n\r\n     // 准备待返回的配置项，把准备好的 legendData、series 传入。\r\n     let option = {\r\n         //animation: false,\r\n\r\n         legend: {\r\n             icon: 'circle',\r\n             data: legendData,\r\n             top: 50,\r\n             width: 50,\r\n             itemGap: 20,\r\n             right: 40,\r\n             formatter: function(value) {\r\n                 var res = '';\r\n                 for (var i = 0; i < data.length; i++) {\r\n                     if (data[i].name == value) {\r\n                         res = pieData[i].name + data[i].number;\r\n                     }\r\n                 }\r\n                 if (!res) {\r\n                     res = value;\r\n                 }\r\n                 return res;\r\n             },\r\n             textStyle: {\r\n                 color: '#fff',\r\n                 fontSize: 16\r\n             },\r\n             rich: {\r\n                 align: 'center',\r\n                 text: {\r\n                     fontSize: 14,\r\n                     color: '#fff',\r\n                     fontWeight: '500',\r\n                     padding: [15, 0, 5, 0],\r\n                 },\r\n             },\r\n             color: '#fff',\r\n         },\r\n         tooltip: {\r\n             formatter: (params) => {\r\n                 if (params.seriesName !== 'mouseoutSeries') {\r\n                     return `${\r\n                                    params.seriesName\r\n                                }<br/><span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${\r\n                                    params.color\r\n                                };\"></span>${option.series[params.seriesIndex].pieData.number}`;\r\n                 }\r\n             },\r\n         },\r\n         xAxis3D: {\r\n             min: -1,\r\n             max: 1,\r\n         },\r\n         yAxis3D: {\r\n             min: -1,\r\n             max: 1,\r\n         },\r\n         zAxis3D: {\r\n             min: -1,\r\n             max: 1,\r\n         },\r\n         grid3D: {\r\n             left: '-10%',\r\n             top: 20,\r\n             show: false,\r\n             boxHeight: 5,\r\n             viewControl: {\r\n                 //3d效果可以放大、旋转等，请自己去查看官方配置\r\n                 alpha: 40,\r\n                 // beta: 40,\r\n                 rotateSensitivity: 0,\r\n                 zoomSensitivity: 0,\r\n                 panSensitivity: 0,\r\n                 autoRotate: false,\r\n             },\r\n             //后处理特效可以为画面添加高光、景深、环境光遮蔽（SSAO）、调色等效果。可以让整个画面更富有质感。\r\n             postEffect: {\r\n                 //配置这项会出现锯齿，请自己去查看官方配置有办法解决\r\n                 enable: true,\r\n                 bloom: {\r\n                     enable: true,\r\n                     bloomIntensity: 0,\r\n                 },\r\n                 SSAO: {\r\n                     enable: false,\r\n                     quality: 'medium',\r\n                     radius: 2,\r\n                 },\r\n             },\r\n         },\r\n         series: series,\r\n     };\r\n     return option;\r\n }\r\n\r\n option = getPie3D(data, 0.71);","html":"","externalScripts":"https://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js","updaterUID":"obd-o2LgI2pkVf9mddcHOk63ohWZi-vIuBd","theme":"","layout":"","viewCount":20,"userName":"听***道","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xe70ZUBldC.png?v=1616750730984","isCustomThumbnail":0,"builtinTags":["category-work","grid3D","legend","series-surface","tooltip"],"customTags":[],"updaterUserName":"听***道"}}