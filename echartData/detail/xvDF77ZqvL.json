{"status":0,"data":{"cid":"xvDF77ZqvL","authorUid":"obd-o2KqSeXRa4_LUpLnjKfBdrk_FYETp6Q","authorUserName":"加***9","title":"Histogram ","description":"直方图，柱子的间隔可自定义，且柱子与柱子之间间隔几乎可以忽略不记。","latestVersion":1,"alwaysLatest":1,"createTime":"2021-03-03T06:31:51.000Z","lastUpdateTime":"2021-03-03T06:31:51.000Z","auth":2,"uid":"obd-o2KqSeXRa4_LUpLnjKfBdrk_FYETp6Q","publishedVersion":1,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2021-03-03T06:31:51.000Z","code":"/*\r\n一些必要的说明——\r\n直方图，区别于柱状图，柱子与柱子之间互相靠的很近。目前echarts中没有直接提供直方图的示例，因而做了这个，参考了\r\nhttps://blog.csdn.net/a805814077/article/details/110956526（其实基本上是照搬==）\r\n\r\n*/\r\n// 数据集，为方便查看和修改，将用作x轴刻度间隔值作为一个数据，柱子的高度作为一个数组\r\n// 需要注意的是dataX的数组是决定柱子在x轴某个数值范围内的，即间隔，为了更好显示直方图，\r\n// 间隔必须统一\r\nconst dataX = [[0,1],[1,2],[2,3],[3,4],[4,5]] \r\nconst dataY = [2,5,8,6,7]\r\n\r\nconst series = []\r\nlet max = 0 // x轴最大值\r\nlet min = 10 // x轴最小值\r\nlet interval = 0 // 柱子之间的间隔\r\n\r\n// 组装数据集\r\nconst data = dataY.map((item, index) => {\r\n    return dataX[index].concat(item)\r\n})\r\n// 遍历数据集并筛选出其中x轴的最大值和最小值，同时获取x轴的固定刻度间隔（柱子之间的间隔）\r\ndata.forEach(item => {\r\n      const x0 = item[0]\r\n      const x1 = item[1]\r\n      interval = x1 - x0\r\n      min = Math.min(min, x0)\r\n      max = Math.max(max, x1)\r\n      return [x0, x1, item[2]]\r\n})\r\n// 这个是核心，\r\nfunction renderItem(params, api) {\r\n      var yValue = api.value(2) // 意思是取出 dataItem 中的数值。例如 api.value(0) 表示取出当前 dataItem 中第一个维度的数值\r\n      var start = api.coord([api.value(0), yValue]) // 意思是进行坐标转换计算。例如 var point = api.coord([api.value(0), api.value(1)]) 表示 dataItem 中的数值转换成坐标系上的点。\r\n      var size = api.size([api.value(1) - api.value(0), yValue])// 表示得到坐标系上一段数值范围对应的长度。\r\n      var style = api.style() // 得到 series.itemStyle 中定义的样式信息，以及视觉映射的样式信息\r\n      return {\r\n        type: 'rect', // 矩形类型\r\n        shape: {\r\n          x: start[0], // 离x轴原点的距离\r\n          y: start[1],// 离y轴原点的距离\r\n          width: size[0] - 1, // 柱子的宽度\r\n          height: size[1] // 柱子的高度\r\n        },\r\n        style: style\r\n      }\r\n}\r\n\r\n\r\nconst optionSeries = {\r\n  type: 'custom',\r\n  renderItem: renderItem,\r\n  label: {\r\n    show: true,\r\n    position: 'insideTop',\r\n    formatter: (name) => {\r\n      if (name.data && name.data.length > 1) {\r\n        return Number(name.data[2]) > 0 ? name.data[2] : ''\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n  },\r\n  encode: {\r\n      // 将data[0] data[1]映射到x轴\r\n    x: [0, 1],\r\n    // 将data[2]映射到y轴\r\n    y: 2,\r\n    // 将data[2]映射到tooltip\r\n    tooltip: 2,\r\n    // 将data[2]映射到label\r\n    label: 2\r\n  },\r\n  data: data\r\n}\r\nseries.push(optionSeries)\r\n\r\noption = {\r\n    title: {\r\n        text: 'Histogram '\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        interval: interval\r\n    },\r\n    yAxis: {type: 'value',max: 10},\r\n    series: series\r\n};\r\n\r\n","html":"","externalScripts":"","updaterUID":"obd-o2KqSeXRa4_LUpLnjKfBdrk_FYETp6Q","theme":"","layout":"","viewCount":64,"userName":"加***9","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xvDF77ZqvL.png?v=1614753111231","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-custom","title"],"customTags":["Histogram","直方图"],"updaterUserName":"加***9"}}