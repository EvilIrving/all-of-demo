{"status":0,"data":{"cid":"xkXj8ZiTlu","authorUid":"bd-3997154932","authorUserName":"l***d","title":"test eeg","description":"test eeg","latestVersion":42,"alwaysLatest":1,"createTime":"2020-06-10T03:33:52.000Z","lastUpdateTime":"2020-06-17T04:05:24.000Z","auth":1,"uid":"bd-3997154932","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":42,"parentVersion":41,"echartsVersion":"4.8.0","versionCreateTime":"2020-06-21T13:38:02.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1591770442335-Z1n28JXXX.json\";\n\n// myChart.showLoading();\n\n$.getJSON(uploadedDataURL, function (data) {\n    \n   var label = data.data.label;\n                        var labelChannels = label.channels;\n                        var labelLocation = label.location;\n\n                        var bins = [];\n                        for (var i = 0; i < labelChannels.length; i++) {\n                            bins[i] = [];\n                            var labelData = labelChannels[i].data;\n                            for (var j = 0; j < labelData.length; j++) {\n                                labelData[j] == 1 && bins[i].push(j);\n                            }\n                        }\n                        \n                        for (var i = 0; i < bins.length; i++) {\n                            var bin = bins[i];\n                            var len = bin.length;\n                            var drawData = labelChannels[i].drawData = [];\n                            var start = end = bin[0];\n                            if (len === labelChannels[i].data.length) {\n                            //    start = bin[0];\n                               end = bin[len - 1];\n                               drawData.push({\n                                   start: start,\n                                   end: end,\n                                   duration: end - start\n                               });\n                            }\n                            else if (len === 0) {\n                                drawData.push({\n                                    start: start,\n                                    end: end,\n                                    duration: 0\n                                });\n                            }\n                            else {\n                                // start = bin[0];\n                                // end = bin[0];\n                                var k = 1;\n                                do {\n                                    var j = k;\n                                    while ( j < len) {\n                                        if (bin[j] - bin[j - 1] === 1) {\n                                            end = bin[j];\n                                            j++; \n                                        }\n                                    }\n\n                                    drawData.push({\n                                        start: start,\n                                        end: end,\n                                        duration: end - start\n                                    });\n\n                                    start = bin[j];\n                                    end =  bin[j];\n                                    k = ++j;\n\n                                } while (k < len);\n                            }\n                        }\n\n                        // ----------------------start\n                        // 新的事件标注的可视化从这里开始，上面数据处理部分忽略\n                        var eventData = [];\n                        echarts.util.each(labelChannels, function (channel, index) {\n                            // var baseTime = startTime;\n                            for (var i = 0; i < channel.drawData.length; i++) {\n                                var event = channel.drawData[i];\n                                if (event.duration > 0) {\n                                    eventData.push({\n                                        name: channel.name,\n                                        value: [\n                                            channel.name,\n                                            event.start,\n                                            event.end,\n                                            event.duration\n                                        ]\n                                    });\n                                }\n                            }\n                        });\n\n                        function renderEventItem(params, api) {\n                            var categoryIndex = api.value(0);\n                            var start = api.coord([api.value(1), categoryIndex]);\n                            var end = api.coord([api.value(2), categoryIndex]);\n                            var height = api.size([0, 1])[1] * 0.9;\n\n                            var rectShape = {\n                                x: start[0],\n                                y: start[1] - height / 2,\n                                width: end[0] - start[0],\n                                height: height\n                            };\n\n                            return {\n                                type: 'rect',\n                                shape: rectShape,\n                                style: {\n                                    fill: '#660066'\n                                }\n                            };\n                        }\n                        // ---------------------- end\n                        \n                        //以下是之前绘制信道折线图部分，跟之前一样忽略\n                        var rawData = data.data.data;\n                        var channels = rawData.channels;\n                        var location = rawData.location;\n\n                        // 这里设置波幅\n                        var Z_HEIGHT = 120;\n\n                        var minX = Infinity;\n                        var maxX = -Infinity;\n                        var minZ = Infinity;\n                        var maxZ = -Infinity;\n                        \n                        var drawData = [];\n                        channels.forEach(function (channel) {\n                            var lineData = [];\n                            for (var i = 0; i < channel.data.length; i++) {\n                                minX = Math.min(minX, i);\n                                maxX = Math.max(maxX, i + 1);\n                                var y = channel.name;\n                                var z = channel.data[i];\n                                minZ = Math.min(minZ, z);\n                                maxZ = Math.max(maxZ, z);\n                            \n                                lineData.push(i, y, z);\n                            }\n                            drawData.push(lineData);\n                        });\n\n                        option = {\n                            tooltip: {\n                                trigger: 'item',\n                                // axisPointer: {\n                                //     axis: 'x'\n                                // },\n                                formatter: function (params) {\n                                     console.log(params, 'params');\n                                    if (params[0].componentIndex === 1) {\n                                        var params = params[0];\n                                        console.log(params);\n                                       \n                                        return params.marker + params.name + '<br />' \n                                            + 'start: ' + params.value[1] + '<br />'\n                                            + 'end: ' + params.value[2] + '<br />'\n                                            + 'duration: ' + params.value[3] + '<br />';\n                                    }\n                                    \n                                }\n                            },\n                            xAxis: {\n                                // bottom: 10,\n                                offset: 25,\n                                axisLine: {\n                                    // show: false\n                                },\n                                min: minX,\n                                max: maxX,\n                                splitLine: {\n                                    show: false\n                                }\n                            },\n                            yAxis: {\n                                type:'category',\n                                position: 'left',\n                                splitLine: {\n                                    show: false\n                                }\n                            },\n                            grid: {\n                                left: '15%',\n                                height: 850,\n                                bottom: '10%'\n                            },\n                            series: [\n                                {\n                                    type: 'custom',\n                                    dimensions: ['x', 'y'],\n                                    renderItem: function (params, api) {\n                                        var points = [];\n                                        for (var i = 0; i < drawData[params.dataIndex].length;) {\n                                            var x = api.value(i++);\n                                            var y = api.value(i++);\n                                            var z = api.value(i++);\n                                            \n                                            var pt = api.coord([x, y]);\n                                            \n                                            // Linear map in z axis\n                                            pt[1] -= (z - minZ) / (maxZ - minZ) * Z_HEIGHT - Z_HEIGHT * 0.5;\n                                            points.push(pt);\n                                        }\n                                        return {\n                                            type: 'polyline',\n                                            \n                                            //----------start\n                                            // 加一个这个让紫色的 bar 显示在下面，避免遮住曲线，参考eeg\n                                            z2: 10,\n                                            // ----------end\n                                            shape: {\n                                                points: points,\n                                            },\n                                            style: api.style({\n                                                stroke: '#8dd3c7',\n                                                lineWidth: 2,\n                                                fill: \"none\"\n                                            }),\n                                            styleEmphasis: {\n                                                stroke: 'blue'\n                                            }\n                                        }\n                                    },\n                                    data: drawData,\n                                },\n                                // --------------start\n                                // 新的事件标注的系列\n                                {\n                                    type: 'custom',\n                                    clip: true,\n                                    renderItem:  renderEventItem,\n                                    data: eventData,\n                                    encode: {\n                                        x: [1, 2],\n                                        y: 0\n                                    }\n\n                                }\n                                //-----------------end\n                            ]\n                        };\n\n                        myChart.setOption(option);\n                    });","html":"","externalScripts":"https://cdn.bootcss.com/PapaParse/4.1.2/papaparse.min.js","updaterUID":"bd-3997154932","theme":"default","layout":"","viewCount":204,"userName":"l***d","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xkXj8ZiTlu.png?v=1592746683150","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-custom","visualMap"],"customTags":[],"updaterUserName":"l***d"}}