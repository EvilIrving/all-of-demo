{"status":0,"data":{"cid":"xd6_stONlb","authorUid":"obd-oEygZsDTLxuwmnak0OUEpb82X1KBU4e","authorUserName":"谢***4","title":"柱状图","description":"","latestVersion":2,"alwaysLatest":0,"createTime":"2021-11-22T09:59:17.000Z","lastUpdateTime":"2021-11-23T02:41:07.000Z","auth":1,"uid":"obd-oEygZsDTLxuwmnak0OUEpb82X1KBU4e","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-23T02:41:07.000Z","code":"var CubeLeft = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0,\n  },\n  buildPath: function (ctx, shape) {\n    const xAxisPoint = shape.xAxisPoint;\n    const c0 = [shape.x, shape.y];\n    const c1 = [shape.x - 9, shape.y - 9];\n    const c2 = [xAxisPoint[0] - 9, xAxisPoint[1] - 9];\n    const c3 = [xAxisPoint[0], xAxisPoint[1]];\n    ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n  },\n});\nlet CubeRight = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0,\n  },\n  buildPath: function (ctx, shape) {\n    const xAxisPoint = shape.xAxisPoint;\n    const c1 = [shape.x, shape.y];\n    const c2 = [xAxisPoint[0], xAxisPoint[1]];\n    const c3 = [xAxisPoint[0] + 18, xAxisPoint[1] - 9];\n    const c4 = [shape.x + 18, shape.y - 9];\n    ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n  },\n});\nlet CubeTop = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0,\n  },\n  buildPath: function (ctx, shape) {\n    const c1 = [shape.x, shape.y];\n    const c2 = [shape.x + 18, shape.y - 9];\n    const c3 = [shape.x + 9, shape.y - 18];\n    const c4 = [shape.x - 9, shape.y - 9];\n    ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n  },\n});\necharts.graphic.registerShape('CubeLeft', CubeLeft);\necharts.graphic.registerShape('CubeRight', CubeRight);\necharts.graphic.registerShape('CubeTop', CubeTop);\nvar seriesData1 = [18, 29, 45, 66, 20, 29, 45, 66, 20];\nvar xAxisData = [\n    '联防协议',\n    '安防责任书',\n    '小组活动',\n    '教育培训',\n    '预案演练',\n    '排班',\n    '要害岗位',\n    '安全信息员',\n    '信息员',\n  ],\n  option = {\n    backgroundColor: '#012366',\n    title: {\n      text: '',\n      top: 32,\n      left: 18,\n      textStyle: {\n        color: '#00F6FF',\n        fontSize: 24,\n      },\n    },\n    grid: {\n      left: 20,\n      right: 40,\n      bottom: '19%',\n      top: 50,\n      containLabel: true,\n    },\n    xAxis: {\n      // type: 'category',\n      data: xAxisData,\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: 'white',\n        },\n      },\n      offset: 20,\n      axisTick: {\n        show: false,\n        length: 9,\n        alignWithLabel: true,\n        lineStyle: {\n          color: '#7DFFFD',\n        },\n      },\n      axisLabel: {\n        show: true,\n        interval: 0,\n        align: 'center',\n        formatter: function (params, index) {\n          var newParamsName = ''; // 最终拼接成的字符串\n          var paramsNameNumber = params.length; // 实际标签的个数\n          var provideNumber = 3; // 每行能显示的字的个数\n          var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\n          /**\n           * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\n           */\n          // 条件等同于rowNumber>1\n          if (paramsNameNumber > provideNumber) {\n            /** 循环每一行,p表示行 */\n            for (var p = 0; p < rowNumber; p++) {\n              var tempStr = ''; // 表示每一次截取的字符串\n              var start = p * provideNumber; // 开始截取的位置\n              var end = start + provideNumber; // 结束截取的位置\n              // 此处特殊处理最后一行的索引值\n              if (p == rowNumber -1) {\n                // 最后一次不换行\n                tempStr = params.substring(start, paramsNameNumber);\n              } else {\n                // 每一次拼接字符串并换行\n                tempStr = params.substring(start, end) + '\\n';\n              }\n              newParamsName += tempStr; // 最终拼成的字符串\n            }\n            return '{a|' + seriesData1[index] + '}' + '\\n' + '{b|' + newParamsName + '}';\n          } else {\n            return '{a|' + seriesData1[index] + '}' + '\\n' + '{b|' + params + '}';\n          }\n        },\n        textStyle: {\n          fontSize: 14,\n          color: '#ffffff',\n          rich: {\n            a: {\n              fontSize: 18,\n              color: '#ffffff',\n            },\n            b: {\n              height: 25,\n              fontSize: 14,\n              color: '#ffffff',\n            },\n          },\n        },\n      },\n    },\n    yAxis: {\n      type: 'value',\n      axisLine: {\n        show: false,\n        lineStyle: {\n          color: 'white',\n        },\n      },\n      splitLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n        fontSize: 16,\n      },\n      boundaryGap: ['20%', '20%'],\n    },\n    series: [\n      {\n        type: 'custom',\n        renderItem: (params, api) => {\n          const location = api.coord([api.value(0), api.value(1)]);\n          let maxColor = [\n            {\n              start: 'rgba(22, 199, 134, .2)',\n              end: 'rgba(0, 255, 60, .2)',\n            },\n            {\n              start: 'rgba(19, 200, 155, .2)',\n              end: 'rgba(40, 252, 160, .2)',\n            },\n            {\n              start: 'rgba(36, 243, 206, .2)',\n              end: 'rgba(13, 188, 174, .2)',\n            },\n            {\n              start: 'rgba(42, 252, 240, .2)',\n              end: 'rgba(10, 172, 187, .2)',\n            },\n            {\n              start: 'rgba(5, 166, 217, .2)',\n              end: 'rgba(54, 209, 234, .2)',\n            },\n            {\n              start: 'rgba(11, 60, 250, .2)',\n              end: 'rgba(55, 100, 253, .2)',\n            },\n            {\n              start: 'rgba(88, 31, 214, .2)',\n              end: 'rgba(141, 71, 255, .2)',\n            },\n            {\n              start: 'rgba(99, 72, 213, .2)',\n              end: 'rgba(198, 98, 250, .2)',\n            },\n            {\n              start: 'rgba(153, 30, 204, .2)',\n              end: 'rgba(246, 7, 247, .2)',\n            },\n          ];\n\n          return {\n            type: 'group',\n            children: [\n              {\n                type: 'CubeLeft',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: maxColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: maxColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n              {\n                type: 'CubeRight',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: maxColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: maxColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n              {\n                type: 'CubeTop',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: maxColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: maxColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n            ],\n          };\n        },\n        data: [100, 100, 100, 100, 100, 100, 100, 100, 100],\n      },\n      {\n        type: 'custom',\n        renderItem: (params, api) => {\n          const location = api.coord([api.value(0), api.value(1)]);\n          let valueColor = [\n            {\n              start: 'rgba(22, 199, 134, 1)',\n              end: 'rgba(0, 255, 60, 1)',\n            },\n            {\n              start: 'rgba(19, 200, 155, 1)',\n              end: 'rgba(40, 252, 160, 1)',\n            },\n            {\n              start: 'rgba(36, 243, 206, 1)',\n              end: 'rgba(13, 188, 174, 1)',\n            },\n            {\n              start: 'rgba(42, 252, 240, 1)',\n              end: 'rgba(10, 172, 187, 1)',\n            },\n            {\n              start: 'rgba(5, 166, 217, 1)',\n              end: 'rgba(54, 209, 234, 1)',\n            },\n            {\n              start: 'rgba(11, 60, 250, 1)',\n              end: 'rgba(55, 100, 253, 1)',\n            },\n            {\n              start: 'rgba(88, 31, 214, 1)',\n              end: 'rgba(141, 71, 255, 1)',\n            },\n            {\n              start: 'rgba(99, 72, 213, 1)',\n              end: 'rgba(198, 98, 250, 1)',\n            },\n            {\n              start: 'rgba(153, 30, 204, 1)',\n              end: 'rgba(246, 7, 247, 1)',\n            },\n          ];\n          return {\n            type: 'group',\n            children: [\n              {\n                type: 'CubeLeft',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: valueColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: valueColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n              {\n                type: 'CubeRight',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: valueColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: valueColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n              {\n                type: 'CubeTop',\n                shape: {\n                  api,\n                  xValue: api.value(0),\n                  yValue: api.value(1),\n                  x: location[0],\n                  y: location[1],\n                  xAxisPoint: api.coord([api.value(0), 0]),\n                },\n                style: {\n                  fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                    {\n                      offset: 0,\n                      color: valueColor[params.dataIndex].end,\n                    },\n                    {\n                      offset: 1,\n                      color: valueColor[params.dataIndex].start,\n                    },\n                  ]),\n                },\n              },\n            ],\n          };\n        },\n        data: [18, 29, 45, 66, 20, 29, 45, 66, 20],\n      },\n    ],\n  };\n","html":"","externalScripts":"","updaterUID":"obd-oEygZsDTLxuwmnak0OUEpb82X1KBU4e","theme":"","layout":"","viewCount":0,"userName":"谢***4","commentCount":1,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xd6_stONlb.png?v=1637635267344","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-custom","title"],"customTags":[],"updaterUserName":"谢***4"}}