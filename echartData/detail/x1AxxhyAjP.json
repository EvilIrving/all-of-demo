{"status":0,"data":{"cid":"x1AxxhyAjP","authorUid":"obd-o24yyFRUITdJ1B79kj67FCBzEIRV3BT","authorUserName":"李***o","title":"3D立体图","description":"","latestVersion":3,"alwaysLatest":1,"createTime":"2021-11-05T06:57:48.000Z","lastUpdateTime":"2021-11-05T07:37:38.000Z","auth":2,"uid":"obd-o24yyFRUITdJ1B79kj67FCBzEIRV3BT","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.9.0","versionCreateTime":"2021-11-05T07:37:38.000Z","code":"/*************************\npie3D 尝试\n*****\n* 加入引线\n* ******\n更新时间: 2020.10.8 17:12 v1.1\n使用组件: grid3D、xAxis3D、yAxis3D、zAxis3D、surface\n EC 版本: 4.8.0\n GL 版本：0.4.3\n根据用户ZhXand618的模板克隆\n如果转载: 请注明出处\n\n*************************\n【 getParametricEquation 函数说明 】 :\n*************************\n    根据传入的\n    startRatio（浮点数）: 当前扇形起始比例，取值区间 [0, endRatio)\n    endRatio（浮点数）: 当前扇形结束比例，取值区间 (startRatio, 1]\n    isSelected（布尔值）:是否选中，效果参照二维饼图选中效果（单选）\n    isHovered（布尔值）: 是否放大，效果接近二维饼图高亮（放大）效果（未能实现阴影）\n    k（0~1之间的浮点数）：用于参数方程的一个参数，取值 0~1 之间，通过「内径/外径」的值换算而来。\n    \n    生成 3D 扇形环曲面\n\n*************************\n【 getPie3D 函数说明 】 :\n*************************\n    根据传入的\n    pieData（object）：饼图数据\n    internalDiameterRatio（0~1之间的浮点数）：内径/外径的值（默认值 1/2），当该值等于 0 时，为普通饼图\n    \n    生成模拟 3D 饼图的配置项 option\n    \n    备注：饼图数据格式示意如下\n    [{\n        name: '数据1',\n        value: 10\n    }, {\n        // 数据项名称\n        name: '数据2',\n        value : 56,\n        itemStyle:{\n            // 透明度\n            opacity: 0.5,\n            // 扇形颜色\n            color: 'green'\n        }\n    }]\n    \n*************************\n【 鼠标事件监听说明 】 :\n*************************\n    click： 实现饼图的选中效果（单选）\n            大致思路是，通过监听点击事件，获取到被点击数据的系列序号 params.seriesIndex，\n            然后将对应扇形向外/向内移动 10% 的距离。\n            \n    mouseover： 近似实现饼图的高亮（放大）效果\n            大致思路是，在饼图外部套一层透明的圆环，然后监听 mouseover 事件，获取\n            到对应数据的系列序号 params.seriesIndex 或系列名称 params.seriesName，\n            如果鼠标移到了扇形上，则先取消高亮之前的扇形（如果有）,再高亮当前扇形；\n            如果鼠标移到了透明圆环上，则只取消高亮之前的扇形（如果有），不做任何高亮。\n            \n    globalout： 当鼠标移动过快，直接划出图表区域时，有可能监听不到透明圆环的 mouseover，\n            导致此前高亮没能取消，所以补充了对 globalout 的监听。\n\n        \n*************************/\n\n// 生成扇形的曲面参数方程，用于 series-surface.parametricEquation\nfunction getParametricEquation(startRatio, endRatio, isSelected, isHovered, k, height) {\n\n    // 计算\n    let midRatio = (startRatio + endRatio) / 2;\n\n    let startRadian = startRatio * Math.PI * 2;\n    let endRadian = endRatio * Math.PI * 2;\n    let midRadian = midRatio * Math.PI * 2;\n\n    // 如果只有一个扇形，则不实现选中效果。\n    if (startRatio === 0 && endRatio === 1) {\n      isSelected = false;\n    }\n\n    // 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\n    k = typeof k !== 'undefined' ? k : 1 / 3;\n\n    // 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\n    let offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\n    let offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\n\n    // 计算高亮效果的放大比例（未高亮，则比例为 1）\n    let hoverRate = isHovered ? 1.05 : 1;\n\n    // 返回曲面参数方程\n    return {\n\n      u: {\n        min: -Math.PI,\n        max: Math.PI * 3,\n        step: Math.PI / 32\n      },\n\n      v: {\n        min: 0,\n        max: Math.PI * 2,\n        step: Math.PI / 20\n      },\n\n      x: function (u, v) {\n        if (u < startRadian) {\n          return offsetX + Math.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n        }\n        if (u > endRadian) {\n          return offsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n        }\n        return offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\n      },\n\n      y: function (u, v) {\n        if (u < startRadian) {\n          return offsetY + Math.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n        }\n        if (u > endRadian) {\n          return offsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n        }\n        return offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\n      },\n\n      z: function (u, v) {\n        if (u < - Math.PI * 0.5) {\n          return Math.sin(u);\n        }\n        if (u > Math.PI * 2.5) {\n          return Math.sin(u);\n        }\n        return Math.sin(v) > 0 ? 1 * height : -1;\n      }\n    };\n  }\n\n\n// 生成模拟 3D 饼图的配置项\nfunction getPie3D(pieData, internalDiameterRatio) {\n    let series = [];\n    let sumValue = 0;\n    let startValue = 0;\n    let endValue = 0;\n    let legendData = [];\n    let k =\n      typeof internalDiameterRatio !== 'undefined'\n        ? (1 - internalDiameterRatio) / (1 + internalDiameterRatio)\n        : 1 / 3;\n\n    // 为每一个饼图数据，生成一个 series-surface 配置\n    for (let i = 0; i < pieData.length; i++) {\n      sumValue += pieData[i].value;\n      let seriesItem = {\n        name: typeof pieData[i].name === 'undefined' ? `series${i}` : pieData[i].name,\n        type: 'surface',\n        parametric: true,\n        wireframe: {\n          show: false,\n        },\n        pieData: pieData[i],\n        pieStatus: {\n          selected: false,\n          hovered: false,\n          k: k,\n        },\n      };\n\n      if (typeof pieData[i].itemStyle != 'undefined') {\n        let itemStyle = {};\n        typeof pieData[i].itemStyle.color != 'undefined' ? (itemStyle['color'] = pieData[i].itemStyle.color) : null;\n        typeof pieData[i].itemStyle.opacity != 'undefined'\n          ? (itemStyle['opacity'] = pieData[i].itemStyle.opacity)\n          : null;\n\n        seriesItem['itemStyle'] = itemStyle;\n      }\n      series.push(seriesItem);\n    }\n\n    // 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\n    // 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\n    let linesSeries = [];\n    for (let i = 0; i < series.length; i++) {\n      endValue = startValue + series[i].pieData.value;\n\n      series[i].pieData.startRatio = startValue / sumValue;\n      series[i].pieData.endRatio = endValue / sumValue;\n      series[i].parametricEquation = getParametricEquation(\n        series[i].pieData.startRatio,\n        series[i].pieData.endRatio,\n        false,\n        false,\n        k,\n        series[i].pieData.value\n      );\n\n      startValue = endValue;\n      let midRadian = (series[i].pieData.endRatio + series[i].pieData.startRatio) * Math.PI;\n      let posX = Math.cos(midRadian) * (1 + Math.cos(Math.PI / 2));\n      let posY = Math.sin(midRadian) * (1 + Math.cos(Math.PI / 2));\n      let posZ = Math.log(Math.abs(series[i].pieData.value + 1)) * 0.1;\n      let flag =\n        (midRadian >= 0 && midRadian <= Math.PI / 3) || (midRadian >= (2 * Math.PI) / 2 && midRadian <= Math.PI * 2)\n          ? 1\n          : -1;\n      let color = pieData[i].itemStyle.color;\n      let endPosArr = [\n        posX * 1.8 + i * 0.1 * flag + (flag < 0 ? -0.5 : 0),\n        posY * 1.8 + i * 0.1 * flag + (flag < 0 ? -0.5 : 0),\n        posZ * 2\n      ];\n      linesSeries.push(\n        {\n          type: 'scatter3D',\n          label: {\n            position: 'top',\n            show: true,\n            textStyle: {\n              color: color,\n              backgroundColor: 'transparent',\n            },\n            formatter: function (param) {\n              return '';\n            },\n          },\n          symbolSize: 0,\n          data: [{ name: series[i].name, text: series[i].pieData.value, value: endPosArr }],\n        }\n      );\n      legendData.push({\n        name: series[i].name,\n        textStyle: {\n          color: color,\n          fontSize: 14,\n        },\n      });\n\n    }\n    series = series.concat(linesSeries);\n\n    // 补充一个透明的圆环，用于支撑高亮功能的近似实现。\n    series.push({\n      name: 'mouseoutSeries',\n      type: 'surface',\n      parametric: true,\n      wireframe: {\n        show: false,\n      },\n      itemStyle: {\n        opacity: 0,\n      },\n      parametricEquation: {\n        u: {\n          min: 0,\n          max: Math.PI * 2,\n          step: Math.PI / 50,\n        },\n        v: {\n          min: 0,\n          max: Math.PI,\n          step: Math.PI / 20,\n        },\n        x: function (u, v) {\n          return Math.sin(v) * Math.sin(u) + Math.sin(u);\n        },\n        y: function (u, v) {\n          return Math.sin(v) * Math.cos(u) + Math.cos(u);\n        },\n        z: function (u, v) {\n          return Math.cos(v) > 0 ? 0.1 : -0.1;\n        },\n      },\n    });\n\n    // 准备待返回的配置项，把准备好的 legendData、series 传入。\n    let option = {\n      //animation: false,\n      legend: {\n        data: legendData,\n        selectedMode: false,\n        orient: 'vertical',\n        right: '10%',\n        top: '25%',\n        itemGap: 20\n      },\n      tooltip: {\n        formatter: (params) => {\n          if (params.seriesName !== 'mouseoutSeries') {\n            return `${params.seriesName\n              }<br/><span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${params.color\n              };\"></span>${option.series[params.seriesIndex].pieData.value}`;\n          }\n        },\n      },\n      xAxis3D: {\n        min: -1,\n        max: 1,\n      },\n      yAxis3D: {\n        min: -1,\n        max: 1,\n      },\n      zAxis3D: {\n        min: -1,\n        max: 1,\n      },\n      grid3D: {\n        show: false,\n        left: 'left',\n        boxHeight: 1,\n        viewControl: {\n          //3d效果可以放大、旋转等，请自己去查看官方配置\n          alpha: 30,\n          // beta: 40,\n          rotateSensitivity: 0,\n          zoomSensitivity: 0,\n          panSensitivity: 0,\n          autoRotate: false,\n        },\n        //后处理特效可以为画面添加高光、景深、环境光遮蔽（SSAO）、调色等效果。可以让整个画面更富有质感。\n        postEffect: {\n          //配置这项会出现锯齿，请自己去查看官方配置有办法解决\n          enable: true,\n          bloom: {\n            enable: true,\n            bloomIntensity: 0.1,\n          },\n          SSAO: {\n            enable: true,\n            quality: 'medium',\n            radius: 2,\n          },\n        },\n      },\n      series: series,\n    };\n    return option;\n  }\n\n// 传入数据生成 option\noption = getPie3D(\n    [\n    {\n      name: '跳远',\n      value: 30,\n      itemStyle: {\n        color: '#f77b66',\n      },\n    },\n    {\n      name: '跳高',\n      value: 17,\n      itemStyle: {\n        color: '#3edce0',\n      },\n    },\n    {\n      name: '拔河',\n      value: 20,\n      itemStyle: {\n        color: '#f94e76',\n      },\n    },\n    {\n      name: '铅球',\n      value: 13,\n      itemStyle: {\n        color: '#9e60f9',\n      },\n    },\n    {\n      name: '铁饼',\n      value: 20,\n      itemStyle: {\n        color: '#018ef1',\n      },\n    },\n  ],\n    0.59\n);\n\n\n","html":"","externalScripts":"https://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js","updaterUID":"obd-o24yyFRUITdJ1B79kj67FCBzEIRV3BT","theme":"","layout":"","viewCount":0,"userName":"李***o","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x1AxxhyAjP.png?v=1636097858892","isCustomThumbnail":0,"builtinTags":["category-work","grid3D","legend","series-scatter3D","series-surface","tooltip"],"customTags":[],"updaterUserName":"李***o"}}