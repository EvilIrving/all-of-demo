{"status":0,"data":{"cid":"xP0kml2Qsk","authorUid":"bd-2133619855","authorUserName":"小***乖","title":"双Y轴每根柱子宽度不同的显示效果","description":"双Y轴每根柱子宽度不同的显示效果，柱子宽度是计算出来的。这个提供个解决方案","latestVersion":2,"alwaysLatest":1,"createTime":"2019-06-06T07:22:45.000Z","lastUpdateTime":"2019-06-06T07:22:45.000Z","auth":2,"uid":"bd-2133619855","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-06T07:42:33.000Z","code":"function numAdd(arg1, arg2){\n    var r1, r2, m;\n    try {\n        r1 = arg1.toString().split(\".\")[1].length\n    } catch (e) {\n        r1 = 0\n    }\n    try {\n        r2 = arg2.toString().split(\".\")[1].length\n    } catch (e) {\n        r2 = 0\n    }\n    m = Math.pow(10, Math.max(r1, r2))\n    return (arg1 * m + arg2 * m) / m;\n}\nvar mvvChartData = [{\n        \"brEndTime\": 664,\n        \"brStartTime\": 0,\n        \"volume\": 378\n    },\n    {\n        \"brEndTime\": 1976,\n        \"brStartTime\": 1264,\n        \"volume\": 392\n    },\n    {\n        \"brEndTime\": 3480,\n        \"brStartTime\": 2704,\n        \"volume\": 396\n    },\n    {\n        \"brEndTime\": 4836,\n        \"brStartTime\": 4144,\n        \"volume\": 321\n    },\n    {\n        \"brEndTime\": 6528,\n        \"brStartTime\": 5656,\n        \"volume\": 414\n    },\n    {\n        \"brEndTime\": 7992,\n        \"brStartTime\": 7240,\n        \"volume\": 382\n    },\n    {\n        \"brEndTime\": 9496,\n        \"brStartTime\": 8696,\n        \"volume\": 374\n    }\n]\nvar max = Math.ceil(mvvChartData[mvvChartData.length - 1].brEndTime / 1000);\nvar allxPoint = [];\n\nfor (var i = '0.0'; i <= max;) {\n    allxPoint.push(i);\n    i = numAdd(i, 0.1).toFixed(2)\n}\nvar allArr = [];\n// 计算梯度线的算法：mvvy = volsum/time*60  volsum:容积累加值 time：最后一个有效点的brStartTime减去第一个有效点brStartTime\nvar time = Number(mvvChartData[mvvChartData.length - 1].brStartTime) - Number(mvvChartData[0].brStartTime);\nvar volsum = 0;\nvar lineArr = []; //梯度线的数据数组\nvar allArr = [];\n\n\nmvvChartData.forEach(element => {\n    volsum = volsum + Number(element.volume);\n    element.volsum = volsum;\n    lineArr.push([Number((Number(element.brStartTime) / 1000).toFixed(2)), Number((volsum / time * 60).toFixed(2))])\n    // 这里加减0.05是为了优化显示效果，因为每个bar都在在刻度中线显示的两边都会多出来所以需要在显示上去掉两边\n    element.brStartTime = Number((Number(element.brStartTime) / 1000 + 0.06).toFixed(2));\n    element.brEndTime = Number((Number(element.brEndTime) / 1000 - 0.06).toFixed(2));\n    element.volume = Number((Number(element.volume) / 1000).toFixed(2));\n    for (var i = element.brStartTime; i <= (element.brEndTime);) {\n        allArr.push([i, element.volume]);\n        i = numAdd(i, 0.1);\n    }\n})\nlineArr.push([max, Number((volsum / time * 60).toFixed(2))])\noption = {\n    title: {\n        text: '时间容积图',\n        textStyle: {\n            fontSize: 12,\n            fontWeight: 'normal',\n        }\n    },\n    legend: {\n        show: true,\n        orient: 'vertical',\n        right: 0,\n        top: 30,\n        itemGap: 4,\n        selected: true,\n        data: []\n    },\n    grid: {\n        top: '45px',\n        right: '70px',\n        bottom: '50px',\n    },\n    xAxis: {\n        min: 0,\n        max: 10, //自定义个最大值，后面还会从新计算的\n        interval: 1, //隔几显示一个刻度\n        // splitNumber: 10,//分割段数\n        boundaryGap: false, //x轴从0开始到结束显示\n        onZero: true,\n        name: '时间[S]',\n        position: 'bottom',\n        nameGap: 5, //轴名字距离轴距离\n        splitLine: {\n            show: false,\n        },\n        axisLabel: {\n            showMinLabel: true,\n            showMaxLabel: true,\n            //如果图表高度固定的话可以设置一个的固定值显示在零刻度线下面\n            // margin:'10',\n        },\n        axisTick: {\n            show: true, //显示刻度线\n            inside: false, //刻度线在下面\n        },\n        show: true,\n    },\n    yAxis: [{\n            min: 0,\n            max: 6,\n            type: 'value',\n            axisLabel: {\n                show: true, //显示刻度值\n                showMinLabel: true,\n                showMaxLabel: true\n            },\n            interval: 1,\n            // splitNumber: 12,\n            axisTick: {\n                show: true,\n                inside: false\n            },\n            name: '容积[L]',\n            splitLine: {\n                show: false\n            },\n            show: true,\n        },\n        {\n            min: 0,\n            max: function(e) {\n                if (e.max <= 120) {\n                    return 120;\n                } else {\n                    return Math.ceil(e.max / 10) * 10;\n                }\n            },\n            type: 'value',\n            axisLabel: {\n                show: true, //显示刻度值\n                showMinLabel: false,\n                showMaxLabel: true\n            },\n            interval: 20,\n            // splitNumber: 6,\n            axisTick: {\n                show: true, //显示刻度\n                inside: false //刻度向内向外\n            },\n            name: 'MVV[L/min]',\n            splitLine: {\n                show: false\n            },\n            show: true,\n        }\n    ],\n    series: [{\n            type: 'bar',\n            //  barWidth: '10%',//暂时这个后面会从新计算柱子的宽度\n            barWidth: ((allArr.length / (max * 10) * 100) + 10).toFixed(1) + '%', //暂时这个后面会从新计算柱子的宽度\n            barGap: '0%',\n            barCategoryGap: '0%',\n            data: allArr,\n            itemStyle: {\n                normal: {\n                    // color: \"#000\"//因为只有一个结果选中所以默认给个选中的蓝色吧\n                    color: '#4e66a6',\n                }\n            },\n            silent: true, //图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。\n            yAxisIndex: 0, //指定使用第一个y轴\n        },\n        {\n            type: 'line',\n            step: 'end',\n            symbol: 'none',\n            itemStyle: {\n                normal: {\n                    // color: \"#000\",\n                    color: '#4e66a6',\n                    lineStyle: {\n                        width: 1,\n                    }\n                }\n            },\n            data: lineArr,\n            yAxisIndex: 1, //指定使用第二个y轴\n        },\n    ]\n};","html":"","externalScripts":"","updaterUID":"bd-2133619855","theme":"","layout":"","viewCount":66,"userName":"小***乖","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xP0kml2Qsk.png?v=1559806953965","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","series-line","title"],"customTags":[],"updaterUserName":"小***乖"}}