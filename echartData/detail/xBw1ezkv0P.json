{"status":0,"data":{"cid":"xBw1ezkv0P","authorUid":"obd-oPxKKoZLLsTvocLZPPR_qKJ6OuZu69E","authorUserName":"l***u","title":"立体柱状图","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2022-01-05T10:11:33.000Z","lastUpdateTime":"2022-01-05T10:11:33.000Z","auth":2,"uid":"obd-oPxKKoZLLsTvocLZPPR_qKJ6OuZu69E","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.2","versionCreateTime":"2022-01-05T10:11:33.000Z","code":"let colors = ['rgba(124, 124, 191, 1)', 'rgba(233, 195, 116, 1)'];\nlet c = -13;\nconst CubeLeft = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x + c, shape.y];\n        const c1 = [shape.x - 5 + c, shape.y - 5];\n        const c2 = [xAxisPoint[0] - 5 + c, xAxisPoint[1] - 5];\n        const c3 = [xAxisPoint[0] + c, xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\nconst CubeRight = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c1 = [shape.x + c, shape.y];\n        const c2 = [xAxisPoint[0] + c, xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 18 + c, xAxisPoint[1] - 0];\n        const c4 = [shape.x + 18 + c, shape.y - 0];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\nconst CubeTop = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const c1 = [shape.x + c, shape.y];\n        const c2 = [shape.x + 18 + c, shape.y - 0];\n        const c3 = [shape.x + 15 + c, shape.y - 5];\n        const c4 = [shape.x - 5 + c, shape.y - 5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\necharts.graphic.registerShape('CubeLeft', CubeLeft);\necharts.graphic.registerShape('CubeRight', CubeRight);\necharts.graphic.registerShape('CubeTop', CubeTop);\nconst CubeLeft1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x - c, shape.y];\n        const c1 = [shape.x - 5 - c, shape.y - 5];\n        const c2 = [xAxisPoint[0] - 5 - c, xAxisPoint[1] - 5];\n        const c3 = [xAxisPoint[0] - c, xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\nconst CubeRight1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c1 = [shape.x - c, shape.y];\n        const c2 = [xAxisPoint[0] - c, xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 18 - c, xAxisPoint[1] - 0];\n        const c4 = [shape.x + 18 - c, shape.y - 0];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\nconst CubeTop1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const c1 = [shape.x - c, shape.y];\n        const c2 = [shape.x + 18 - c, shape.y - 0];\n        const c3 = [shape.x + 15 - c, shape.y - 5];\n        const c4 = [shape.x - 5 - c, shape.y - 5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\necharts.graphic.registerShape('CubeLeft1', CubeLeft1);\necharts.graphic.registerShape('CubeRight1', CubeRight1);\necharts.graphic.registerShape('CubeTop1', CubeTop1);\nlet xData = ['客户1', '客户2', '客户3', '客户4', '客户5']\nconst planned = [50, 10, 30, 49, 54];\nconst completed = [22, 10, 70, 29, 54];\noption = {\n    backgroundColor: 'RGBA(27, 31, 44, 1)',\n    grid: {\n        left: 30,\n        right: 30,\n        bottom: 30,\n        top: 70,\n        containLabel: true,\n    },\n    tooltip: {\n        trigger: 'axis',\n        // 坐标轴指示器，坐标轴触发有效(axis)\n        axisPointer: {\n            type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n        },\n        formatter: function (params) {\n            let returnData = params[0].axisValue + '<br/>';\n            for (let i = 0; i < params.length; i++) {\n                const indexColor = '#da953e';\n                returnData += '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background:' + colors[i] + '\"></span>';\n                returnData += params[i].seriesName + '<span style=\"padding-left:13px;\">' + params[i].value + '</span><br/>';\n            }\n            return returnData;\n        },\n        // extraCssText: 'font-size: 22px; line-height: 30px',\n    },\n    legend: {\n        data: [\n            {\n                name: '计划量',\n                itemStyle: {\n                    color: colors[0]\n                }\n            },\n            {\n                name: '完成量',\n                itemStyle: {\n                    color: colors[1]\n                }\n            }\n        ],\n        textStyle: {\n            fontFamily: 'MicrosoftYaHei',\n            fontSize: 14, \n            color: 'rgba(178, 175, 173, 1)'\n        },\n        itemWidth: 10,\n        itemHeight: 8,\n        itemGap: 15,\n        top: '1%',\n        right: '3%'\n    },\n    xAxis: {\n        type: 'category',\n        data: xData,\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(52, 51, 51, 1)',\n            },\n        },\n        offset: 10,\n        axisTick: {\n            show: false,\n            length: 9,\n            alignWithLabel: true,\n            lineStyle: {\n                color: '#748EAB',\n            },\n        },\n        axisLabel: {\n            fontFamily: 'MicrosoftYaHei',\n            fontSize: 12,\n            color: 'rgba(113, 113, 113, 1)',\n            rotate: -30\n        },\n    },\n    yAxis: {\n        type: 'value',\n        name: '车',\n        nameTextStyle: {\n            fontFamily: 'MicrosoftYaHei',   \n            fontSize: 12,\n            color: 'rgba(113, 113, 113, 1)'\n        },\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(52, 51, 51, 1)',\n            },\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(52, 51, 51, 1)',\n            },\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            fontFamily: 'MicrosoftYaHei',   \n            fontSize: 12,\n            color: 'rgba(113, 113, 113, 1)'\n        },\n        min: 0,\n    },\n    series: [\n        {\n            type: 'custom',\n            name: '计划量',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(85, 97, 176, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(16, 26, 57, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(116, 127, 219, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(28, 41, 83, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(160, 175, 227, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(160, 175, 227, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: planned,\n        },\n        {\n            type: 'custom',\n            name: '完成量',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(182, 152, 62, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(140, 117, 64, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(243, 211, 132, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(154, 139, 84, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(255, 241, 170, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(255, 241, 170, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: completed,\n        }\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-oPxKKoZLLsTvocLZPPR_qKJ6OuZu69E","theme":"","layout":"","viewCount":0,"userName":"l***u","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xBw1ezkv0P.png?v=1641377493343","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-custom","tooltip"],"customTags":[],"updaterUserName":"l***u"}}