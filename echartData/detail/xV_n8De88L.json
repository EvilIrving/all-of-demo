{"status":0,"data":{"cid":"xV_n8De88L","authorUid":"obd-oMZboHfkOCO8vSHtpa3iJelPGV7_-2j","authorUserName":"距***离","title":"立体柱图","description":"未修改完","latestVersion":2,"alwaysLatest":0,"createTime":"2021-05-19T04:47:09.000Z","lastUpdateTime":"2021-05-19T04:47:09.000Z","auth":2,"uid":"obd-oMZboHfkOCO8vSHtpa3iJelPGV7_-2j","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.1.1","versionCreateTime":"2021-06-07T05:08:26.000Z","code":"// 绘制左侧面\r\nconst CubeLeft = echarts.graphic.extendShape({\r\n        shape: {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n        buildPath: function (ctx, shape) {\r\n          //   console.log('shape',shape.xAxisPoint)\r\n          const xAxisPoint = shape.xAxisPoint;\r\n          const c0 = [shape.x - 30, shape.y];\r\n          const c1 = [shape.x + 1, shape.y + 20];\r\n          const c2 = [xAxisPoint[0] + 1, xAxisPoint[1] + 20];\r\n          const c3 = [xAxisPoint[0] - 30, xAxisPoint[1]];\r\n          ctx\r\n            .moveTo(c0[0], c0[1])\r\n            .lineTo(c1[0], c1[1])\r\n            .lineTo(c2[0], c2[1])\r\n            .lineTo(c3[0], c3[1])\r\n            .closePath();\r\n        },\r\n      });\r\n      const CubeRight = echarts.graphic.extendShape({\r\n        shape: {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n        buildPath: function (ctx, shape) {\r\n          const xAxisPoint = shape.xAxisPoint;\r\n          const c1 = [shape.x + 30, shape.y];\r\n          const c2 = [xAxisPoint[0] + 31, xAxisPoint[1] + 5];\r\n          const c3 = [xAxisPoint[0], xAxisPoint[1] + 20];\r\n          const c4 = [shape.x, shape.y];\r\n          ctx\r\n            .moveTo(c1[0], c1[1])\r\n            .lineTo(c2[0], c2[1])\r\n            .lineTo(c3[0], c3[1])\r\n            .lineTo(c4[0], c4[1])\r\n            .closePath();\r\n        },\r\n      });\r\n      const CubeTop = echarts.graphic.extendShape({\r\n        shape: {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n        buildPath: function (ctx, shape) {\r\n          const c1 = [shape.x - 30, shape.y];\r\n          const c2 = [shape.x, shape.y - 15]; //右点\r\n          const c3 = [shape.x + 30, shape.y];\r\n          const c4 = [shape.x, shape.y + 20];\r\n          ctx\r\n            .moveTo(c1[0], c1[1])\r\n            .lineTo(c2[0], c2[1])\r\n            .lineTo(c3[0], c3[1])\r\n            .lineTo(c4[0], c4[1])\r\n            .closePath();\r\n        },\r\n      });\r\n// 注册三个面图形\r\necharts.graphic.registerShape('CubeLeft', CubeLeft)\r\necharts.graphic.registerShape('CubeRight', CubeRight)\r\necharts.graphic.registerShape('CubeTop', CubeTop)\r\n\r\n\r\nconst VALUE = [2016, 1230, 3790]\r\n\r\noption = {\r\n    backgroundColor: \"rgb(1, 12, 36)\",\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'shadow'\r\n        },\r\n        formatter: function(params, ticket, callback) {\r\n            const item = params[1]\r\n            return item.name + ' : ' + item.value;\r\n        }\r\n    },\r\n    grid: {\r\n        left: '10%',\r\n        right: '10%',\r\n        top: '15%',\r\n        bottom: '10%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['雄县', '安新', '容城'],\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        axisTick: {\r\n            show: false,\r\n            length: 9,\r\n            alignWithLabel: true,\r\n            lineStyle: {\r\n                color: '#7DFFFD'\r\n            }\r\n        },\r\n        axisLabel: {\r\n            fontSize: 20\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            fontSize: 16\r\n        },\r\n        boundaryGap: ['20%', '20%']\r\n    },\r\n    series: [{\r\n        type: 'custom',\r\n        renderItem: (params, api) => {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: 'rgba(55, 64, 110,0.2)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(55, 64, 110,0.2)'\r\n                            }\r\n                        ])\r\n                    }\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#f40'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#f40'\r\n                            }\r\n                        ])\r\n                    }\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#f40'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#f40'\r\n                            }\r\n                        ])\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        data: VALUE\r\n    }, {\r\n        type: 'bar',\r\n        stack: \"统筹区域\",\r\n        itemStyle: {\r\n            color: 'transparent'\r\n        },\r\n        tooltip: {\r\n        },\r\n        data: VALUE\r\n    },{\r\n        type: 'custom',\r\n        renderItem: (params, api) => {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: 'rgba(0, 64, 110,1)'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: 'rgba(0, 64, 110,1)'\r\n                            }\r\n                        ]),\r\n                        borderColor: '#fff',\r\n                         borderWidth:1,\r\n                    stroke:'#fff',\r\n                    // lineWidth:10\r\n                    },\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#f40'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#f40'\r\n                            }\r\n                        ]),\r\n                        \r\n                    },\r\n        //              itemStyle:{\r\n        //       borderColor: '#fff',\r\n        //       borderWidth:1,\r\n        //       borderType : 'solid'\r\n        // },\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#f40'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#f40'\r\n                            }\r\n                        ])\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n       \r\n        data: VALUE\r\n    }, {\r\n        type: 'bar',\r\n        stack: \"统筹区域\",\r\n        itemStyle: {\r\n            color: 'transparent'\r\n        },\r\n        tooltip: {\r\n        },\r\n        data: VALUE\r\n    }]\r\n}","html":"","externalScripts":"","updaterUID":"obd-oMZboHfkOCO8vSHtpa3iJelPGV7_-2j","theme":"","layout":"","viewCount":0,"userName":"距***离","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xV_n8De88L.png?v=1623042506216","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-custom","tooltip"],"customTags":[],"updaterUserName":"距***离"}}