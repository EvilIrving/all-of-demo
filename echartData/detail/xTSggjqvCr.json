{"status":0,"data":{"cid":"xTSggjqvCr","authorUid":"bd-2013481626","authorUserName":"じ***ゞ","title":"中国地图","description":"","latestVersion":2,"alwaysLatest":0,"createTime":"2021-10-09T09:11:22.000Z","lastUpdateTime":"2021-10-12T03:33:11.000Z","auth":2,"uid":"bd-2013481626","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.9.0","versionCreateTime":"2021-10-12T03:33:11.000Z","code":"let mapCHINA = '/asset/get/s/data-1633768881004-pasdbiUVm.json';\nlet color = ['#1ED647', '#f97767'];\n\nlet serverPath = \"path://M960 320H64c-35.346 0-64-28.654-64-64V128c0-35.346 28.654-64 64-64h896c35.346 0 64 28.654 64 64v128c0 35.346-28.654 64-64 64z m-96-176c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z m-128 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z m224 496H64c-35.346 0-64-28.654-64-64v-128c0-35.346 28.654-64 64-64h896c35.346 0 64 28.654 64 64v128c0 35.346-28.654 64-64 64z m-96-176c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z m-128 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z m224 496H64c-35.346 0-64-28.654-64-64v-128c0-35.346 28.654-64 64-64h896c35.346 0 64 28.654 64 64v128c0 35.346-28.654 64-64 64z m-96-176c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z m-128 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\";\nlet monitoringPath = \"path://M787.456 878.08H236.544c-21.504 0-39.424 40.96-39.424 40.96V960h630.272v-40.96c-0.512-22.528-17.92-40.96-39.936-40.96zM905.728 0H118.272C52.736 0 0 55.296 0 122.88v573.44c0 67.584 52.736 122.88 118.272 122.88h275.456v40.96c0 22.528 17.92 40.96 39.424 40.96h157.696c21.504 0 39.424-20.992 39.424-40.96v-40.96h275.456c65.024 0 118.272-55.296 118.272-122.88V122.88C1024 55.296 971.264 0 905.728 0zM118.272 655.36a40.448 40.448 0 0 1-39.424-40.96V122.88c0-22.528 17.92-40.96 39.424-40.96h787.456c21.504 0 39.424 18.432 39.424 40.96V614.4c0 22.528-17.92 40.96-39.424 40.96H118.272z m680.96-470.016L669.696 320 579.584 226.304a38.784 38.784 0 0 0-62.464 8.704L399.872 448l-48.64-125.952a41.408 41.408 0 0 0-28.672-25.088 38.784 38.784 0 0 0-35.84 11.264l-117.76 122.88a42.112 42.112 0 0 0 0 57.856c15.36 15.872 40.448 15.872 55.808 0l75.776-78.848 56.32 146.944a40.064 40.064 0 0 0 33.792 25.6h2.56a39.68 39.68 0 0 0 34.304-20.48l132.096-240.128 81.92 84.992c15.36 15.872 40.448 15.872 55.808 0L855.04 243.2a42.112 42.112 0 0 0 0-57.856 38.656 38.656 0 0 0-55.808 0z\";\nlet planePath = 'path://M.6,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705';\n\nlet geoCoordMap = {\n  \"南京\": [118.8062, 31.9208],\n  '连云港': [119.1248, 34.552],\n\n  '上海': [121.4648, 31.2891],\n  '北京': [116.4551, 40.2539],\n  '郑州': [113.65, 34.76],\n  '西安': [108.95, 34.27],\n  '兰州': [103.73, 36.03],\n  '乌鲁木齐': [87.68, 43.77],\n};\n\nlet pointInfo = {\n  /** 一带一路中心线 */\n  \"连云港\": {\n    type: monitoringPath,\n    state: true\n  },\n  \"郑州\": {\n    type: null,\n    state: true\n  },\n  \"西安\": {\n    type: null,\n    state: true\n  },\n  \"兰州\": {\n    type: null,\n    state: true\n  },\n  \"乌鲁木齐\": {\n    type: null,\n    state: true\n  },\n  // /** */\n  \"南京\": {\n    type: serverPath,\n    state: false\n  },\n  \"北京\": {\n    type: serverPath,\n    state: true\n  }\n}\n\n/** 轨迹 */\nlet track = [\n  { start_city: \"郑州\", end_city: \"连云港\" },\n  { start_city: \"西安\", end_city: \"郑州\" },\n  { start_city: \"兰州\", end_city: \"西安\" },\n  { start_city: \"乌鲁木齐\", end_city: \"兰州\" },\n  \n  { start_city: \"南京\", end_city: \"连云港\" },\n  { start_city: \"北京\", end_city: \"连云港\" }\n]\n\nvar series = [];\nvar data = handleData(track);\nlet tempArr = [];\nfor (let k in data) {\n  tempArr.push([k, data[k]])\n}\n\ntempArr.forEach((item, i) => {\n  series.push(\n    {\n      name: item[0],\n      type: 'lines',\n      zlevel: 1,\n      symbolSize: 6,\n      effect: { show: true, period: 3, trailLength: 0.7, color: '#fff', symbolSize: 3 },\n      lineStyle: { normal: { color: !pointInfo[item[0]][\"state\"] ? color[1] : color[0], width: 0, curveness: 0.2 } },\n      data: convertData(item[1])\n    },\n    {\n      name: item[0],\n      type: 'lines',\n      zlevel: 2,\n      effect: { show: true, period: 3, trailLength: 0, symbol: planePath, symbolSize: 15 },\n      lineStyle: { normal: { color: !pointInfo[item[0]][\"state\"] ? color[1] : color[0], width: 2, opacity: 0.6, curveness: 0.2 } },\n      data: convertData(item[1])\n    },\n    {\n      name: item[0],\n      type: 'graph',\n      coordinateSystem: 'geo',\n      zlevel: 2,\n      rippleEffect: { brushType: 'stroke' },\n      label: {\n        normal: {\n          show: true,\n          position: 'right',\n          formatter: '{b}',\n          color: color[0],\n          fontSize: 13\n        }\n      },\n      itemStyle: { normal: { color: color[0] } },\n      data: item[1].map((dataItem) => {\n        return {\n          name: dataItem[1].name,\n          symbol: pointInfo[dataItem[1].name][\"type\"],\n          symbolSize: !pointInfo[dataItem[1].name][\"type\"] ? 9 : 18,\n          itemStyle: {\n            normal: { color: color[0] }\n          },\n          value: geoCoordMap[dataItem[1].name]\n        };\n      })\n    },\n    {\n      name: item[0],\n      type: 'graph',\n      coordinateSystem: 'geo',\n      zlevel: 2,\n      rippleEffect: {\n        brushType: 'stroke'\n      },\n      label: {\n        normal: {\n          show: true,\n          position: 'right',\n          formatter: '{b}',\n          color: !pointInfo[item[0]][\"state\"] ? color[1] : color[0],\n          fontSize: 13\n        }\n      },\n      symbolSize: !pointInfo[item[0]][\"type\"] ? 9 : 18,\n      itemStyle: {\n        normal: {\n          color: !pointInfo[item[0]][\"state\"] ? color[1] : color[0]\n        }\n      },\n      data: [{\n        name: item[0],\n        symbol: pointInfo[item[0]][\"type\"],\n        itemStyle: {\n          normal: {\n            color: !pointInfo[item[0]][\"state\"] ? color[1] : color[0]\n          }\n        },\n        value: geoCoordMap[item[0]]\n      }]\n    }\n  )\n})\n\n/** ---------- Option START ---------- */\nmyChart.showLoading();\n$.get(mapCHINA, function (chinaJson) {\n  myChart.hideLoading();\n  echarts.registerMap('china', chinaJson);\n\n  option = {\n    backgroundColor: '#061f44',\n    geo:{\n      // type: 'map',\n      map: 'china',\n      zoom: 1.2, // 默认显示级别\n      label: {\n        /** 是否显示地图名称 */\n        emphasis: { show: false }\n      },\n      /** 隐藏南海诸岛右下角小地图 */\n      regions: [\n        {\n          name: '南海诸岛',\n          /** 隐藏地图，透明度为 0 时不绘制该图形 */\n          itemStyle: { opacity: 0 },\n          // 隐藏文字\n          label: { show: false }\n        }\n      ],\n      roam: true, // 是否允许缩放\n      // layoutCenter: ['50%', '60%'], // 地图位置\n      // layoutSize: '100%',\n      itemStyle: {\n        normal: {\n          color: 'rgba(51, 69, 89, 0.5)', // 地图背景色\n          borderColor: '#516a89', // 省市边界线00fcff 516a89\n          borderWidth: 1,\n        },\n        /** 悬浮背景 */\n        emphasis: { color: 'rgba(37, 43, 61, 0.5)' }\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      // backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      // borderColor: '#FFFFCC',\n      showDelay: 0,\n      hideDelay: 0,\n      enterable: true,\n      transitionDuration: 0,\n      extraCssText: 'z-index:100',\n      formatter:  (params, ticket, callback) => {\n        // console.log(params, ticket, callback);\n        const {color, componentSubType, data} = params;\n        let res = ``;\n        // 组件类型\n        if (componentSubType == \"lines\") {\n          res = `<span style=\"color:${color}\">${data.fromName} > ${data.toName}</span>`;\n        } else if (componentSubType == \"graph\") {\n        \n        }\n        return res\n      }\n    },\n    series: series\n  };\n  \n  myChart.setOption(option);\n});\n/** ---------- Option END ---------- */\n\nfunction handleData(data){\n  let obj = {}\n  let arr = []\n  for (let i = 0, len1 = data.length; i < len1; i++) {\n    if (arr.indexOf(data[i].start_city) === -1) {\n      arr.push(data[i].start_city)\n    }\n    for (let j = 0, len2 = arr.length; j < len2; j++) {\n      obj[arr[j]] = []\n    }\n  }\n  for (let i = 0, len = data.length; i < len; i++) {\n    obj[data[i].start_city].push([{ 'name': data[i].start_city }, { 'name': data[i].end_city }])\n  }\n  return obj\n}\n\nfunction convertData(data) {\n  let res = [];\n  for (let i = 0; i < data.length; i++) {\n    let dataItem = data[i];\n    let fromCoord = geoCoordMap[dataItem[0].name];\n    let toCoord = geoCoordMap[dataItem[1].name];\n    if (fromCoord && toCoord) {\n      res.push({\n        fromName: dataItem[0].name,\n        toName: dataItem[1].name,\n        coords: [fromCoord, toCoord]\n      });\n    }\n  }\n  return res;\n}\n","html":"","externalScripts":"","updaterUID":"bd-2013481626","theme":"","layout":"","viewCount":0,"userName":"じ***ゞ","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xTSggjqvCr.png?v=1634009591571","isCustomThumbnail":0,"builtinTags":["category-work","geo"],"customTags":[],"updaterUserName":"じ***ゞ"}}