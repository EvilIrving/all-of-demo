{"status":0,"data":{"cid":"xM7x6IdEBe","authorUid":"bd-4286708132","authorUserName":"L***h","title":"项目记录","description":"根据上升下降趋势展示不同颜色","latestVersion":2,"alwaysLatest":0,"createTime":"2021-09-22T06:08:13.000Z","lastUpdateTime":"2021-09-23T03:09:49.000Z","auth":2,"uid":"bd-4286708132","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.0.0","versionCreateTime":"2021-09-23T03:09:49.000Z","code":"var xAxisData = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];\nvar seriesData = [];\nvar data = [\n    [60, 90, 60, 70, 80, 100, 70, 90, 60, 70, 80, 100],\n    [50, 80, 50, 60, 70, 90, 60, 80, 50, 60, 70, 90],\n    [40, 60, 40, 50, 55, 70, 50, 60, 30, 40, 50, 70],\n];\nlet dataNewArr = [];\nlet colorArr = ['#4BCD6C', '#00F1FF', '#33AEEE'];\nlet legendData = ['转向架', '车体', '总装'];\n\n// 颜色十六进制转换rgb\nlet hexToRgba = (hex, opacity) => {\n    let rgbaColor = '';\n    let reg = /^#[\\da-f]{6}$/i;\n    if (reg.test(hex)) {\n        rgbaColor = `rgba(${parseInt('0x' + hex.slice(1, 3))},${parseInt('0x' + hex.slice(3, 5))},${parseInt(\n            '0x' + hex.slice(5, 7)\n        )},${opacity})`;\n    }\n    return rgbaColor;\n};\n// 循环处理3条数据\nfor (var i = 0; i < data.length; i++) {\n    dataHandling(i);\n}\n// 数据拆分为上升和下降\nfunction dataHandling(num) {\n    let lineData = data[num];\n    let lineNewArr = [];\n    let btn = true; //默认首次第一个和第二个比较是升就是false?否则是true\n    let startIndex = 0;\n    for (var i = 0; i < lineData.length; i++) {\n        let next = lineData[i + 1];\n        if (i == lineData.length - 1) {\n            var flagArr = lineData.slice(startIndex);\n            if (startIndex > 0) {\n                for (var j = 0; j < startIndex; j++) {\n                    flagArr.unshift('');\n                }\n            }\n            if (flagArr.length > 0) {\n                lineNewArr.push({\n                    nullData: startIndex,\n                    data: flagArr,\n                    status: btn,\n                });\n            }\n        }\n        if (next) {\n            if (btn == false) {\n                if (next < lineData[i]) {\n                    if (lineNewArr.length == 0) {\n                        startIndex = 0;\n                    }\n                    var flagArr = lineData.slice(startIndex, i + 1);\n                    if (startIndex > 0) {\n                        for (var j = 0; j < startIndex; j++) {\n                            flagArr.unshift('');\n                        }\n                    }\n                    lineNewArr.push({\n                        nullData: startIndex,\n                        data: flagArr,\n                        status: btn,\n                    });\n                    btn = true;\n                    startIndex = i;\n                }\n            } else {\n                if (next > lineData[i]) {\n                    var flagArr = lineData.slice(startIndex, i + 1);\n                    if (startIndex > 0) {\n                        for (var j = 0; j < startIndex; j++) {\n                            flagArr.unshift('');\n                        }\n                    }\n                    lineNewArr.push({\n                        nullData: startIndex,\n                        data: flagArr,\n                        status: btn,\n                    });\n                    startIndex = i;\n                    btn = false;\n                }\n            }\n        }\n    }\n    dataNewArr.push(lineNewArr);\n\n    lineHandling(num);\n}\n// 循环line\nfunction lineHandling(num) {\n    let lineNewArr = dataNewArr[num];\n    lineNewArr.forEach(function (item, i) {\n        if (lineNewArr[i].status == false) {\n            seriesData.push({\n                name: legendData[num],\n                data: lineNewArr[i].data,\n                type: 'line',\n                showAllSymbol: true,\n                symbol: 'circle',\n                symbolSize: 14,\n                label: {\n                    show: true,\n                    formatter: function (params) {\n                        return params.value;\n                    },\n                    position: [0, -20],\n                    textStyle: {\n                        color: '#FDFDFD',\n                        fontSize: 12,\n                    },\n                },\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: colorArr[num],\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0,0,0,.8)',\n                        shadowOffsetY: 16,\n                    },\n                },\n                emphasis: {\n                    show: false,\n                },\n\n                itemStyle: {\n                    color: colorArr[num],\n                    borderColor: '#fff',\n                    borderWidth: 1,\n                    shadowColor: 'rgba(0, 0, 0, .3)',\n                    shadowBlur: 0,\n                    shadowOffsetY: 2,\n                    shadowOffsetX: 2,\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(\n                            0,\n                            0,\n                            0,\n                            1,\n                            [\n                                {\n                                    offset: 0,\n                                    color: hexToRgba(colorArr[num], 0.1),\n                                },\n                                {\n                                    offset: 1,\n                                    color: hexToRgba(colorArr[num], 0),\n                                },\n                            ],\n                            false\n                        ),\n                        shadowColor: hexToRgba(colorArr[num], 0.1),\n                        shadowBlur: 10,\n                    },\n                },\n            });\n        } else {\n            seriesData.push({\n                name: legendData[num],\n                data: lineNewArr[i].data,\n                type: 'line',\n                showAllSymbol: true,\n                symbol: 'circle',\n                symbolSize: 14,\n                label: {\n                    show: true,\n                    formatter: function (params) {\n                        return params.value;\n                    },\n                    position: [0, -20],\n                    textStyle: {\n                        color: '#FDFDFD',\n                        fontSize: 12,\n                    },\n                },\n                lineStyle: {\n                    normal: {\n                        width: 2,\n                        color: '#F54D4D',\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0,0,0,.8)',\n                        shadowOffsetY: 16,\n                    },\n                },\n                itemStyle: {\n                    color: colorArr[num],\n                    borderColor: '#fff',\n                    borderWidth: 1,\n                    shadowColor: 'rgba(0, 0, 0, .3)',\n                    shadowBlur: 0,\n                    shadowOffsetY: 2,\n                    shadowOffsetX: 2,\n                },\n                areaStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(\n                            0,\n                            0,\n                            0,\n                            1,\n                            [\n                                {\n                                    offset: 0,\n                                    color: hexToRgba(colorArr[num], 0.1),\n                                },\n                                {\n                                    offset: 1,\n                                    color: hexToRgba(colorArr[num], 0),\n                                },\n                            ],\n                            false\n                        ),\n                        shadowColor: hexToRgba(colorArr[num], 0.1),\n                        shadowBlur: 10,\n                    },\n                },\n            });\n        }\n    });\n}\n\noption = {\n    backgroundColor: '#010e28',\n    legend: {\n        right: '5',\n        top: '20',\n        itemWidth: 12,\n        itemHeight: 12,\n        itemGap: 15,\n        textStyle: {\n            color: '#E3E3E5',\n            fontSize: 12,\n            fontFamily: 'PingFang',\n        },\n        icon: 'rect',\n        data: legendData,\n    },\n    grid: {\n        left: '4%',\n        right: '4%',\n        bottom: '5%',\n        top: '15%',\n        containLabel: true,\n    },\n    xAxis: {\n        axisTick: {\n            show: false, // 隐藏x轴的分割点\n        },\n        axisLabel: {\n            textStyle: {\n                fontSize: 12,\n                color: '#E3E3E5',\n                fontFamily: 'PingFang',\n            },\n        },\n        axisLine: {\n            show: false,\n        },\n        splitLine: {\n            show: false,\n        },\n        data: xAxisData,\n    },\n    yAxis: {\n        type: 'value',\n        scale: true,\n        axisTick: {\n            show: false, // 隐藏x轴的分割点\n        },\n        axisLabel: {\n            textStyle: {\n                fontSize: 12,\n                color: '#E3E3E5',\n                fontFamily: 'PingFang',\n            },\n        },\n        axisLine: {\n            show: false,\n            lineStyle: {\n                color: ' rgba(204,204,204,.42)',\n                type: 'dashed',\n            },\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: ' rgba(204,204,204,.42)',\n                type: 'dashed',\n            },\n        },\n    },\n    series: seriesData,\n};\n","html":"","externalScripts":"","updaterUID":"bd-4286708132","theme":"","layout":"","viewCount":0,"userName":"L***h","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xM7x6IdEBe.png?v=1632366589668","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-line"],"customTags":[],"updaterUserName":"L***h"}}