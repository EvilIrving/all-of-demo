{"status":0,"data":{"cid":"xa2WI4HFqL","authorUid":"bd-4256274292","authorUserName":"t***g","title":"Ec模式单点3小时间隔综合廓线图","description":"","latestVersion":6,"alwaysLatest":1,"createTime":"2019-04-08T16:04:10.000Z","lastUpdateTime":"2019-04-08T16:04:10.000Z","auth":2,"uid":"bd-4256274292","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":6,"parentVersion":4,"echartsVersion":"4.2.1","versionCreateTime":"2019-04-12T12:55:52.000Z","code":"// var uploadedDataURL = \"/asset/get/s/data-1554346484419-4KGBejyJ5.json\";\n\nvar uploadedDataURL = \"/asset/get/s/data-1554349414632-EoKmzIc1h.json\";\n\nfunction str2month(str) {\n    var arr = str.split('');\n    arr.splice(4, 0, '-');\n    arr.splice(7, 0, '-');\n    arr.splice(10);\n    var dateStr = arr.join('');\n    var month = new Date(dateStr).toDateString().split(\" \")[1];\n    return month;\n}\n\nvar dims = {\n    time: 0,\n    levels: 1,\n    R: 2,\n};\nvar arrowSize = 16;\n\nfunction renderArrow(param, api) {\n    var point = api.coord([\n        api.value(dims.time),\n        api.value(dims.levels)\n    ]);\n    return {\n        type: 'path',\n        shape: {\n            pathData: 'M22 6 L10 6 L10 16 L22 16 L10 16 L10 46',\n            x: -arrowSize / 2,\n            y: -arrowSize / 2,\n            width: arrowSize,\n            height: arrowSize\n        },\n        rotation: Math.PI / 180 * api.value(dims.R),\n        position: point,\n        style: api.style({\n            stroke: 'blue',\n            fill: 'none',\n            lineWidth: 1\n        })\n    };\n}\n\nfunction makeSeries(stPLan, opt) {\n    var seriesItem = stPLan.data;\n    let TT = echarts.util.map(seriesItem.tt, function(item) {\n        // item = seriesItem.tt[0]\n        let lineType = (item.value < 0 ? 'dotted' : 'solid');\n        var points = [];\n        var max = 0;\n        echarts.util.map(item.pointdata, (item2, index) => {\n            if (item2 && item2[0] >= max + 12) {\n                points.push({\n                    xAxis: item2[0],\n                    yAxis: item2[1],\n                    value: item.value\n                });\n                max = item2[0]\n            }\n        })\n        if (points.length == 0) {\n            points.push({\n                xAxis: item.pointdata[Math.floor(item.pointdata.length / 2)][0],\n                yAxis: item.pointdata[Math.floor(item.pointdata.length / 2)][1],\n                value: item.pointdata.value\n            });\n        }\n\n        return echarts.util.merge({\n            name: '温度',\n            type: 'line',\n            smooth: true,\n            symbol: 'none',\n            symbolSize: 0,\n            // smoothMonotone: false,\n            // sampling:'average',\n            // sampling: function(frame){\n            // \treturn 100;\n            // },\n            lineStyle: {\n                type: lineType,\n                width: 1,\n            },\n            data: item.pointdata,\n            markPoint: {\n                symbol: 'circle',\n                symbolSize: '10',\n                label: {\n                    color: \"red\",\n                    backgroundColor: \"#fff\",\n                },\n                itemStyle: {\n                    color: 'transparent'\n                },\n                data: points\n            },\n        }, opt || {}, true);\n    });\n\n    let RH = echarts.util.map(seriesItem.rh, function(item) {\n        // item = seriesItem.rh[1]\n        let areaColor =\n            item.value >= 95 ? '#11a20f' :\n            item.value >= 90 ? '#11a20f' :\n            item.value >= 80 ? '#96f48c' :\n            item.value >= 70 ? '#c8fcbe' :\n            '#11b41d';\n        item.pointdata.push([item.pointdata[0][0], item.pointdata[0][1]])\n        return echarts.util.merge({\n            name: '湿度',\n            type: 'line',\n            smooth: true,\n            symbol: 'none',\n            symbolSize: 0,\n            lineStyle: {\n                width: 0,\n            },\n            areaStyle: {\n                color: areaColor,\n                opacity: '.6'\n\n            },\n            data: item.pointdata,\n        }, opt || {}, true);\n    });\n\n    let windData = [];\n    echarts.util.map(seriesItem.wd, function(item, index) {\n        echarts.util.map(item, function(item2, index2) {\n            windData.push([index2, stPLan.levels[index], item2])\n        })\n    })\n    let WIND = {\n        type: 'custom',\n        name: '风向',\n        renderItem: renderArrow,\n        encode: {\n            x: dims.time,\n            y: dims.levels\n        },\n        data: windData,\n    };\n\n    //  return WIND;\n    let result = TT.concat(RH);\n    result.push(WIND);\n    return result;\n}\n\n\n$.getJSON(uploadedDataURL, function(rawData) {\n    var stPLan = rawData.stPLan;\n\n    var optionItem = {\n        title: 'Ec模式单点3小时间隔综合廓线图',\n        lat: '35.24',\n        lon: '113.6',\n        time: '2017092912',\n        baseTime: '000',\n        offset: '072',\n        timeZone: '北京时',\n        seriesItem: stPLan,\n        nameY: '(单位：hPa）'\n    };\n    var {\n        title,\n        lat,\n        lon,\n        time,\n        baseTime,\n        offset,\n        timeZone,\n        seriesItem,\n        nameY,\n    } = optionItem;\n\n\n    option = {\n        title: [{\n            text: title,\n            left: 'center'\n        }, {\n            text: `lat:+${lat} lon:${lon}`,\n            textStyle: {\n                fontWeight: 'normal',\n                color: 'red',\n            },\n            top: 30,\n            left: 70\n        }, {\n            text: time,\n            textStyle: {\n                fontWeight: 'normal',\n                color: 'blue',\n            },\n            top: 30,\n            left: 'center',\n        }, {\n            text: `${baseTime}-${offset}`,\n            textStyle: {\n                fontWeight: 'normal',\n                color: 'blue',\n            },\n            top: 30,\n            right: '70',\n        }, {\n            text: str2month(time),\n            textStyle: {\n                fontWeight: 'normal',\n                color: 'red',\n            },\n            bottom: 15,\n            left: '70',\n        }, {\n            text: timeZone,\n            textStyle: {\n                fontWeight: 'normal',\n            },\n            bottom: 15,\n            right: '70',\n        }],\n\n        // tooltip: {\n        //     trigger: 'axis',\n        //     formatter: function(params) {\n        //         var items = echarts.util.map(params, function(item) {\n        //             return (`${item.seriesName}: ${item.value}`);\n        //         });\n        //         return [\n        //             echarts.format.formatTime('yyyy-MM-dd', params[0].axisValue) +\n        //             ' ' + echarts.format.formatTime('hh:mm', params[0].axisValue),\n        //             items.join('<br>')\n        //         ].join('<br>');\n        //     },\n        //     axisPointer:{\n        //         type:\"cross\"\n        //     }\n        // },\n        grid: {\n            show: true,\n            top: '70px',\n            left: '50px',\n            right: '50px'\n        },\n        graphic: [{\n            type: 'group',\n            bounding: 'raw',\n            left: 0,\n            top: 60,\n            z: 100,\n            width: 40,\n            height: 480,\n            children: [{\n                type: 'rect',\n                z: 100,\n                shape: {\n                    width: 40,\n                    height: 480,\n                },\n                style: {\n                    fill: 'rgba(255,255,255,1)'\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '5',\n                top: '-15',\n                style: {\n                    fill: '#333',\n                    text: 'hpa',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '1%',\n                style: {\n                    fill: '#333',\n                    text: '100',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '11%',\n                style: {\n                    fill: '#333',\n                    text: '200',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '41%',\n                style: {\n                    fill: '#333',\n                    text: '500',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '61%',\n                style: {\n                    fill: '#333',\n                    text: '700',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '76%',\n                style: {\n                    fill: '#333',\n                    text: '850',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '86%',\n                style: {\n                    fill: '#333',\n                    text: '950',\n                }\n            }, {\n                type: 'text',\n                z: 100,\n                right: '10',\n                top: '91%',\n                style: {\n                    fill: '#333',\n                    text: '1000',\n                }\n            }]\n        }, {\n            type: 'group',\n            bounding: 'raw',\n            right: 0,\n            top: 60,\n            z: 100,\n            width: 50,\n            height: 480,\n            children: [{\n                type: 'rect',\n                z: 100,\n                shape: {\n                    width: 50,\n                    height: 480,\n                },\n                style: {\n                    fill: 'rgba(255,255,255,1)'\n                }\n            }, {\n                type: 'image',\n                z: 100,\n                left: '12',\n                top: 'center',\n                style: {\n                    image: '/images/legent.jpg',\n                    width: 36,\n                    height: 175,\n                }\n            }]\n        }],\n        // color:'lightGreen',\n        xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: stPLan.vtis,\n            axisLabel: {\n                formatter: function(value) {\n                    return echarts.format.formatTime('ddhh', new Date(+value));\n                }\n            },\n        },\n        yAxis: {\n            type: 'value',\n            show: false,\n            name: nameY,\n            inverse: true,\n            nameLocation: 'center',\n            nameGap: '40',\n            min: function(v) {\n                return stPLan.levels[stPLan.levels.length - 1];\n            },\n            max: function(v) {\n                return stPLan.levels[0] + 100;\n            },\n            // scale: true,\n        },\n        dataZoom: {\n            type: 'inside',\n            showDetail: false,\n             filterMode: 'none',\n            start: 0,\n            end: 30,\n            // minSpan: 30,\n            zoomLock: true,\n\n        },\n        series: makeSeries(seriesItem),\n    };\n    myChart.setOption(option);\n})","html":"","externalScripts":"","updaterUID":"bd-4256274292","theme":"","layout":"","viewCount":246,"userName":"t***g","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xa2WI4HFqL.png?v=1555073752939","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","graphic","grid","markPoint","series-custom","series-line","title"],"customTags":[],"updaterUserName":"t***g"}}