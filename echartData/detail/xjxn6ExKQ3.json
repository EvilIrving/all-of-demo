{"status":0,"data":{"cid":"xjxn6ExKQ3","authorUid":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","authorUserName":"断***1","title":"自定义堆叠图","description":"","latestVersion":5,"alwaysLatest":1,"createTime":"2020-10-29T06:55:19.000Z","lastUpdateTime":"2020-10-29T06:55:19.000Z","auth":2,"uid":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.8.0","versionCreateTime":"2020-10-30T06:59:41.000Z","code":"\r\nlet maxSeries = [97.26, 97.08, 97.67, 97.83, 97.65, 97.75]\r\n\r\nlet otherSeries =[[0.47, 0.63, 0.59, 0.53, 0.55, 0.56], [0.31, 0.30, 0.32, 0.34, 0.35, 0.37], [1.53, 1.59, 1.04, 0.92, 1.03, 0.91], [0.43, 0.40, 0.38, 0.38, 0.41, 0.41]]\r\n\r\nlet sumOtherSeries = otherSeries.reduce((a, b) => {\r\n  a = a.map((item, index) => {\r\n    return (a[index] *100 + b[index]* 100)/100\r\n  })\r\n  return a;\r\n})\r\nlet maxSumOtherSeriesSingle = Math.max.apply(null, sumOtherSeries);\r\nlet minmaxSeriesSingle =Math.min.apply(null, maxSeries);\r\n\r\n\r\n // 被减数\r\n // 公式 y= x -a 的方式平移\r\n let  minuend = 0\r\n\r\nif(Number(minmaxSeriesSingle) > Number(maxSumOtherSeriesSingle)) {\r\n    minuend = (Number(minmaxSeriesSingle)*100 - Number(maxSumOtherSeriesSingle)*100)/100;\r\n    console.log(maxSumOtherSeriesSingle, 'maxSumOtherSeriesSingle')\r\n    console.log(minuend, 'minuend1')\r\n    minuend = Math.floor(minuend)\r\n    console.log(minuend, 'minuend2')\r\n}\r\n\r\n let max = (Number(Math.max.apply(null, maxSeries)) *100 - Number(minuend) *100 + Number(maxSumOtherSeriesSingle) *100)/100;\r\n  max = parseInt(max)\r\n  \r\n  // 判断整个序列最大值 考虑到最大值的情况有可能取整少1\r\n  let allMaxSeries = sumOtherSeries.map((item, index) => {\r\n    return (item *100 + maxSeries[index]* 100)/100\r\n  })\r\n  \r\n  let allMaxSingle = Math.max.apply(null, allMaxSeries)\r\n  \r\n  if((Number(allMaxSingle) *100 - minuend *100)/100  > max) {\r\n      max = parseInt(allMaxSingle) + 1;\r\n  }\r\n\r\n// 处理最大列数据\r\nlet  computemaxSeries= maxSeries.map(item => item = (item *100 - minuend *100)/100)\r\n\r\noption = {\r\n    title: {\r\n        text: '堆叠区域图'\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                backgroundColor: '#6a7985'\r\n            }\r\n        },\r\n    },\r\n    legend: {\r\n        data: ['正常占比', '次级占比', '损失类占比', '关注类占比', '可疑类占比']\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['2020年3月', '2020年2月', '2020年1月', '2019年12月', '2019年11月', '2019年10月']\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value',\r\n            max: max,\r\n            min:0,\r\n            splitNumber: 5,\r\n            axisLabel: {\r\n              formatter: function(value) {\r\n                if(value > maxSumOtherSeriesSingle){\r\n                    return (Number(value)*100 +Number(minuend)*100)/100\r\n                }\r\n                return value\r\n              }\r\n            }\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name: '损失类占比',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [0.47, 0.63, 0.59, 0.53, 0.55, 0.56]\r\n        },\r\n        {\r\n            name: '次级占比',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [0.31, 0.30, 0.32, 0.34, 0.35, 0.37]\r\n        },\r\n        {\r\n            name: '关注类占比',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [1.53, 1.59, 1.04, 0.92, 1.03, 0.91]\r\n        },\r\n        {\r\n            name: '可疑类占比',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [0.43, 0.40, 0.38, 0.38, 0.41, 0.41]\r\n        },\r\n        {\r\n            name: '正常占比',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n           data: computemaxSeries\r\n        }\r\n    ]\r\n};","html":"","externalScripts":"","updaterUID":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","theme":"","layout":"","viewCount":71,"userName":"断***1","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xjxn6ExKQ3.png?v=1604041181873","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-line","title","toolbox","tooltip"],"customTags":[],"updaterUserName":"断***1"}}