{"status":0,"data":{"cid":"x9keri6JPb","authorUid":"obd-o-azDscGK7-vKZlxiPUw9kcroswYDAB","authorUserName":"X***r","title":"动态折现堆叠+动画效果","description":"折现堆叠+动画效果源自网友分享","latestVersion":6,"alwaysLatest":0,"createTime":"2021-12-29T08:42:37.000Z","lastUpdateTime":"2021-12-29T09:46:35.000Z","auth":2,"uid":"obd-o-azDscGK7-vKZlxiPUw9kcroswYDAB","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":6,"parentVersion":5,"echartsVersion":"5.2.2","versionCreateTime":"2021-12-29T09:46:35.000Z","code":"function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n}\nfunction getFormatDate(type) {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let strDate = '';\n    const seperator1 = '-'; // 连接年月日\n    const seperator2 = ':'; // 连接时分秒\n    let currentdate = '';\n    strDate = date.getDate();\n    if (month >= 1 && month <= 9) {\n        month = '0' + month;\n    }\n    if (strDate >= 0 && strDate <= 9) {\n        strDate = '0' + strDate;\n    }\n    switch (type) {\n        case 'date':\n            currentdate = year + seperator1 + month + seperator1 + strDate;\n            break;\n        case 'time':\n            currentdate = date.getHours() + seperator2 + date.getMinutes() + seperator2 + date.getSeconds();\n            break;\n        case 'year':\n            currentdate = parseInt(year);\n            break;\n        default:\n            return false;\n    }\n    return currentdate;\n}\nlet xAxisData = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'];\n// 统计百分比\nlet data1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nlet data2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nconst base = +new Date(new Date().getTime() - 1 * 15 * 60 * 1000);\nconst oneMin = 60 * 1000;\nconst date = [];\nconst xData = [Math.random() * 150];\nlet now = new Date(base);\nlet now2 = '';\n\n//console.info(now, new Date(+new Date(now)+(60*1000)));\n\nfunction addData(shift) {\n    now2 = [now.getHours(), now.getMinutes(), now.getSeconds()].join(':');\n    //now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n    //console.info(now, now2)\n\n    xAxisData.push(now2);\n    //console.info(now2, (Math.random() - 0.4) * 10 + xData[xData.length - 1]);\n    // xData.push((Math.random() - 0.4) * 10 + xData[xData.length - 1]);\n    if (shift) {\n        xAxisData.shift();\n        //xData.shift();\n    }\n    now = new Date(+new Date(now) + oneMin);\n}\n\nfor (let i = 1; i <= 15; i++) {\n    data1.push(getRandomInt(1, 99));\n    data2.push(getRandomInt(1, 99));\n    addData(true);\n}\n\nlet json = {\n    chart0: {\n        xcategory: xAxisData,\n        low: data1,\n        lowLine: [],\n    },\n};\nlet json2 = {\n    chart0: {\n        xcategory: xAxisData,\n        low: data2,\n        lowLine: [],\n    },\n};\nlet zrUtil = echarts.util;\nzrUtil.each(json.chart0.xcategory, function (item, index) {\n    json.chart0.lowLine.push([\n        {\n            coord: [index, json.chart0.low[index]],\n        },\n        {\n            coord: [index + 1, json.chart0.low[index + 1]],\n        },\n    ]);\n});\nzrUtil.each(json.chart0.xcategory, function (item, index) {\n    json2.chart0.lowLine.push([\n        {\n            coord: [index, json2.chart0.low[index]],\n        },\n        {\n            coord: [index + 1, json2.chart0.low[index + 1]],\n        },\n    ]);\n});\n\nvar option = {\n    backgroundColor: '#03060F',\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            lineStyle: {\n                color: '#15ecf4',\n            },\n        },\n        backgroundColor: 'rgba(0,0,0,.8)',\n        extraCssText: 'box-shadow: 4px 4px 10px rgba(21, 250, 255,.6);',\n        formatter: function (params) {\n            var result = params[0].name + '<br>';\n            params.forEach(function (item) {\n                result +=\n                    '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' +\n                    item.color +\n                    '\"></span>';\n                // 判断设置增长还是降低\n                if (parseFloat(item.data) >= 50) {\n                    result += item.seriesName + ': ' + '<span class=\"growth\">增长' + item.data + '%</span><br>';\n                } else if (parseFloat(item.data) < 50) {\n                    result += item.seriesName + ': ' + '<span class=\"reduce\">降低' + item.data + '%</span><br>';\n                }\n            });\n            return result;\n        },\n    },\n    legend: {\n        data: ['同比', '环比'],\n        textStyle: {\n            fontSize: 12,\n            color: 'rgb(0,253,255,0.6)',\n        },\n        top: '5%',\n        right: '5%',\n    },\n    grid: {\n        bottom: 50,\n        left: 70,\n        right: 50,\n    },\n    xAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'red',\n            },\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            show: true,\n        },\n        data: xAxisData,\n    },\n    yAxis: {\n        max: 100,\n        splitNumber: 4,\n        interval: 25,\n        axisLine: {\n            show: false,\n        },\n        axisTick: {\n            show: false,\n        },\n        splitLine: {\n            lineStyle: {\n                type: 'dashed',\n                color: '#4b4d64',\n            },\n        },\n        axisLabel: {\n            formatter: '{value} %',\n            textStyle: {\n                //改变刻度字体样式\n                color: '#ffffff',\n            },\n        },\n    },\n    series: [\n        {\n            name: '环比',\n            type: 'line',\n            // smooth: true,\n            symbol: 'circle',\n            symbolSize: 10,\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(\n                        0,\n                        0,\n                        0,\n                        1,\n                        [\n                            {\n                                offset: 0,\n                                color: 'rgba(255, 204,1, .9)',\n                            },\n                            {\n                                offset: 0.8,\n                                color: 'rgba(6, 8, 41,.1)',\n                            },\n                        ],\n                        false\n                    ),\n                    shadowColor: 'rgba(0, 0, 0, 0.1)',\n                    shadowBlur: 10,\n                },\n            },\n            itemStyle: {\n                normal: {\n                    color: '#ffcb00',\n                },\n            },\n            data: data1,\n        },\n        {\n            name: '环比',\n            type: 'lines',\n            coordinateSystem: 'cartesian2d',\n            zlevel: 1,\n            smooth: true,\n            symbol: 'circle',\n            effect: {\n                show: true,\n                smooth: true,\n                period: 2,\n                symbolSize: 8,\n            },\n            lineStyle: {\n                normal: {\n                    color: '#ffcb00',\n                    width: 0,\n                    opacity: 0,\n                    curveness: 0,\n                },\n            },\n            data: json.chart0.lowLine,\n        },\n        {\n            name: '同比',\n            type: 'line',\n            // smooth: true,\n            symbol: 'circle',\n            symbolSize: 10,\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(\n                        0,\n                        0,\n                        0,\n                        1,\n                        [\n                            {\n                                offset: 0,\n                                color: 'rgba(21, 250, 255,.9)',\n                            },\n                            {\n                                offset: 0.8,\n                                color: 'rgba(6, 8, 41,.1)',\n                            },\n                        ],\n                        false\n                    ),\n                    shadowColor: 'rgba(0, 0, 0, 0.1)',\n                    shadowBlur: 10,\n                },\n            },\n            itemStyle: {\n                normal: {\n                    color: '#15faff',\n                },\n            },\n            data: data2,\n        },\n        {\n            name: '同比',\n            type: 'lines',\n            coordinateSystem: 'cartesian2d',\n            zlevel: 1,\n            smooth: true,\n            symbol: 'circle',\n            effect: {\n                show: true,\n                smooth: true,\n                period: 2,\n                symbolSize: 8,\n            },\n            lineStyle: {\n                normal: {\n                    color: '#15faff',\n                    width: 0,\n                    opacity: 0,\n                    curveness: 0,\n                },\n            },\n            data: json2.chart0.lowLine,\n        },\n    ],\n};\nsetInterval(function () {\n    for (var i = 0; i < 1; i++) {\n        data1.shift();\n        data1.push(getRandomInt(1, 99));\n        data2.shift();\n        data2.push(getRandomInt(1, 99));\n\n        json = {\n            chart0: {\n                xcategory: xAxisData,\n                low: data1,\n                lowLine: [],\n            },\n        };\n        json2 = {\n            chart0: {\n                xcategory: xAxisData,\n                low: data2,\n                lowLine: [],\n            },\n        };\n\n        zrUtil.each(json.chart0.xcategory, function (item, index) {\n            json.chart0.lowLine.push([\n                {\n                    coord: [index, json.chart0.low[index]],\n                },\n                {\n                    coord: [index + 1, json.chart0.low[index + 1]],\n                },\n            ]);\n        });\n        zrUtil.each(json.chart0.xcategory, function (item, index) {\n            json2.chart0.lowLine.push([\n                {\n                    coord: [index, json2.chart0.low[index]],\n                },\n                {\n                    coord: [index + 1, json2.chart0.low[index + 1]],\n                },\n            ]);\n        });\n    }\n    addData(true);\n    myChart.setOption({\n        xAxis: {\n            data: xAxisData,\n        },\n        series: [\n            {\n                data: data1,\n            },\n            {\n                data: json.chart0.lowLine,\n            },\n            {\n                data: data2,\n            },\n            {\n                data: json2.chart0.lowLine,\n            },\n        ],\n    });\n}, 5000);\n","html":"","externalScripts":"","updaterUID":"obd-o-azDscGK7-vKZlxiPUw9kcroswYDAB","theme":"","layout":"","viewCount":0,"userName":"X***r","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x9keri6JPb.png?v=1640771196011","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-line","series-lines","tooltip"],"customTags":[],"updaterUserName":"X***r"}}