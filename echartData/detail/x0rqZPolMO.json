{"status":0,"data":{"cid":"x0rqZPolMO","authorUid":"obd-o2SgwOa5qsp9KVYvmO_WBvuhQVYyhBQ","authorUserName":"a***9","title":"湖南省","description":"我的修改，希望能够帮助到各位！","latestVersion":2,"alwaysLatest":0,"createTime":"2021-06-10T07:46:55.000Z","lastUpdateTime":"2021-06-10T07:46:55.000Z","auth":2,"uid":"obd-o2SgwOa5qsp9KVYvmO_WBvuhQVYyhBQ","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.1.2","versionCreateTime":"2021-06-10T09:53:46.000Z","code":"// 主要还是要感谢“K...雪”大佬的技术支持，要是没有该大佬\n// 也就没有现在这个湖南省的echarts地图，有需要可以去观摩\n// https://www.makeapie.com/editor.html?c=x4PnHcyVb5\n// 上面是大佬的原生代码，拿来就可以使用\n\n\n// 湖南省\nvar uploadedDataURL = \"https://geo.datav.aliyun.com/areas_v2/bound/430000_full.json\";\n// 长沙市\nvar changsha = \"https://geo.datav.aliyun.com/areas_v2/bound/430100_full.json\";\n// 株洲市\nvar zhuzhou = \"https://geo.datav.aliyun.com/areas_v2/bound/430200_full.json\";\n// 湘潭市\nvar xiangtan = \"https://geo.datav.aliyun.com/areas_v2/bound/430300_full.json\";\n// 常德市\nvar changde = \"https://geo.datav.aliyun.com/areas_v2/bound/430700_full.json\";\n// 郴州市\nvar chenzhou = \"https://geo.datav.aliyun.com/areas_v2/bound/431000_full.json\";\n// 衡阳市\nvar henyang = \"https://geo.datav.aliyun.com/areas_v2/bound/430400_full.json\";\n// 怀化市\nvar huaihua = \"https://geo.datav.aliyun.com/areas_v2/bound/431200_full.json\";\n// 娄底市\nvar loudi = \"https://geo.datav.aliyun.com/areas_v2/bound/431300_full.json\";\n// 邵阳市\nvar shaoyang = \"https://geo.datav.aliyun.com/areas_v2/bound/430500_full.json\";\n// 益阳市\nvar yiyang = \"https://geo.datav.aliyun.com/areas_v2/bound/430900_full.json\";\n// 永州市\nvar yongzhou = \"https://geo.datav.aliyun.com/areas_v2/bound/431100_full.json\";\n// 岳阳市\nvar yueyang = \"https://geo.datav.aliyun.com/areas_v2/bound/430600_full.json\";\n// 张家界市\nvar zhangjiajie = \"https://geo.datav.aliyun.com/areas_v2/bound/430800_full.json\";\n// 湘西土家族苗族自治州\nvar xiangxi = \"https://geo.datav.aliyun.com/areas_v2/bound/433100_full.json\";\n\n// 对json数据进行处理\n$.get(uploadedDataURL, function(geoJson) {\n\n    myChart.hideLoading();\n\n    echarts.registerMap('湖南', geoJson);\n\n    // 各市级\n    var cityMap = {\n        '长沙市': changsha,\n        '株洲市': zhuzhou,\n        '湘潭市': xiangtan,\n        '常德市': changde,\n        '郴州市': chenzhou,\n        '衡阳市': henyang,\n        '怀化市': huaihua,\n        '娄底市': loudi,\n        '邵阳市': shaoyang,\n        '益阳市': yiyang,\n        '永州市': yongzhou,\n        '岳阳市': yueyang,\n        '张家界市': zhangjiajie,\n        '湘西土家族苗族自治州': xiangxi\n    };\n\n    // 各市级坐标，通过 http://api.map.baidu.com/lbsapi/getpoint/index.html?qq-pf-to=pcqq.group 去获取\n    var gdGeoCoordMap = {\n        '长沙市': [112.945358,28.234451],\n        '株洲市': [113.142199,27.830501],\n        '湘潭市': [112.952189,27.835703],\n        '常德市': [111.706024,29.037245],\n        '郴州市': [113.022608,25.777204],\n        '衡阳市': [112.584198,26.900606],\n        '怀化市': [110.010239,27.575161],\n        '娄底市': [112.000353,27.705255],\n        '邵阳市': [111.476157,27.243729],\n        '益阳市': [112.367266,28.559712],\n        '永州市': [111.621754,26.426899],\n        '岳阳市': [113.135488,29.364184],\n        '张家界市': [110.488982,29.122817],\n        '湘西土家族苗族自治州': [109.74443,28.322965]\n    };\n    \n    // 各市级站点数据\n    var gdDatas = [\n        [{\n            name: '长沙市',\n            value: 28\n        }],\n        [{\n            name: '株洲市',\n            value: 19\n        }],\n        [{\n            name: '湘潭市',\n            value: 6\n        }],\n        [{\n            name: '常德市',\n            value: 0\n        }],\n        [{\n            name: '郴州市',\n            value: 0\n        }],\n        [{\n            name: '衡阳市',\n            value: 0\n        }],\n        [{\n            name: '怀化市',\n            value: 0\n        }],\n        [{\n            name: '娄底市',\n            value: 0\n        }],\n        [{\n            name: '邵阳市',\n            value: 0\n        }],\n        [{\n            name: '益阳市',\n            value: 0\n        }],\n        [{\n            name: '永州市',\n            value: 0\n        }],\n        [{\n            name: '岳阳市',\n            value: 0\n        }],\n        [{\n            name: '张家界市',\n            value: 0\n        }],\n        [{\n            name: '湘西土家族苗族自治州',\n            value: 0\n        }]\n    ];\n\n    // 长沙市站点数据\n    var changshadata = [{\n            name: \"桔子洲\",\n            value: [112.970259,28.209371, 3],\n        },\n        {\n            name: \"五一大桥\",\n            value: [112.974812,28.201219, 2],\n        },\n        {\n            name: \"猴子石\",\n            value: [112.966892,28.147666, 1],\n        }\n    ];\n\n    // 株洲市站点数据\n    var zhuzhoudata = [{\n            name: \"株洲市四水厂(枫溪)\",\n            value: [113.795, 26.6315, 3],\n        },\n        {\n            name: \"株洲市一水厂\",\n            value: [113.521, 27.1174, 2],\n        },\n        {\n            name: \"株洲市二、三水厂(白石)\",\n            value: [113.755, 26.8041, 1],\n        },\n        {\n            name: \"炎陵泵房\",\n            value: [113.843, 26.3766, 0],\n        }\n    ];\n\n    // 湘潭市站点数据\n    var xiangtandata = [{\n            name: \"湘潭市三水厂\",\n            value: [112.892, 27.4549, 3],\n        },\n        {\n            name: \"湘潭市易俗河水厂\",\n            value: [112.956, 27.7689, 2],\n        },\n        {\n            name: \"涓水入湘江口\",\n            value: [112.782, 27.662, 0],\n        }\n    ];\n\n    // 常德市站点数据\n    var changdedata = [{\n        name: \"武陵大桥\",\n        value: [111.705018,29.023562, 1],\n    }];\n\n    // 郴州市站点数据\n    var chenzhoudata = [{\n            name: \"东江\",\n            value: [113.183872,25.916113, 1],\n        }\n    ];\n\n    // 衡阳市站点数据\n    var henyangdata = [{\n            name: \"蒸水湘江入水口\",\n            value: [112.620562,26.917616, 1],\n        }\n    ];\n\n    // 怀化市站点数据\n    var huaihuadata = [{\n            name: \"舞水大桥\",\n            value: [109.962382,27.552532, 1],\n        }\n    ];\n\n    // 娄底市站点数据\n    var loudidata = [{\n            name: \"涟水入水口\",\n            value: [112.0752,27.741965, 1],\n        }\n    ];\n\n    // 邵阳市站点数据\n    var shaoyangdata = [{\n            name: \"资水\",\n            value: [111.497429,27.266338, 1],\n        }\n    ];\n\n    // 益阳市站点数据\n    var yiyangdata = [{\n            name: \"益阳资江二桥口\",\n            value: [112.381531,28.604063, 1],\n        }\n    ];\n\n    // 永州市站点数据\n    var yongzhoudata = [{\n            name: \"祁阳市湘江二桥口\",\n            value: [111.84403,26.572493, 1],\n        }\n    ];\n\n    // 岳阳市站点数据\n    var yueyangdata = [{\n            name: \"东洞庭湖\",\n            value: [113.048676,29.301209, 1],\n        }\n    ];\n\n    // 张家界市站点数据\n    var zhangjiajiedata = [{\n            name: \"张家界市大庸桥口\",\n            value: [110.466753,29.134629, 1],\n        }\n    ];\n\n    // 湘西土家族苗族自治州\n    var xiangxidata = [{\n            name: \"沅江武水入水口\",\n            value: [110.175293,28.279329, 1],\n        }\n    ];\n\n    var opt = {\n        bgColor: '#013954', // 画布背景色\n        mapName: '湖南', // 地图名\n        goDown: true, // 是否下钻\n        // 下钻回调\n        callback: function(name, option, instance) {\n            console.log(name, option, instance);\n            if (name == '湖南') {\n                option.series[0].data = convertData(gdDatas);\n                option.series[1].data = gdDatas.map(function(dataItem) {\n                    return {\n                        name: dataItem[0].name,\n                        value: gdGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n                    };\n                });\n                myChart.setOption(option, true);\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"长沙市\") {\n                option.series[0].data = convertData1(changshadata);\n                option.series[1].data = changshadata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"株洲市\") {\n                option.series[0].data = convertData1(zhuzhoudata);\n                option.series[1].data = zhuzhoudata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"湘潭市\") {\n                option.series[0].data = convertData1(xiangtandata);\n                option.series[1].data = xiangtandata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"常德市\") {\n                option.series[0].data = convertData1(changdedata);\n                option.series[1].data = changdedata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"郴州市\") {\n                option.series[0].data = convertData1(chenzhoudata);\n                option.series[1].data = chenzhoudata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"衡阳市\") {\n                option.series[0].data = convertData1(henyangdata);\n                option.series[1].data = henyangdata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"怀化市\") {\n                option.series[0].data = convertData1(huaihuadata);\n                option.series[1].data = huaihuadata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"娄底市\") {\n                option.series[0].data = convertData1(loudidata);\n                option.series[1].data = loudidata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"邵阳市\") {\n                option.series[0].data = convertData1(shaoyangdata);\n                option.series[1].data = shaoyangdata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"益阳市\") {\n                option.series[0].data = convertData1(yiyangdata);\n                option.series[1].data = yiyangdata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"永州市\") {\n                option.series[0].data = convertData1(yongzhoudata);\n                option.series[1].data = yongzhoudata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"岳阳市\") {\n                option.series[0].data = convertData1(yueyangdata);\n                option.series[1].data = yueyangdata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"张家界市\") {\n                option.series[0].data = convertData1(zhangjiajiedata);\n                option.series[1].data = zhangjiajiedata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            } else if (name == \"湘西土家族苗族自治州\") {\n                option.series[0].data = convertData1(xiangxidata);\n                option.series[1].data = xiangxidata;\n                myChart.setOption(option, true); // 赋值后初始化\n                setTimeout(() => { // 定时后启动飞线\n                    myChart.setOption(option, true);\n                }, 500)\n            }\n        },\n        // 数据展示            \t\n        data: []\n    };\n\n\n    var levelColorMap = { // level颜色\n        '1': '#f44336',\n        '2': '#fc9700',\n        '3': '#ffde00',\n        '4': '#00eaff'\n    };\n\n    var defaultOpt = {\n        mapName: 'china', // 地图展示\n        goDown: false, // 是否下钻\n        // bgColor: '#013954', // 画布背景色\n        activeArea: [], // 区域高亮,同echarts配置项\n        data: [],\n        // 下钻回调(点击的地图名、实例对象option、实例对象)\n        callback: function(name, option, instance) {}\n    };\n    if (opt) {\n        opt1 = $.extend(defaultOpt, opt);\n    }\n\n    // 层级索引\n    var name = [opt1.mapName];\n    var idx = 0;\n    var pos = { //层级位置\n        leftPlus: 55,\n        leftCur: 50,\n        left: 10,\n        top: 10\n    };\n\n    var line = [ //箭头\n        [0, 0],\n        [8, 11],\n        [0, 22]\n    ];\n\n    // style样式\n    var style = {\n        font: '18px \"Microsoft YaHei\", sans-serif',\n        textColor: '#eee',\n        lineColor: 'rgba(147, 235, 248, .8)'\n    };\n\n\n    var handleEvents = {\n        /**\n         * i 实例对象\n         * o option\n         * n 地图名\n         **/\n        resetOption: function(i, o, n) {\n            console.log(i)\n            console.log(o)\n            console.log(n)\n            var breadcrumb = this.createBreadcrumb(n);\n\n            var j = name.indexOf(n);\n            var l = o.graphic.length;\n            if (j < 0) {\n                console.log('jinru1')\n                o.graphic.push(breadcrumb);\n                o.graphic[0].children[0].shape.x2 = 195;\n                o.graphic[0].children[1].shape.x2 = 195;\n                if (o.graphic.length > 2) {\n                    for (var x = 0; x < opt1.data.length; x++) {\n                        if (n === opt1.data[x].name + '市') {\n                            o.series[0].data = handleEvents.initSeriesData(opt1.data[x].data);\n                            break;\n                        } else o.series[0].data = [];\n                    }\n                }\n                name.push(n);\n                idx++;\n            } else {\n                console.log('jinru2', j)\n                o.graphic.splice(j + 2, l);\n                if (o.graphic.length <= 2) {\n                    o.graphic[0].children[0].shape.x2 = 85;\n                    o.graphic[0].children[1].shape.x2 = 85;\n                    o.series[0].data = handleEvents.initSeriesData(gdDatas);\n                }\n                name.splice(j + 1, l);\n                idx = j;\n                pos.leftCur -= pos.leftPlus * (l - j - 1);\n            }\n\n            o.geo.map = n;\n            o.geo.zoom = 1;\n            i.clear();\n            i.setOption(o);\n            this.zoomAnimation();\n            opt1.callback(n, o, i);\n        },\n\n        /**\n         * name 地图名\n         **/\n        createBreadcrumb: function(name) {\n            var cityToPinyin = {\n                \"长沙市\": \"changsha\",\n                \"株洲市\": \"zhuzhou\",\n                \"湘潭市\": \"xiangtan\",\n                \"常德市\": \"changde\",\n                \"郴州市\": \"chenzhou\",\n                \"衡阳市\": \"henyang\",\n                \"怀化市\": \"huaihua\",\n                \"娄底市\": \"loudi\",\n                \"邵阳市\": \"shaoyang\",\n                \"益阳市\": \"yiyang\",\n                \"永州市\": \"yongzhou\",\n                \"岳阳市\": \"yueyang\",\n                \"张家界市\": \"zhangjiajie\",\n                \"湘西土家族苗族自治州\": \"xiangxi\"\n            };\n            var breadcrumb = {\n                type: 'group',\n                id: name,\n                left: pos.leftCur + pos.leftPlus,\n                top: pos.top + 3,\n                children: [{\n                    type: 'polyline',\n                    left: -90,\n                    top: -5,\n                    shape: {\n                        points: line\n                    },\n                    style: {\n                        stroke: '#fff',\n                        key: name,\n                    },\n                    onclick: function() {\n                        var name = this.style.key;\n                        handleEvents.resetOption(myChart, option, name);\n                    }\n                }, {\n                    type: 'text',\n                    left: -68,\n                    top: 'middle',\n                    style: {\n                        text: name,\n                        textAlign: 'center',\n                        fill: style.textColor,\n                        font: style.font\n                    },\n                    onclick: function() {\n                        var name = this.style.text;\n                        handleEvents.resetOption(myChart, option, name);\n                    }\n                }, {\n                    type: 'text',\n                    left: -68,\n                    top: 10,\n                    style: {\n\n                        name: name,\n                        text: cityToPinyin[name] ? cityToPinyin[name].toUpperCase() : '',\n                        textAlign: 'center',\n                        fill: style.textColor,\n                        font: '12px \"Microsoft YaHei\", sans-serif',\n                    },\n                    onclick: function() {\n                        // console.log(this.style);\n                        var name = this.style.name;\n                        handleEvents.resetOption(myChart, option, name);\n                    }\n                }]\n            }\n\n            pos.leftCur += pos.leftPlus;\n\n            return breadcrumb;\n        },\n\n        // 设置effectscatter\n        initSeriesData: function(data) {\n            console.log(data, '22222222222')\n            var temp = [];\n            for (var i = 0; i < data.length; i++) {\n                var geoCoord = gdGeoCoordMap[data[i].name];\n                if (geoCoord) {\n                    temp.push({\n                        name: data[i].name,\n                        value: geoCoord.concat(data[i].value, data[i].level)\n                    });\n                }\n            }\n            return temp;\n        },\n\n        zoomAnimation: function() {\n            var count = null;\n            var zoom = function(per) {\n                if (!count) count = per;\n                count = count + per;\n                // console.log(per,count);\n                myChart.setOption({\n                    geo: {\n                        zoom: count\n                    }\n                });\n                if (count < 1) window.requestAnimationFrame(function() {\n                    zoom(0.2);\n                });\n            };\n            window.requestAnimationFrame(function() {\n                zoom(0.2);\n            });\n        }\n    };\n\n    var convertData = function(data) {\n\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n            var dataItem = data[i];\n            var name = dataItem[0].name\n            var fromCoord = gdGeoCoordMap[dataItem[0].name];\n            //被攻击点坐标\n            var toCoord = [112.945358,28.234451];\n            if (fromCoord && toCoord) {\n                res.push([{\n                    name: name,\n                    coord: fromCoord,\n                    value: dataItem[0].value\n                }, {\n                    coord: toCoord,\n                }]);\n            }\n        }\n        return res;\n    };\n\n    var convertData1 = function(data) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n            var dataItem = data[i];\n            var name = dataItem.name\n            var fromCoord = data[0].value.slice(0, 2)\n            var toCoord = dataItem.value.slice(0, 2)\n            if (fromCoord && toCoord) {\n                res.push([{\n                    name: name,\n                    coord: fromCoord,\n                    value: dataItem.value[2],\n                }, {\n                    coord: toCoord,\n                }]);\n            }\n        }\n        return res;\n    };\n\n    var series = [];\n    [\n        ['长沙市', gdDatas]\n    ].forEach(function(item, i) {\n        console.log(item)\n        series.push({\n                type: 'lines',\n                zlevel: 1,\n                effect: {\n                    show: true,\n                    period: 3, //箭头指向速度，值越小速度越快\n                    trailLength: 0.7, //特效尾迹长度[0,1]值越大，尾迹越长重\n                    color: '#fff', //箭头图标\n                    symbolSize: 3, //图标大小\n                },\n                lineStyle: {\n                    normal: {\n                        width: 0.1, //尾迹线条宽度\n                        opacity: 0.2, //尾迹线条透明度\n                        curveness: 0.3 //尾迹线条曲直度\n                    }\n                },\n                data: convertData(item[1])\n            }, {\n                type: 'effectScatter',\n                coordinateSystem: 'geo',\n                zlevel: 2,\n                rippleEffect: { //涟漪特效\n                    period: 4, //动画时间，值越小速度越快\n                    brushType: 'stroke', //波纹绘制方式 stroke, fill\n                    scale: 4 //波纹圆环最大限制，值越大波纹越大\n                },\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'right', //显示位置\n                        offset: [5, 0], //偏移设置\n                        formatter: function(params) { //圆环显示文字\n                            return params.data.name;\n                        },\n                        fontSize: 19\n                    },\n                    emphasis: {\n                        show: true\n                    }\n                },\n                symbol: 'circle',\n                symbolSize: function(val) {\n                    return 10 + val[2] * 0; //圆环大小\n                },\n                itemStyle: {\n                    normal: {\n                        show: false,\n                        color: '#f00'\n                    }\n                },\n                data: item[1].map(function(dataItem) {\n                    return {\n                        name: dataItem[0].name,\n                        value: gdGeoCoordMap[dataItem[0].name].concat([dataItem[0].value])\n                    };\n                }),\n            },\n            //被攻击点\n            {\n                type: 'scatter',\n                coordinateSystem: 'geo',\n                zlevel: 2,\n                rippleEffect: {\n                    period: 4,\n                    brushType: 'stroke',\n                    scale: 4\n                },\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'right',\n                        //offset:[5, 0],\n                        color: '#0f0',\n                        formatter: '{b}',\n                        textStyle: {\n                            color: \"#0f0\"\n                        }\n                    },\n                    emphasis: {\n                        show: false,\n                        color: \"#f60\"\n                    }\n                },\n                // symbol: 'pin',\n                // symbolSize: 50,\n                // data: [{\n                //     name: item[0],\n                //     value: gdGeoCoordMap[item[0]].concat([10]),\n                // }],\n            }\n        );\n    });\n\n    var option = {\n            \"tooltip\": {\n                trigger: 'item',\n                backgroundColor: 'rgba(0,0,0,0)',\n                formatter: function(item) {\n                    console.log(item, 'item!!!!')\n                    if (item.componentSubType === 'lines') {\n                        var tipHtml1 = '';\n                        tipHtml1 = '<div style=\"background:#fff;border-radius:10px;padding-top:10px;box-shadow:0 0 10px #666\">' +\n                            '<div style=\"color:#fff;height:20px;border-radius:6px;font-size:12px;line-height:20px;background-color:#5861a2;text-align:center;margin:0 2px;\">' + item.data.name + '</div>' +\n                            '<div style=\"text-align:center;color:#494949;padding:8px 6px\">' +\n                            '<span style=\"font-size:18px;font-weight:bold;\">' + '总测试设备：' + item.data.value + ' ' + '</span>' +\n                            '</div>' + '</div>';\n                        return tipHtml1;\n                    } else if (item.componentSubType === 'effectScatter') {\n                        var tipHtml2 = '';\n                        tipHtml2 = '<div style=\"background:#fff;border-radius:10px;padding-top:10px;box-shadow:0 0 10px #666\">' +\n                            '<div style=\"color:#fff;height:20px;border-radius:6px;font-size:12px;line-height:20px;background-color:#5861a2;text-align:center;margin:0 2px;\">' + item.data.name + '</div>' +\n                            '<div style=\"text-align:center;color:#494949;padding:8px 6px\">' +\n                            '<span style=\"font-size:18px;font-weight:bold;\">' + '总测试设备：' + item.data.value[2] + ' ' + '</span>' +\n                            '</div>' + '</div>';\n                        return tipHtml2;\n                    } else if (item.componentSubType === 'scatter') {\n                        var tipHtml3 = '';\n                        tipHtml3 = '<div style=\"background:#fff;border-radius:10px;padding-top:10px;box-shadow:0 0 10px #666\">' +\n                            '<div style=\"color:#fff;height:20px;border-radius:6px;font-size:12px;line-height:20px;background-color:#5861a2;text-align:center;margin:0 2px;\">' + item.data.name + '</div>' +\n                            '<div style=\"text-align:center;color:#494949;padding:8px 6px\">' +\n                            '<span style=\"font-size:18px;font-weight:bold;\">' + '总测试设备：' + item.data.value[2] + ' ' + '</span>' +\n                            '</div>' + '</div>';\n                        return tipHtml3;\n                    }\n                }\n            },\n            backgroundColor: \"#013954\",\n            \"graphic\": [{\n                type: 'group',\n                left: pos.left,\n                top: pos.top - 4,\n                children: [{\n                    type: 'line',\n                    left: 0,\n                    top: -20,\n                    shape: {\n                        x1: 0,\n                        y1: 0,\n                        x2: 85,\n                        y2: 0\n                    },\n                    style: {\n                        stroke: style.lineColor,\n                    }\n                }, {\n                    type: 'line',\n                    left: 0,\n                    top: 20,\n                    shape: {\n                        x1: 0,\n                        y1: 0,\n                        x2: 85,\n                        y2: 0\n                    },\n                    style: {\n                        stroke: style.lineColor,\n                    }\n                }]\n            }, {\n                id: name[idx],\n                type: 'group',\n                left: pos.left + 2,\n                top: pos.top,\n                children: [{\n                    type: 'polyline',\n                    left: 90,\n                    top: -12,\n                    shape: {\n                        points: line\n                    },\n                    style: {\n                        stroke: 'transparent',\n                        key: name[0]\n                    },\n                    onclick: function() {\n                        var name = this.style.key;\n                        console.log(name, '111111')\n                        handleEvents.resetOption(myChart, option, name);\n                    }\n                }, {\n                    type: 'text',\n                    left: 0,\n                    top: 'middle',\n                    style: {\n                        text: name[0] === '湖南' ? '湖南省' : name[0],\n                        textAlign: 'center',\n                        fill: style.textColor,\n                        font: style.font\n                    },\n                    onclick: function() {\n                        handleEvents.resetOption(myChart, option, '湖南');\n                    }\n                }, {\n                    type: 'text',\n                    left: 0,\n                    top: 10,\n                    style: {\n                        text: 'HUNAN',\n                        textAlign: 'center',\n                        fill: style.textColor,\n                        font: '12px \"Microsoft YaHei\", sans-serif',\n                    },\n                    onclick: function() {\n                        handleEvents.resetOption(myChart, option, '湖南');\n                    }\n                }]\n            }],\n            visualMap: { //图例值控制\n                min: 0,\n                max: 1,\n                calculable: true,\n                show: false,\n                color: ['#f44336', '#fc9700', '#ffde00', '#ffde00', '#00eaff'],\n                textStyle: {\n                    color: '#fff'\n                }\n            },\n            \"geo\": {\n                \"map\": \"湖南\",\n                \"layoutCenter\": [\"55%\", \"50%\"],\n                \"layoutSize\": \"109%\",\n                \"label\": {\n                    \"normal\": {\n                        \"show\": true,\n                        \"textStyle\": {\n                            \"color\": '#fff'\n                        }\n                    },\n                    \"emphasis\": {\n                        \"textStyle\": {\n                            \"color\": '#fff'\n                        }\n                    }\n                },\n                \"roam\": true, //是否允许缩放\n                \"mapLocation\": {\n                    \"width\": \"110%\",\n                    \"height\": \"97%\"\n                },\n\n                \"itemStyle\": {\n                    \"normal\": {\n                        borderColor: 'rgba(147, 235, 248, 1)',\n                        borderWidth: 1,\n                        areaColor: {\n                            type: 'radial',\n                            x: 0.5,\n                            y: 0.5,\n                            r: 0.8,\n                            colorStops: [{\n                                offset: 0,\n                                color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\n                            }, {\n                                offset: 1,\n                                color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\n                            }],\n                            globalCoord: false // 缺省为 false\n                        },\n                        shadowColor: 'rgba(128, 217, 248, 1)',\n                        // shadowColor: 'rgba(255, 255, 255, 1)',\n                        shadowOffsetX: -2,\n                        shadowOffsetY: 2,\n                        shadowBlur: 10\n                    },\n                    \"emphasis\": {\n                        itemStyle: {\n                            areaColor: '#FFD181',\n                            borderColor: '#404a59',\n                            borderWidth: 1\n                        }\n                    }\n                }\n            },\n            series: series\n        };\n    myChart.setOption(option);\n    myChart.on('click', function(params) {\n        console.log(params)\n        var _self = this;\n        if (cityMap[params.name]) {\n            var url = cityMap[params.name];\n            $.get(url, function(response) {\n                //console.log(response, 'res');\n                curGeoJson = response;\n                echarts.registerMap(params.name, response);\n                handleEvents.resetOption(_self, option, params.name);\n            });\n        }\n    });\n});\n","html":"","externalScripts":"","updaterUID":"obd-o2SgwOa5qsp9KVYvmO_WBvuhQVYyhBQ","theme":"","layout":"","viewCount":0,"userName":"a***9","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x0rqZPolMO.png?v=1623318827101","isCustomThumbnail":0,"builtinTags":["category-work","geo","graphic","series-effectScatter","series-lines","series-scatter","tooltip","visualMap"],"customTags":[],"updaterUserName":"a***9"}}