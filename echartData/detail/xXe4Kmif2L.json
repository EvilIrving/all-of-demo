{"status":0,"data":{"cid":"xXe4Kmif2L","authorUid":"obd-oMGVtRKzY3yTc9vjgIk6WODcIXEXR2F","authorUserName":"张***4","title":"测试","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2020-06-28T06:16:59.000Z","lastUpdateTime":"2020-06-28T06:16:59.000Z","auth":2,"uid":"obd-oMGVtRKzY3yTc9vjgIk6WODcIXEXR2F","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2020-06-28T06:16:59.000Z","code":"/**\r\n * 存储阶段进度时间段的对象\r\n */\r\nvar stageProgress = {\r\n// \t\t\t// 方案 实际时间段\r\n// \t\t\tfangAnTimeBucket: ['2017-01-01', '2017-03-01'],\r\n// \t\t\t// 纲要 实际时间段\r\n// \t\t\tgangYaoTimeBucket: ['2017-02-26', '2017-08-29'],\r\n// \t\t\t// 成果 实际时间段\r\n// \t\t\tchengGuoTimeBucket: ['2017-08-29', '2017-12-06'],\r\n// \t\t\t// 计划开始时间\r\n// \t\t\tscheduledStartTime: '2016-12-22',\r\n// \t\t\t// 有效截止日期\r\n// \t\t\tvalidTime: '2017-05-10'\r\n \r\n\t// \t\t// 方案 实际时间段\r\n\t// \t\tfangAnTimeBucket: ['2017-01-01', '2017-01-20'],\r\n\t// \t\t// 纲要 实际时间段\r\n\t// \t\tgangYaoTimeBucket: ['2017-02-07', '2017-02-28'],\r\n\t// \t\t// 成果 实际时间段\r\n\t// \t\tchengGuoTimeBucket: ['2017-02-15', '2017-03-20'],\r\n\t// \t\t// 计划开始时间\r\n\t// \t\tscheduledStartTime: '2017-01-01',\r\n\t// \t\t// 有效截止日期\r\n\t// \t\tvalidTime: '2017-02-20'\r\n \r\n\t// 方案 实际时间段\r\n\tfangAnTimeBucket: ['2017-11-23', '2017-11-28'],\r\n\t// 纲要 实际时间段\r\n\tgangYaoTimeBucket: ['2017-11-25', '2017-11-30'],\r\n\t// 成果 实际时间段\r\n\tchengGuoTimeBucket: ['2017-12-06', '2017-12-12'],\r\n\t// 计划开始时间\r\n\tscheduledStartTime: '2017-11-23',\r\n\t// 有效截止日期\r\n\tvalidTime: '2017-12-02'\r\n};\r\n \r\n/**\r\n * 横坐标轴时间刻度可选值\r\n * 这里 month和year 没有考虑平闰年之分\r\n */\r\nvar timeInterval = {\r\n\tday: 3600 * 1000 * 24,\r\n\tmonth: 3600 * 1000 * 24 * 31,\r\n\tyear: 3600 * 1000 * 24 * 31 * 12,\r\n};\r\n \r\n/**\r\n * 时间坐标轴标签单位应该精确到哪一位\r\n */\r\nvar xAxisLabelUnit = {\r\n\tyear: false,\r\n\tmonth: false,\r\n\tday: false\r\n}\r\n \r\n/**\r\n * 获取合适的横坐标时间刻度间隔\r\n */\r\nfunction getProperTimeAxisInterval() {\r\n\txAxisLabelUnit.year = false;\r\n\txAxisLabelUnit.month = false;\r\n\txAxisLabelUnit.day = false;\r\n \r\n\tvar timeDataArray = getXAxisData();\r\n\tvar begin = getTimeMilliseconds(timeDataArray[timeDataArray.length - 1]);\r\n\tconsole.log(\"begin \" + begin);\r\n\tvar periodMillis = getTimeMilliseconds(timeDataArray[timeDataArray.length - 1]) - getTimeMilliseconds(timeDataArray[0]);\r\n\tconsole.log(\"periodMillis \" + periodMillis);\r\n\tvar years = periodMillis / timeInterval.year;\r\n\tconsole.log(\"years \" + years);\r\n\tvar months = periodMillis / timeInterval.month;\r\n\tconsole.log(\"months \" + months);\r\n\tvar days = periodMillis / timeInterval.day;\r\n\tconsole.log(\"days \" + days);\r\n \r\n\tif (months <= 1) {\r\n\t\txAxisLabelUnit.day = true;\r\n\t\treturn timeInterval.day * 2;\r\n\t} else if (months <= 16) {\r\n\t\txAxisLabelUnit.month = true;\r\n\t\treturn timeInterval.month;\r\n\t} else if (months <= 24) {\r\n\t\txAxisLabelUnit.month = true;\r\n\t\treturn timeInterval.month * 2;\r\n\t} else if (years <= 16) {\r\n\t\txAxisLabelUnit.year = true;\r\n\t\treturn timeInterval.year;\r\n\t}\r\n}\r\n \r\n/**\r\n * 获取横轴坐标数据源，这里横坐标只显示年月\r\n * 最小值取传入数据最小的时间再减小一个月\r\n * 最大值取传入数据最小的时间再增加一个月\r\n */\r\nfunction getXAxisData() {\r\n\tvar arr = new Array();\r\n\tarr = arr.concat(stageProgress.scheduledStartTime)\r\n\t\t.concat(stageProgress.fangAnTimeBucket)\r\n\t\t.concat(stageProgress.gangYaoTimeBucket)\r\n\t\t.concat(stageProgress.chengGuoTimeBucket)\r\n\t\t.concat(stageProgress.validTime).filter(function(item) {\r\n\t\t\treturn item != \"-\";\r\n\t\t}).sort();\r\n\tconsole.log(arr);\r\n\treturn arr;\r\n}\r\n \r\n/**\r\n * 更改日期字符串为相应月份的第一天\r\n * @param {Object} dateStr 日期字符串\r\n */\r\nfunction changeDateToMonthFirstDay(dateStr) {\r\n\tvar inputDate = new Date(dateStr);\r\n\tinputDate.setDate(1);\r\n\tvar result = inputDate.getFullYear() + \"-\" +\r\n\t\t(inputDate.getMonth() >= 9 ? inputDate.getMonth() + 1 : \"0\" +\r\n\t\t\t(inputDate.getMonth() + 1)) + \"-\" + (\"0\" + 1);\r\n\treturn result;\r\n}\r\n \r\n/**\r\n * 获取格式化的日期 YYYY-MM-dd\r\n */\r\nfunction formatDateToStr(date) {\r\n\tvar inputMonth = date.getMonth();\r\n\tvar inputDate = date.getDate();\r\n\tvar result = date.getFullYear() +\r\n\t\t\"-\" + (inputMonth >= 9 ? inputMonth + 1 : \"0\" + (inputMonth + 1)) +\r\n\t\t\"-\" + (inputDate >= 9 ? inputDate : \"0\" + (inputDate));\r\n\treturn result;\r\n}\r\n \r\nvar faOnTimeCompletionTime = getOnTimeCompletionTime('方案', stageProgress.fangAnTimeBucket[0], stageProgress.fangAnTimeBucket[\r\n\t1]);\r\nvar gyOnTimeCompletionTime = getOnTimeCompletionTime('纲要', stageProgress.gangYaoTimeBucket[0], stageProgress.gangYaoTimeBucket[\r\n\t1]);\r\nvar cgOnTimeCompletionTime = getOnTimeCompletionTime('成果', stageProgress.chengGuoTimeBucket[0], stageProgress.chengGuoTimeBucket[\r\n\t1]);\r\n \r\nvar faOverTimeCompletionTime = getOverTimeCompletionTime('方案', stageProgress.fangAnTimeBucket[0], stageProgress.fangAnTimeBucket[\r\n\t1]);\r\nvar gyOverTimeCompletionTime = getOverTimeCompletionTime('纲要', stageProgress.gangYaoTimeBucket[0], stageProgress.gangYaoTimeBucket[\r\n\t1]);\r\nvar cgOverTimeCompletionTime = getOverTimeCompletionTime('成果', stageProgress.chengGuoTimeBucket[0], stageProgress.chengGuoTimeBucket[\r\n\t1]);\r\n \r\n/**\r\n * 时间数组\r\n */\r\nvar timeArray = {\r\n\t// 开始时间\r\n\tbeginTimeArr: [\r\n\t\tgetTimeMilliseconds(stageProgress.fangAnTimeBucket[0]),\r\n\t\tgetTimeMilliseconds(stageProgress.gangYaoTimeBucket[0]),\r\n\t\tgetTimeMilliseconds(stageProgress.chengGuoTimeBucket[0]),\r\n\t],\r\n\t// 按时完成时间\r\n\tonTimeCompletionTimeArr: [\r\n\t\tgetTimeMilliseconds(faOnTimeCompletionTime),\r\n\t\tgetTimeMilliseconds(gyOnTimeCompletionTime),\r\n\t\tgetTimeMilliseconds(cgOnTimeCompletionTime),\r\n\t],\r\n\t// 超时完成时间\r\n\toverTimeCompletionTimeArr: [\r\n\t\tgetTimeMilliseconds(faOverTimeCompletionTime),\r\n\t\tgetTimeMilliseconds(gyOverTimeCompletionTime),\r\n\t\tgetTimeMilliseconds(cgOverTimeCompletionTime),\r\n\t],\r\n};\r\n\r\n// 构建图表配置项\r\noption = {\r\n\ttooltip: {\r\n\t\ttrigger: 'axis',\r\n\t\taxisPointer: {\r\n\t\t\ttype: 'shadow',\r\n\t\t},\r\n \r\n\t\t/**\r\n\t\t * 也可以使用 formatter: '{b0}:<br />{a0}: {c0}<br />{a1}: {c1}<br />{a2}: {c2}',\r\n\t\t * 但是这样当鼠标指向纵坐标的三个阶段中的某一个时，即使该阶段 没有按时完成，或者 没有超时，\r\n\t\t * 也会显示 按时 或 超时 的 tooltip\r\n\t\t */\r\n\t\tformatter: function(params) {\r\n// \t\t\tconsole.log(\"params[0]\" + JSON.stringify(params[0]));\r\n// \t\t\tconsole.log(\"params[1]\" + JSON.stringify(params[1]));\r\n\t\t\tconsole.log(\"params[2]\" + JSON.stringify(params[2]));\r\n\t\t\tvar info = params[0].axisValue + \":<br />\";\r\n\t\t\tinfo += params[0].seriesName + \"：\" + getSeriesDateStr(params[0].data) + \"<br />\";\r\n\t\t\tinfo += \"结束时间：\" + (params[2].data != \"-\" && params[2].data != undefined && params[2].data != null&&!isNaN(params[2].data) ?\r\n\t\t\t\tgetSeriesDateStr(params[2].data) :\r\n\t\t\t\t(!isNaN(params[1].data)&&params[1].data != undefined && params[1].data != null ? getSeriesDateStr(params[1].data) : \"-\"));\r\n\t\t\treturn info;\r\n\t\t},\r\n\t},\r\n \r\n\t/**\r\n\t * 右上角工具栏\r\n\t */\r\n\ttoolbox: {\r\n\t\tright: '3%',\r\n\t\tshow: false,\r\n\t\tfeature: {\r\n\t\t\t/**\r\n\t\t\t * 数据视图\r\n\t\t\t */\r\n\t\t\t// \t\t\tdataView:{\r\n\t\t\t// \t\t\t\tshow:true,\r\n\t\t\t// \t\t\t},\r\n\t\t\tsaveAsImage: {\r\n\t\t\t\tshow: true\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n \r\n\t/**\r\n\t * 图例\r\n\t */\r\n\tlegend: {\r\n\t\tdata: ['按时完成', '超时完成'],\r\n\t\ttooltip: {\r\n\t\t\tshow: true,\r\n\t\t},\r\n\t\titemWidth: 15,\r\n\t\titemHeight: 15,\r\n\t\ttextStyle: {\r\n\t\t\tfontSize: 16,\r\n\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t},\r\n\t\titemGap: 120,\r\n\t\tpadding: 10,\r\n\t},\r\n \r\n\t/**\r\n\t * 直角坐标系内绘图网格\r\n\t */\r\n\tgrid: {\r\n\t\tleft: '3%',\r\n\t\tright: '3%',\r\n\t\tbottom: '2%',\r\n\t\t/**\r\n\t\t * grid 区域是否包含坐标轴的刻度标签。\r\n\t\t */\r\n\t\tcontainLabel: true,\r\n\t},\r\n \r\n\t/**\r\n\t * 横坐标\r\n\t */\r\n\txAxis: {\r\n\t\t// \t\t/**\r\n\t\t// \t\t * 坐标轴指示器\r\n\t\t// \t\t */\r\n\t\t// \t\taxisPointer: {\r\n\t\t// \t\t\tshow: true,\r\n\t\t// \t\t},\r\n \r\n\t\t/**\r\n\t\t * 时间轴，适用于连续的时序数据，与数值轴相比时间轴带有时间的格式化，\r\n\t\t * 在刻度计算上也有所不同，例如会根据跨度的范围来决定使用月，星期，日还是小时范围的刻度。\r\n\t\t */\r\n\t\ttype: 'time',\r\n \r\n\t\t/**\r\n\t\t * value 是一个包含 min 和 max 的对象，分别表示数据的最大最小值，这个函数应该返回坐标轴的最大值。\r\n\t\t *\r\n\t\t * 坐标轴刻度最小值。\r\n\t\t */\r\n\t\tmin: function(value) {\r\n\t\t\treturn value.min + (getTimeMilliseconds(getProperTimeAxisBeginAndEndTime()[0]) - value.min);\r\n\t\t},\r\n \r\n\t\t/**\r\n\t\t * value 是一个包含 min 和 max 的对象，分别表示数据的最大最小值，这个函数应该返回坐标轴的最大值。\r\n\t\t *\r\n\t\t * 坐标轴刻度最大值。\r\n\t\t */\r\n\t\tmax: function(value) {\r\n\t\t\treturn value.max + (getTimeMilliseconds(getProperTimeAxisBeginAndEndTime()[1]) - value.max);\r\n\t\t},\r\n\t\t// \r\n\t\t/**\r\n\t\t * 设置坐标轴分割间隔\r\n\t\t */\r\n\t\tinterval: getProperTimeAxisInterval(),\r\n\t\taxisLine: {\r\n\t\t\tlineStyle: {\r\n\t\t\t\tcolor: '#BDC8CD',\r\n\t\t\t\twidth: 1,\r\n\t\t\t},\r\n\t\t},\r\n \r\n\t\t/**\r\n\t\t * 坐标轴刻度标签的相关设置。\r\n\t\t */\r\n\t\taxisLabel: {\r\n\t\t\tshowMinLabel: false,\r\n\t\t\tshowMaxLabel: false,\r\n\t\t\trotate: 35,\r\n\t\t\tmargin: 12,\r\n\t\t\tfontSize: 16,\r\n\t\t\tcolor: '#1c2431',\r\n\t\t\tformatter: function(value, index) {\r\n\t\t\t\tvar date = new Date(value);\r\n\t\t\t\t// var time = date.getFullYear() + \".\" + (date.getMonth() + 1) + \".\" + date.getDate();\r\n\t\t\t\tvar time = date.getFullYear();\r\n\t\t\t\tif (xAxisLabelUnit.month) {\r\n\t\t\t\t\ttime += \".\" + (date.getMonth() + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (xAxisLabelUnit.day) {\r\n\t\t\t\t\ttime += \".\" + (date.getMonth() + 1) + '.' + date.getDate();\r\n\t\t\t\t}\r\n\t\t\t\treturn time;\r\n\t\t\t},\r\n\t\t},\r\n \r\n\t\t/**\r\n\t\t * 坐标轴刻度分割线\r\n\t\t */\r\n\t\tsplitLine: {\r\n\t\t\tshow: false,\r\n\t\t},\r\n\t},\r\n \r\n\t/**\r\n\t * 纵坐标\r\n\t */\r\n\tyAxis: {\r\n\t\ttype: 'category',\r\n\t\tdata: ['方\\n案', '纲\\n要', '成\\n果'],\r\n\t\taxisTick: {\r\n\t\t\tshow: false,\r\n\t\t},\r\n\t\taxisLine: {\r\n\t\t\tlineStyle: {\r\n\t\t\t\tcolor: '#e9e9ea',\r\n\t\t\t\twidth: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t\taxisLabel: {\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\tfontSize: 16,\r\n\t\t\tcolor: '#1c2431',\r\n\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t},\r\n\t\tsplitLine: {\r\n\t\t\tshow: true,\r\n\t\t\tlineStyle: {\r\n\t\t\t\tcolor: '#eaeae9',\r\n\t\t\t\twidth: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n \r\n\t/**\r\n\t * 系列\r\n\t */\r\n\tseries: [{\r\n\t\tname: '开始时间',\r\n\t\ttype: 'bar',\r\n\t\tstack: '时间',\r\n\t\titemStyle: {\r\n\t\t\tnormal: {\r\n\t\t\t\tbarBorderColor: 'rgba(0,0,0,0)',\r\n\t\t\t\tcolor: 'rgba(0,0,0,0)'\r\n\t\t\t},\r\n\t\t\temphasis: {\r\n\t\t\t\tbarBorderColor: 'rgba(0,0,0,0)',\r\n\t\t\t\tcolor: 'rgba(0,0,0,0)'\r\n\t\t\t}\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tnormal: {\r\n\t\t\t\tformatter: function(params) {\r\n\t\t\t\t\treturn getSeriesDateStr(params.value);\r\n\t\t\t\t},\r\n\t\t\t\tshow: true,\r\n\t\t\t\tposition: 'insideRight',\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: '#1c2431',\r\n\t\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t\t\toffset: [40, -20],\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: timeArray.beginTimeArr,\r\n \r\n\t\t/**\r\n\t\t * 标注线\r\n\t\t */\r\n\t\tmarkLine: {\r\n\t\t\tlineStyle: {\r\n\t\t\t\tnormal: {\r\n\t\t\t\t\tcolor: '#0f77e9',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlabel: {\r\n\t\t\t\tnormal: {\r\n\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\tpadding: 2,\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t\t\t\tformatter: function(params) {\r\n\t\t\t\t\t\treturn '计划开始时间 ' + getSeriesDateStr(params.value);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\tname: '计划开始时间',\r\n\t\t\t\txAxis: getTimeMilliseconds(stageProgress.scheduledStartTime),\r\n\t\t\t}, ]\r\n\t\t},\r\n\t}, {\r\n\t\tname: '按时完成',\r\n\t\ttype: 'bar',\r\n\t\tstack: '时间',\r\n\t\titemStyle: {\r\n\t\t\tnormal: {\r\n\t\t\t\tcolor: '#0f77e9'\r\n\t\t\t}\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tnormal: {\r\n\t\t\t\tformatter: function(params) {\r\n\t\t\t\t\treturn getSeriesDateStr(params.value);\r\n\t\t\t\t},\r\n\t\t\t\tshow: true,\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: '#1c2431',\r\n\t\t\t\tposition: 'right',\r\n\t\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t\t\toffset: [-45, -20],\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: timeArray.onTimeCompletionTimeArr,\r\n\t\tmarkLine: {\r\n\t\t\tlineStyle: {\r\n\t\t\t\tnormal: {\r\n\t\t\t\t\tcolor: '#ff4747',\r\n\t\t\t\t},\r\n \r\n\t\t\t},\r\n\t\t\tlabel: {\r\n\t\t\t\tnormal: {\r\n\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\tpadding: 2,\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t\t\t\tformatter: function(params) {\r\n\t\t\t\t\t\treturn '计划完成时间 ' + getSeriesDateStr(params.value);\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\tname: '有效期',\r\n\t\t\t\txAxis: getTimeMilliseconds(stageProgress.validTime),\r\n\t\t\t}, ]\r\n\t\t},\r\n\t}, {\r\n\t\tname: '超时完成',\r\n\t\ttype: 'bar',\r\n\t\tstack: '时间',\r\n\t\titemStyle: {\r\n\t\t\tnormal: {\r\n\t\t\t\tcolor: '#ff4747'\r\n\t\t\t}\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tnormal: {\r\n\t\t\t\tformatter: function(params) {\r\n\t\t\t\t\treturn getSeriesDateStr(params.value);\r\n\t\t\t\t},\r\n\t\t\t\tshow: true,\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tcolor: '#1c2431',\r\n\t\t\t\toffset: [-45, -20],\r\n\t\t\t\tposition: 'right',\r\n\t\t\t\tfontFamily: 'Microsoft YaHei',\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata: timeArray.overTimeCompletionTimeArr,\r\n\t\t/**\r\n\t\t * 柱状图宽度\r\n\t\t */\r\n\t\tbarWidth: 20,\r\n\t}, ]\r\n};\r\n \r\n/**\r\n * 时间对象转日期字符串 yyyy.MM.dd\r\n * @param {Object} timeObject 毫秒值或时间字符串\r\n */\r\nfunction getSeriesDateStr(timeObject) {\r\n\tif (timeObject == \"-\") {\r\n\t\treturn timeObject;\r\n\t}\r\n\tvar date = new Date(timeObject);\r\n\tvar dateStr = '';\r\n\tdateStr += date.getFullYear() + '.';\r\n\tdateStr += date.getMonth() + 1 + '.';\r\n\tdateStr += date.getDate();\r\n\treturn dateStr;\r\n};\r\n \r\n/**\r\n * 获取阶段的计划内完成时间（蓝色柱状图值）\r\n * @param {Object} stage 阶段\r\n * @param {Object} stateBeginTime\r\n * @param {Object} stateCompletionTime\r\n */\r\nfunction getOnTimeCompletionTime(stage, stageBeginTimeStr, stageCompletionTimeStr) {\r\n\tvar validTimeMillis = getTimeMilliseconds(stageProgress.validTime);\r\n\tvar stageBeginTimeMillis = getTimeMilliseconds(stageBeginTimeStr);\r\n\tvar stageCompletionTimeMillis = getTimeMilliseconds(stageCompletionTimeStr);\r\n\tif (validTimeMillis <= stageBeginTimeMillis) {\r\n\t\t// 若阶段开始时间大于等于有效期，则项目超时完成，有效时间为'-'\r\n\t\treturn '-';\r\n\t}\r\n\tif (validTimeMillis > stageBeginTimeMillis && validTimeMillis < stageCompletionTimeMillis) {\r\n\t\t// 若有效期介于阶段完成时间和阶段开始时间之间，则该阶段按时完后时间(实际该阶段是超时完成的)即蓝色柱状图的终值为有效期\r\n\t\treturn stageProgress.validTime;\r\n\t}\r\n\tif (validTimeMillis >= stageCompletionTimeMillis) {\r\n\t\t// 若有效期大于等于阶段完成时间，则阶段按时完成\r\n\t\treturn stageCompletionTimeStr;\r\n\t}\r\n}\r\n \r\n/**\r\n * 获取阶段内的超时完成时间（红色色柱状图值）\r\n * @param {Object} stage 阶段\r\n * @param {Object} stateBeginTime\r\n * @param {Object} stateCompletionTime\r\n */\r\nfunction getOverTimeCompletionTime(stage, stageBeginTimeStr, stageCompletionTimeStr) {\r\n\tvar validTimeMillis = getTimeMilliseconds(stageProgress.validTime);\r\n\tvar stageBeginTimeMillis = getTimeMilliseconds(stageBeginTimeStr);\r\n\tvar stageCompletionTimeMillis = getTimeMilliseconds(stageCompletionTimeStr);\r\n \r\n\tif (validTimeMillis < stageCompletionTimeMillis) {\r\n\t\t// 阶段完成时间大于有效期，则将阶段完成时间作为超时时间返回\r\n\t\treturn stageCompletionTimeStr;\r\n\t}\r\n \r\n\tif (validTimeMillis >= stageCompletionTimeMillis) {\r\n\t\t// 阶段完成时间小于等于有效期，则阶段按时完成，超时时间应为'-'\r\n\t\treturn '-';\r\n\t}\r\n}\r\n \r\n/**\r\n * 根据时间字符串获取对应的毫秒值\r\n * @param {Object} timeStr 时间字符串\r\n */\r\nfunction getTimeMilliseconds(timeStr) {\r\n\treturn (new Date(timeStr)).getTime();\r\n}\r\n \r\n/**\r\n *获取时间坐标轴的起始和结束值\r\n */\r\nfunction getProperTimeAxisBeginAndEndTime() {\r\n\tvar xAxis = getXAxisData();\r\n\tvar begin = xAxis[0];\r\n\tvar end = xAxis[xAxis.length - 1];\r\n\tvar beginDate = new Date(begin);\r\n\tvar endDate = new Date(end);\r\n \r\n\tif (xAxisLabelUnit.month) {\r\n\t\tbeginDate.setDate(1);\r\n\t\tendDate.setMonth(endDate.getMonth() + 1);\r\n\t\tendDate.setDate(1);\r\n\t} else {\r\n\t\tvar daysCount = getProperTimeAxisInterval() / timeInterval.day;\r\n\t\tconsole.log(\"daysCount \" + daysCount);\r\n\t\tbeginDate.setDate(beginDate.getDate() - daysCount);\r\n\t\tendDate.setDate(endDate.getDate() + daysCount);\r\n\t}\r\n\tvar beArr = [formatDateToStr(beginDate), formatDateToStr(endDate)];\r\n\tconsole.log(\"beArr \" + beArr);\r\n\treturn beArr;\r\n}","html":"","externalScripts":"","updaterUID":"obd-oMGVtRKzY3yTc9vjgIk6WODcIXEXR2F","theme":"","layout":"","viewCount":1191,"userName":"张***4","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xXe4Kmif2L.png?v=1593325020121","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","markLine","series-bar","toolbox","tooltip"],"customTags":[],"updaterUserName":"张***4"}}