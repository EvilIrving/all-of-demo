{"status":0,"data":{"cid":"xV0Mu6ZHP3","authorUid":"obd-oCXci_RolYUjjHLA-X4-aSYX89tcP3h","authorUserName":"157*****625","title":"柱形图标记","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-09-22T02:34:24.000Z","lastUpdateTime":"2021-09-22T02:34:24.000Z","auth":2,"uid":"obd-oCXci_RolYUjjHLA-X4-aSYX89tcP3h","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.1","versionCreateTime":"2021-09-22T02:34:24.000Z","code":"\noption  = {\n    \"grid\": {\n        \"top\": \"60\",\n        \"left\": \"7%\",\n        \"right\": \"7%\",\n        \"bottom\": \"60\",\n        \"containLabel\": true\n    },\n    \"xAxis\": [{\n        \"type\": \"category\",\n        \"axisLabel\": {\n            interval:1\n        }\n    }],\n    \"yAxis\": [{\n        \"type\": \"value\"\n    }],\n    \"legend\": {\n        \"show\": true,\n        \"type\": \"scroll\",\n        \"bottom\": 0,\n        \"textStyle\": {\n            \"fontSize\": 12\n        }\n    },\n    \"series\": [{\n        \"name\": \"一、营业总收入\",\n        \"type\": \"bar\",\n    \n    }],\n    \"dataset\": [{\n        \"source\": [\n            [\"Product\", \"B\"],\n            [\"2016年01月\", 225675509.91],\n            [\"2016年02月\", 264710417.86],\n            [\"2016年03月\", 777447937.51]\n           \n        ]\n    }],\n\n    \"customConfig\": {\n        \"customSymbols\": [{\n            \"seriesIndex\": 0,\n            \"dataIndex\": 2,\n            \"data\": []\n        }, {\n            \"seriesIndex\": 0,\n            \"dataIndex\": 1,\n            \"data\": [{\n                \"calcSymbol\": \"<\",\n                \"value1\": \"0\",\n                \"value2\": \"\",\n                \"suffix\": \"\",\n                \"prefix\": \"\",\n                \"iconName\": \"red_curve_right_bottom\",\n                \"color\": \" #ff2814\",\n                \"symbol\": \"M13.811,11h3.918l-6.855,7L4.021,11H8.036c0-5-1.568-8.5-4.993-11C7.937,1,12.833,4,13.811,11Z\"\n            }, {\n                \"calcSymbol\": \">\",\n                \"value1\": \"0\",\n                \"value2\": \"\",\n                \"suffix\": \"\",\n                \"prefix\": \"\",\n                \"iconName\": \"green_curve_right_top\",\n                \"color\": \"#22C72D\",\n                \"symbol\": \"M13.811,7h3.918L10.874,0,4.021,7H8.036c0,5-1.568,8.5-4.993,11C7.937,17,12.833,14,13.811,7Z\"\n            }, {\n                \"calcSymbol\": \"==\",\n                \"value1\": \"0\",\n                \"value2\": \"\",\n                \"suffix\": \"\",\n                \"prefix\": \"\",\n                \"iconName\": \"green_equal\",\n                \"color\": \" #22c72d\",\n                \"symbol\": \"M22.1,6.157H1.579A1.579,1.579,0,1,1,1.579,3H22.1a1.579,1.579,0,0,1,0,3.157ZM1.579,11.189H22.1a1.579,1.579,0,1,1,0,3.157H1.579a1.579,1.579,0,1,1,0-3.157Z\"\n            }]\n        }]\n    }\n}\n\n// 设置标记\nfunction  setBarSymbols(option){\n      let customSymbols = option.customConfig && option.customConfig.customSymbols\n      let  dataset = option.dataset.find(data=>data.hasOwnProperty(\"source\"))\n      let source = dataset?dataset.source:[]\n      if(customSymbols && customSymbols.length){\n        option.series.forEach((serie,index)=>{ // 柱图及线图才行\n          if(serie.type===\"bar\"){\n            // 查看当前系列有没有标记条件\n            let symbols =  customSymbols.filter(symbol=>symbol.seriesIndex===index)\n            let markPoints=[]\n            let dataIndexs=[] // 该系列条件成立的dataIndex\n            if(symbols && symbols.length){ // 当前系列所有的\n              symbols.forEach(symbol=>{// 当前系列单个 {data 条件,dataIndex 位置,seriesIndex 系列位置}\n                if(!source[symbol.dataIndex+1])return\n                let value = source[symbol.dataIndex+1][symbol.seriesIndex+1]\n                for(let i = 0;i<symbol.data.length;i++){//条件\n                  let flag = false\n                  try{\n                    flag = confirmCondition(symbol.data[i],value)\n                  }catch(e){}\n                  if(flag){\n                    let markPointItem =  getMarkPointItem(symbol.data[i],symbol.dataIndex,value)\n                    markPoints.push(markPointItem)\n                    if( !dataIndexs.includes(symbol.dataIndex)) dataIndexs.push(symbol.dataIndex)\n                       console.log(' 有一个成立，跳过')\n                    break; // 有一个成立，跳过\n                  }\n                }\n              })\n            }\n            serie['markPoint']={data:markPoints } // 标记\n            byKeySetValue(serie,\"itemStyle,normal\",\"color\",(params)=>{\n              if(!dataIndexs.includes(params.dataIndex)){//有了标记，柱子就不显示了\n                return params.color\n              }\n            })\n          }\n        })\n      }\n    }\n// 确定条件是否成立   \nfunction confirmCondition(condition,value=0){\n      if(condition.calcSymbol===\"<>\")return condition.value1 <= value && value <= condition.value2\n      else return eval(value+condition.calcSymbol+condition.value1)\n    }\n// 获取标记\nfunction getMarkPointItem(symbol,dataIndex,value){\n      return {\n        \"coord\": [dataIndex,value],\n        symbolOffset:[0,20],\n        symbol:\"path://\"+symbol.symbol,\n        \"silent\":true,\n        itemStyle:{\n          color:symbol.color\n        },\n        value: (symbol.prefix||\"\")+ value+(symbol.suffix||\"\"),\n        label:{\n          position:\"top\",\n          color:symbol.color,\n        }\n\n      }\n    }\n    /**\n * @desc 根据key值设置value\n * @author shj\n * @params\n */\n function byKeySetValue(Obj,field,key,value){\n  if(isArray(Obj)){\n    Obj.forEach(x=>{\n      isHasAttribute(x,field,key,value)\n    })\n  }else if(Obj){\n    isHasAttribute(Obj,field,key,value)\n  }\n\n}\n/**\n * @desc 判断是否含有元素\n * @author shj\n * @params\n */\n function isHasAttribute(obj,field,key,value){\n  let fields =  field.split(\",\")\n  if(fields.length===1){ // = 1\n    obj[field]=value\n  } else if(fields.length>1){\n    let  evalSt = \"obj.\"\n    let has = \"hasOwnProperty(fields[i])\"\n    for(let i=0;i<fields.length;i++){\n      if(i===0){\n        if(!obj.hasOwnProperty(fields[i]))obj[fields[i]]={}\n      }else if(i>0){\n        evalSt +=fields[i-1]+\".\"\n        let is = \"!\"+evalSt+has\n        if(eval(is)){ // 判断是否含有下一个元素\n          let str = evalSt.substring(0,evalSt.length-1)\n          eval(str+\"[fields[i]]={}\")\n        }\n        if(i===fields.length-1){\n          evalSt = evalSt + fields[i]+\"[key]=value\"\n          eval(evalSt)\n        }\n      }\n    }\n  }\n}\n\n function getType(v){\n  return Object.prototype.toString.call(v);\n}\n function isArray(v){\n  return getType(v) === '[object Array]';\n}\n    \n    // 当柱子上设置的条件成立时，显示标记，柱子隐藏\n    setBarSymbols(option)\n\n    ","html":"","externalScripts":"","updaterUID":"obd-oCXci_RolYUjjHLA-X4-aSYX89tcP3h","theme":"","layout":"","viewCount":0,"userName":"157*****625","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xV0Mu6ZHP3.png?v=1632278064471","isCustomThumbnail":0,"builtinTags":["category-work","dataset","grid","legend","markPoint","series-bar"],"customTags":[],"updaterUserName":"157*****625"}}