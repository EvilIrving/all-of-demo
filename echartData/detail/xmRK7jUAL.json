{"status":0,"data":{"cid":"xmRK7jUAL","authorUid":"bd-6442928284","authorUserName":"流***r","title":"雷达图内阴影","description":"","latestVersion":7,"alwaysLatest":1,"createTime":"2020-01-16T17:27:05.000Z","lastUpdateTime":"2020-01-16T17:27:05.000Z","auth":2,"uid":"bd-6442928284","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":7,"parentVersion":6,"echartsVersion":"4.4.0","versionCreateTime":"2020-01-19T11:42:07.000Z","code":"const createSvg = ({width, height, shadowColor, shadowBlur, points}) => {\r\n    const ret = [`M${points[0][0]} ${points[0][1]}`];\r\n    for (let i = 1; i < points.length; i++) {\r\n        ret.push(`L${points[i][0]} ${points[i][1]}`);\r\n    }\r\n    ret.push('Z');\r\n    const rectPath = ret.join(' ');\r\n    return (`\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \r\n            x=\"0px\" y=\"0px\" \r\n            width=\"${width}\"\r\n            height=\"${height}\"\r\n        >\r\n            <style>\r\n                .st1 {\r\n                    fill: transparent;\r\n                    stroke: ${shadowColor};\r\n                    stroke-width: ${shadowBlur}px;\r\n                    filter: url(#chart-inset-shadow);\r\n                    clip-path: url(#chart-clip);\r\n                }\r\n\r\n            </style>\r\n            <defs>\r\n              \r\n                <clipPath id=\"chart-clip\">\r\n                    <path d=\"${rectPath}\" />\r\n                </clipPath>\r\n                \r\n                <filter id=\"chart-inset-shadow\" width=\"200%\" height=\"200%\" x=\"-50%\" y=\"-50%\">\r\n            \t\t<feGaussianBlur in=\"SourceGraphic\" result=\"gass\" stdDeviation=\"${shadowBlur * 0.75}\" />\r\n            \t\t<feMerge>\r\n            \t\t\t<feMergeNode in=\"gass\" />\r\n            \t\t</feMerge>\r\n            \t</filter>\r\n\r\n            </defs>\r\n            <g>\r\n                <path class=\"st1\" d=\"${rectPath}\" />\r\n            </g>\r\n        </svg>\r\n    `);\r\n    \r\n};\r\n\r\nconst cretateSvgUrl = (svgOption) => {\r\n    const svgString = createSvg(svgOption);\r\n    const svg = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\r\n    \r\n    const DOMURL = window.URL || window.webkitURL || window;\r\n    const insetShadowUrl = DOMURL.createObjectURL(svg);\r\n    \r\n    return insetShadowUrl;\r\n};\r\n\r\nconst dataSet = [\r\n    ['项目1', '项目2','项目3', '项目4', '项目5'],\r\n    [100, 90, 80, 66, 90],\r\n    [70, 30, 60, 86, 20],\r\n];\r\n\r\nconst maxValue = [...dataSet[1], ...dataSet[2]].reduce((m, v) => Math.max(m, v), -Infinity);\r\n\r\nconst radius = 0.8;\r\nconst theta = Math.PI * 2 / dataSet[2].length;\r\n\r\nconst getPoints = (R, ps, max) => ps.map((v, i) => {\r\n    const t = i * theta;\r\n    const d = v / max;\r\n    const x = R - Math.sin(t) * R * d;    \r\n    const y = R - Math.cos(t) * R * d;\r\n    return [x, y];\r\n});\r\n\r\noption = {\r\n    backgroundColor: '#000000',\r\n    tooltip: {\r\n        // trigger: 'axis',\r\n        // show: true\r\n    },\r\n    polar: {\r\n        radius: radius * 100 + '%',\r\n        center: ['50%', '50%'],\r\n    },\r\n    angleAxis: {\r\n        type: 'category',\r\n        clockwise: false,\r\n        boundaryGap: false,\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisLine: {\r\n            show: false\r\n        }\r\n    },\r\n    radiusAxis: {\r\n        type: 'value',\r\n        max: 100,\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisTick: {\r\n            show: false,\r\n        },\r\n        axisLabel: {\r\n            show: false,\r\n        },\r\n    },\r\n    radar: {\r\n        indicator: dataSet[0].map((v, i) => ({name: v, max: maxValue})),\r\n        radius: radius * 100 + '%',\r\n        center: ['50%', '50%'],\r\n        shape: 'polygon',\r\n        splitNumber: 4,\r\n        name: {\r\n            textStyle: {\r\n                color: '#ffffff',\r\n                fontSize: 22\r\n            }\r\n        },\r\n        splitArea: {\r\n            areaStyle: {\r\n                color: [\r\n                    'rgba(255,255,255,0.1)',\r\n                    'rgba(255,255,255,0.03)',\r\n                    'rgba(255,255,255,0.1)',\r\n                    'rgba(255,255,255,0.03)',\r\n                ]\r\n            }\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: [\r\n                    '#6b6b6b', '#6b6b6b',\r\n                    '#6b6b6b', '#6b6b6b',\r\n                    '#6b6b6b', '#6b6b6b'\r\n                ].reverse(),\r\n                width: 3\r\n            }\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: 'rgba(238,238,238, 0.2)'\r\n            }\r\n        }\r\n    },\r\n    \r\n    series: [\r\n        {\r\n            type: 'custom',\r\n            name: 's1-inset-shadow',\r\n            silent: true,\r\n            coordinateSystem : 'polar', \r\n            data: [0],\r\n            renderItem: (params,api) => {\r\n                const R = params.coordSys.r;\r\n                const cx = params.coordSys.cx;\r\n                const cy = params.coordSys.cy;\r\n                \r\n                const x = cx - R;\r\n                const y = cy - R;\r\n                const width = 2 * R;\r\n                const height = 2 * R;\r\n                \r\n                return {\r\n                    type: 'image',\r\n                    style: {\r\n                        image: cretateSvgUrl({\r\n                            width, height,\r\n                            shadowColor: 'rgba(13, 178, 255, 1)',\r\n                            shadowBlur: 30, \r\n                            points: getPoints(R, dataSet[1], 100)\r\n                        }),\r\n                        x,\r\n                        y,\r\n                        width, \r\n                        height,\r\n                    },\r\n                };\r\n            },\r\n        },\r\n        {\r\n            name: 's1',\r\n            type: 'radar',\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            data: [\r\n                { value: dataSet[1] }\r\n            ],\r\n            symbol: 'circle',\r\n            symbolSize: 12,\r\n            itemStyle: {\r\n                normal: {\r\n                    color: 'rgba(87,201,255,0.8)',\r\n                    borderColor: 'rgba(87,201,255,0.2)',\r\n                    borderWidth: 12,\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: 'transparent',\r\n                }\r\n            },\r\n            lineStyle: {\r\n                normal: {\r\n                    color: 'rgba(13, 178, 255, 1)',\r\n                    width: 5\r\n                }\r\n            },\r\n\r\n        },\r\n        {\r\n            type: 'custom',\r\n            name: 's2-inset-shadow',\r\n            silent: true,\r\n            coordinateSystem : 'polar', \r\n            data: [0],\r\n            renderItem: (params,api) => {\r\n                const R = params.coordSys.r;\r\n                const cx = params.coordSys.cx;\r\n                const cy = params.coordSys.cy;\r\n                \r\n                const x = cx - R;\r\n                const y = cy - R;\r\n                const width = 2 * R;\r\n                const height = 2 * R;\r\n                \r\n                return {\r\n                    type: 'image',\r\n                    style: {\r\n                        image: cretateSvgUrl({\r\n                            width, height,\r\n                            shadowColor: 'yellow',\r\n                            shadowBlur: 30, \r\n                            points: getPoints(R, dataSet[2], 100)\r\n                        }),\r\n                        x,\r\n                        y,\r\n                        width, \r\n                        height,\r\n                    },\r\n                };\r\n            },\r\n        },\r\n        {\r\n            name: 's2',\r\n            type: 'radar',\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            data: [\r\n                { value: dataSet[2] }\r\n            ],\r\n            symbol: 'circle',\r\n            symbolSize: 12,\r\n            itemStyle: {\r\n                normal: {\r\n                    color: 'rgba(87,201,255,0.8)',\r\n                    borderColor: 'rgba(87,201,255,0.2)',\r\n                    borderWidth: 12,\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: 'transparent',\r\n                }\r\n            },\r\n            lineStyle: {\r\n                normal: {\r\n                    color: 'yellow',\r\n                    width: 5\r\n                }\r\n            },\r\n            z: 3,\r\n        },\r\n       \r\n    ]\r\n\r\n\r\n};","html":"","externalScripts":"","updaterUID":"bd-6442928284","theme":"","layout":"","viewCount":2105,"userName":"流***r","commentCount":0,"starCount":8,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xmRK7jUAL.png?v=1579434127823","isCustomThumbnail":0,"builtinTags":["category-work","polar","radar","series-custom","series-radar","tooltip"],"customTags":["inset","内阴影"],"updaterUserName":"流***r"}}