{"status":0,"data":{"cid":"xS1qZKYa0W","authorUid":"bd-976297474","authorUserName":"狐涂鸦YJ","title":"珠海市快递员24H流动情况","description":"通过百度地图显示24小时内快递员的流动情况","latestVersion":1,"alwaysLatest":1,"createTime":"2017-11-06T07:02:25.000Z","lastUpdateTime":"2017-11-06T07:02:25.000Z","auth":2,"uid":"bd-976297474","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"3.7.2","versionCreateTime":"2017-11-06T07:02:25.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1509618385039-rktRfuu0-.json\";\n// 根据目标的起点终点，通过百度DrivingRoute接口获取路线坐标，并绘制线路\n// 由于兼容多数浏览器，采用简单语法\nvar couriers = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]\n$.get(uploadedDataURL, function (uploadedData) {\n    uploadedData = JSON.parse(uploadedData)\n    var couriersData = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []] // 运动轨迹\n    var convertData = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []] // 静止点\n    function printItem (val) {\n        val.map(function (coum, key) {\n          var hStep = 300 / (coum.length - 1);\n          coum.map(function (item, index) {\n            let points = []\n            for (var i = 0; i < item.length; i++) {\n              points.push([item[i].lng, item[i].lat])\n            }\n            couriersData[key].push({coords: points, lineStyle: {normal: {color: 'yellow'}}})\n          })\n        })\n        /*减少数据请求，进行数据缓存*/\n        localStorage.setItem('couriersData', JSON.stringify(couriersData));\n        localStorage.setItem('convertData', JSON.stringify(convertData));\n     };\n    if (localStorage.getItem('couriersData') && localStorage.getItem('convertData')) {\n        couriersData = JSON.parse(localStorage.getItem('couriersData'))\n        convertData = JSON.parse(localStorage.getItem('convertData'))\n      } else {\n        var map = new BMap.Map(\"bmap\");\n        for (let i = 0; i < uploadedData.length; i++) {\n          var sameNumber = 0\n          for (let j = 0; j < uploadedData[i].length; j++) {\n            /*判断是否为静止点，减少数据请求*/\n            if (uploadedData[i][j].bVcdflon === uploadedData[i][j].eVcdflon && uploadedData[i][j].bVcdflat === uploadedData[i][j].eVcdflat) {\n              convertData[i].push({name: uploadedData[i][j].rn, value: [uploadedData[i][j].eVcdflon, uploadedData[i][j].eVcdflat]})\n              sameNumber += 1\n            } else {\n              (function () {\n                var driving = new BMap.DrivingRoute(map);\n                var myP1 = new BMap.Point(uploadedData[i][j].bVcdflon, uploadedData[i][j].bVcdflat);    //起点\n                var myP2 = new BMap.Point(uploadedData[i][j].eVcdflon, uploadedData[i][j].eVcdflat);    //终点\n                driving.search(myP1, myP2);\n                driving.setSearchCompleteCallback(function(){\n                    couriers[i].push(driving.getResults().getPlan(0).getRoute(0).getPath())\n                    if (i === uploadedData.length - 1 && couriers[i].length === uploadedData[i].length - sameNumber) printItem(couriers)\n                })\n              })()\n            }\n          }\n        }\n     }\n    myChart.setOption(option = {\n        baseOption: {\n          animationDurationUpdate: 2000,\n          animationEasingUpdate: 'quinticInOut',\n          animation: false,\n          timeline: {\n            autoPlay: true,\n            axisType: 'time',\n            orient: 'vertical',\n            currentIndex: 18,\n            playInterval: 2000,\n            right: 0,\n            top: 20,\n            bottom: 20,\n            width: 55,\n            height: null,\n            itemStyle: {\n              normal: {\n                color: '#04a5f1'\n              },\n              emphasis: {\n                color: '#04a5f1'\n              }\n            },\n            lineStyle: {\n              color: '#ddd'\n            },\n            checkpointStyle: {\n              color: '#04a5f1',\n              borderColor: 'rgba(4, 165, 261, .5)'\n            },\n            data: ['2017/10/21 01:00', '2017/10/21 02:00', '2017/10/21 03:00', '2017/10/21 04:00', '2017/10/21 05:00', '2017/10/21 06:00', '2017/10/21 07:00', '2017/10/21 08:00', '2017/10/21 09:00', '2017/10/21 10:00', '2017/10/21 11:00', '2017/10/21 12:00', '2017/10/21 13:00', '2017/10/21 14:00', '2017/10/21 15:00', '2017/10/21 16:00', '2017/10/21 17:00', '2017/10/21 18:00', '2017/10/21 19:00', '2017/10/21 20:00', '2017/10/21 21:00', '2017/10/21 22:00', '2017/10/21 23:00']\n          },\n          bmap: {\n            center: [113.527882, 22.204539],\n            zoom: 12,\n            roam: true,\n            mapStyle: {\n              'styleJson': [{\n                'featureType': 'water',\n                'elementType': 'all',\n                'stylers': {\n                  'color': '#031628'\n                }\n              },\n              {\n                'featureType': 'land',\n                'elementType': 'geometry',\n                'stylers': {\n                  'color': '#000102'\n                }\n              },\n              {\n                'featureType': 'poi',\n                \"elementType\": 'labels',\n                'stylers': {\n                  \"visibility\": 'off'\n                }\n              },\n              {\n                'featureType': 'highway',\n                'elementType': 'all',\n                'stylers': {\n                  'visibility': 'off'\n                }\n              },\n              {\n                'featureType': 'arterial',\n                'elementType': 'geometry.fill',\n                'stylers': {\n                  'color': '#000000'\n                }\n              },\n              {\n                'featureType': 'arterial',\n                'elementType': 'geometry.stroke',\n                'stylers': {\n                  'color': '#0b3d51'\n                }\n              },\n              {\n                'featureType': 'local',\n                'elementType': 'geometry',\n                'stylers': {\n                  'color': '#000000'\n                }\n              },\n              {\n                'featureType': 'railway',\n                'elementType': 'geometry.fill',\n                'stylers': {\n                  'color': '#000000'\n                }\n              },\n              {\n                'featureType': 'railway',\n                'elementType': 'geometry.stroke',\n                'stylers': {\n                  'color': '#08304b'\n                }\n              },\n              {\n                'featureType': 'subway',\n                'elementType': 'geometry',\n                'stylers': {\n                  'lightness': -70\n                }\n              },\n              {\n                'featureType': 'building',\n                'elementType': 'geometry.fill',\n                'stylers': {\n                  'color': '#000000'\n                }\n              },\n              {\n                'featureType': 'all',\n                'elementType': 'labels.text.fill',\n                'stylers': {\n                  'color': '#857f7f'\n                }\n              },\n              {\n                'featureType': 'all',\n                'elementType': 'labels.text.stroke',\n                'stylers': {\n                  'color': '#000000'\n                }\n              },\n              {\n                'featureType': 'building',\n                'elementType': 'geometry',\n                'stylers': {\n                  'color': '#022338'\n                }\n              },\n              {\n                'featureType': 'green',\n                'elementType': 'geometry',\n                'stylers': {\n                  'color': '#062032'\n                }\n              },\n              {\n                'featureType': 'boundary',\n                'elementType': 'all',\n                'stylers': {\n                  'color': '#465b6c'\n                }\n              },\n              {\n                'featureType': 'manmade',\n                'elementType': 'all',\n                'stylers': {\n                  'color': '#022338'\n                }\n              },\n              {\n                'featureType': 'label',\n                'elementType': 'all',\n                'stylers': {\n                  'visibility': 'off'\n                }\n              }]\n            }\n          },\n          title: {\n            bottom: '10%',\n            right: '25%',\n            textStyle: {\n              color: '#dbdbdb',\n            }\n          },\n          series: [\n            {\n              type: 'lines',\n              coordinateSystem: 'bmap',\n              polyline: true,\n              silent: true,\n              lineStyle: {\n                normal: {\n                  opacity: 0.2,\n                  width: 2\n                }\n              },\n              progressiveThreshold: 500,\n              progressive: 200\n            },\n            {\n              type: 'lines',\n              coordinateSystem: 'bmap',\n              polyline: true,\n              lineStyle: {\n                normal: {\n                  width: 0\n                }\n              },\n              effect: {\n                constantSpeed: 50,\n                show: true,\n                trailLength: 0.1,\n                symbolSize: 2\n              },\n              zlevel: 5\n            },\n            {\n              type: 'scatter',\n              coordinateSystem: 'bmap',\n              label: {\n                normal: {\n                  show: false\n                }\n              },\n              symbolSize: 2,\n              itemStyle: {\n                normal: {\n                  color: 'yellow'\n                }\n              },\n              zlevel: 1\n            }\n          ]\n        },\n        options: [\n          {title: {text: '珠海市快递员0: 00 - 1：00流动'}, series: [{data: couriersData[0]}, {data: couriersData[0]}, {data: convertData[0]}]},\n          {title: {text: '珠海市快递员1: 00 - 2：00流动'}, series: [{data: couriersData[1]}, {data: couriersData[1]}, {data: convertData[1]}]},\n          {title: {text: '珠海市快递员2: 00 - 3：00流动'}, series: [{data: couriersData[2]}, {data: couriersData[2]}, {data: convertData[2]}]},\n          {title: {text: '珠海市快递员3: 00 - 4：00流动'}, series: [{data: couriersData[3]}, {data: couriersData[3]}, {data: convertData[3]}]},\n          {title: {text: '珠海市快递员4: 00 - 5：00流动'}, series: [{data: couriersData[4]}, {data: couriersData[4]}, {data: convertData[4]}]},\n          {title: {text: '珠海市快递员5: 00 - 6：00流动'}, series: [{data: couriersData[5]}, {data: couriersData[5]}, {data: convertData[5]}]},\n          {title: {text: '珠海市快递员6: 00 - 7：00流动'}, series: [{data: couriersData[6]}, {data: couriersData[6]}, {data: convertData[6]}]},\n          {title: {text: '珠海市快递员7: 00 - 8：00流动'}, series: [{data: couriersData[7]}, {data: couriersData[7]}, {data: convertData[7]}]},\n          {title: {text: '珠海市快递员8: 00 - 9：00流动'}, series: [{data: couriersData[8]}, {data: couriersData[8]}, {data: convertData[8]}]},\n          {title: {text: '珠海市快递员9: 00 - 10：00流动'}, series: [{data: couriersData[9]}, {data: couriersData[9]}, {data: convertData[9]}]},\n          {title: {text: '珠海市快递员10: 00 - 11：00流动'}, series: [{data: couriersData[10]}, {data: couriersData[10]}, {data: convertData[10]}]},\n          {title: {text: '珠海市快递员11: 00 - 12：00流动'}, series: [{data: couriersData[11]}, {data: couriersData[11]}, {data: convertData[11]}]},\n          {title: {text: '珠海市快递员12: 00 - 13：00流动'}, series: [{data: couriersData[12]}, {data: couriersData[12]}, {data: convertData[12]}]},\n          {title: {text: '珠海市快递员13: 00 - 14：00流动'}, series: [{data: couriersData[13]}, {data: couriersData[13]}, {data: convertData[13]}]},\n          {title: {text: '珠海市快递员14: 00 - 15：00流动'}, series: [{data: couriersData[14]}, {data: couriersData[14]}, {data: convertData[14]}]},\n          {title: {text: '珠海市快递员15: 00 - 16：00流动'}, series: [{data: couriersData[15]}, {data: couriersData[15]}, {data: convertData[15]}]},\n          {title: {text: '珠海市快递员16: 00 - 17：00流动'}, series: [{data: couriersData[16]}, {data: couriersData[16]}, {data: convertData[16]}]},\n          {title: {text: '珠海市快递员17: 00 - 18：00流动'}, series: [{data: couriersData[17]}, {data: couriersData[17]}, {data: convertData[17]}]},\n          {title: {text: '珠海市快递员18: 00 - 19：00流动'}, series: [{data: couriersData[18]}, {data: couriersData[18]}, {data: convertData[18]}]},\n          {title: {text: '珠海市快递员19: 00 - 20：00流动'}, series: [{data: couriersData[19]}, {data: couriersData[19]}, {data: convertData[19]}]},\n          {title: {text: '珠海市快递员20: 00 - 21：00流动'}, series: [{data: couriersData[20]}, {data: couriersData[20]}, {data: convertData[20]}]},\n          {title: {text: '珠海市快递员21: 00 - 22：00流动'}, series: [{data: couriersData[21]}, {data: couriersData[21]}, {data: convertData[21]}]},\n          {title: {text: '珠海市快递员22: 00 - 23：00流动'}, series: [{data: couriersData[22]}, {data: couriersData[22]}, {data: convertData[22]}]},\n        ]\n    });\n})","html":"","externalScripts":"http://api.map.baidu.com/api?v=2.0&ak=iMmdUvS0a3GlqkvFiyxrjomo4XpjkZSz,/dep/echarts/latest/extension/bmap.min.js","updaterUID":"bd-976297474","theme":"","layout":"","viewCount":864,"userName":"狐涂鸦YJ","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xS1qZKYa0W.png?v=1509951746730","isCustomThumbnail":1,"builtinTags":["category-work"],"customTags":["时间轴","百度地图","线图","轨迹"],"updaterUserName":"狐涂鸦YJ"}}