{"status":0,"data":{"cid":"x-Jkap_gch","authorUid":"bd-3626886291","authorUserName":"l***u","title":"多图网格布局算法","description":"多图表网格自动布局","latestVersion":3,"alwaysLatest":0,"createTime":"2021-11-28T19:16:53.000Z","lastUpdateTime":"2021-12-02T03:38:54.000Z","auth":2,"uid":"bd-3626886291","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"5.2.2","versionCreateTime":"2021-12-02T03:38:54.000Z","code":"let width = myChart.getWidth();\nlet height = myChart.getHeight();\nconsole.log(width, height);\n/* 生成网格 @length 图表个数 @cols 每行列数  */\nfunction genGrid(length, cols) {\n    let grids = [];\n    const gutter = 8; //间隔占比\n    let rows = Math.ceil(length / cols); //获取总行数\n    let width = Math.floor((100 - (cols + 1) * gutter) / cols); //每列图表宽度\n    let height = Math.floor((100 - (rows + 1) * gutter) / rows); //每行图表高度\n    for (let i = 0; i < length; i++) {\n        let rowIndex = Math.floor(i / cols); //行索引\n        let colIndex = i % cols; //列索引\n        let left = colIndex * width + (colIndex + 1) * gutter;\n        let right = 100 - left - width;\n        let top = rowIndex * height + (rowIndex + 1) * gutter;\n        let bottom = 100 - top - height;\n        let center = [Math.floor(left + width / 2) + '%', Math.floor(top + height / 2 + gutter) + '%'];\n        let topCenter = { left: Math.floor(left + width / 2) + '%', top: Math.floor(top - gutter / 2) + '%' };\n        let bottomCenter = { left: Math.floor((right - left) / 2) + '%', top: Math.floor(top + gutter / 2) + '%' };\n        let gird = {\n            index: i,\n            topCenter,\n            center,\n            bottomCenter,\n            left: left + '%',\n            right: right + '%',\n            top: top + '%',\n            bottom: bottom + '%',\n        };\n        grids.push(gird);\n    }\n    return grids;\n}\n\nlet grid = genGrid(6, 3);\nconsole.log(grid);\nlet xAxis = [],\n    yAxis = [],\n    series = [],\n    title = [];\nfor (let i = 0; i < grid.length; i++) {\n    title.push({\n        text: '多图表Grid布局算法-图表' + i,\n        left: grid[i].topCenter.left,\n        top: grid[i].topCenter.top,\n        textAlign: 'center',\n    });\n    xAxis.push({\n        gridIndex: i,\n        name: '' + i,\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    });\n    yAxis.push({\n        gridIndex: i,\n        name: i + '',\n    });\n    series.push({\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: ['line', 'bar'][Math.floor(Math.random() * 2)],\n        xAxisIndex: i,\n        yAxisIndex: i,\n        // center: grid[i].center,\n        // radius: grid[i].radius,\n    });\n}\n\noption = {\n    title,\n    xAxis,\n    yAxis,\n    grid,\n    series,\n};\n","html":"","externalScripts":"","updaterUID":"bd-3626886291","theme":"","layout":"","viewCount":0,"userName":"l***u","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x-Jkap_gch.png?v=1638416334326","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-line","title"],"customTags":["多图","多行多列","布局","网格","自动布局"],"updaterUserName":"l***u"}}