{"status":0,"data":{"cid":"xHy0P1e_ub","authorUid":"bd-2239932449","authorUserName":"137*****470","title":"Typical Relationship Chart with Graph type","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2017-08-21T05:28:06.000Z","lastUpdateTime":"2017-08-21T05:28:06.000Z","auth":2,"uid":"bd-2239932449","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"3.6.2","versionCreateTime":"2017-08-22T03:09:46.000Z","code":"/**\n * \n * 测试关系图 graph type\n * \n */\nvar symbolSize = 20;\nvar coors1 = [\n    [100, 220],\n    [200, 182],\n    [300, 191],\n    [400, 234],\n    [500, 290],\n    [600, 330],\n    [700, 310]\n];\n\nvar coors2 = [\n    [100, 420],\n    [200, 382],\n    [300, 391],\n    [400, 434],\n    [500, 490],\n    [600, 530],\n    [700, 510]\n];\n\nvar coors3 = [\n    [100, 620],\n    [200, 582],\n    [300, 591],\n    [400, 634],\n    [500, 690],\n    [600, 730],\n    [700, 710]\n];\n\n\nvar data = [coors1, coors2, coors3];\n\n\nvar optionSeries = [];\nvar legendData = [];\n\n\n\nfor (var i = 0; i < data.length; i++) {\n    var links = data[i].map(function(item, j) {\n        return {\n            source: j,\n            target: j + 1\n        };\n    });\n\n    links.pop();\n    optionSeries.push({\n        type: 'graph',\n        layout: 'none', //布局\n        coordinateSystem: 'cartesian2d',\n        symbolSize: 20,\n        roam: true,\n        label: {\n            normal: {\n                show: true\n            }\n        },\n        edgeSymbol: ['circle', 'arrow'],\n        edgeSymbolSize: [4, 10],\n        data: data[i],\n        links: links,\n        lineStyle: {\n            normal: {\n                color: '#2f4554'\n            }\n        },\n        animationDelay: function(idx) {\n            return idx * 200;\n        }\n    });\n\n\n}\n\n\nif (!app.inNode) {\n    setTimeout(function() {\n        // Add shadow circles (which is not visible) to enable drag.\n        myChart.setOption({\n            graphic: echarts.util.map(data, function(element, index) {\n                console.log('1st layer!');\n                return {\n                    type: 'group',\n                    id: 'group' + (index + 1),\n                    children: echarts.util.map(element, function(item, dataIndex) {\n\n                        var i = index;\n                        return {\n                            type: 'circle',\n                            position: myChart.convertToPixel('grid', item),\n                            shape: {\n                                cx: 0,\n                                cy: 0,\n                                r: symbolSize / 2\n                            },\n                            invisible: true,\n                            draggable: true,\n                            ondrag: echarts.util.curry(onPointDragging, dataIndex, index),\n                            onmousemove: echarts.util.curry(showTooltip, dataIndex),\n                            onmouseout: echarts.util.curry(hideTooltip, dataIndex),\n                            z: 100\n                        };\n                    })\n                };\n            })\n\n        });\n    }, 0);\n\nwindow.addEventListener('resize', function() {\n\n    myChart.resize();\n        \n        myChart.setOption({\n            graphic: echarts.util.map(data, function(element, index) {\n                //console.log('1st layer!');\n                return {\n                    type: 'group',\n                    id: 'group' + (index + 1),\n                    children: echarts.util.map(element, function(item, dataIndex) {\n\n                        var i = index;\n                        return {\n                            type: 'circle',\n                            position: myChart.convertToPixel('grid', item),\n                            shape: {\n                                cx: 0,\n                                cy: 0,\n                                r: symbolSize / 2\n                            },\n                            invisible: true,\n                            draggable: true,\n                            ondrag: echarts.util.curry(onPointDragging, dataIndex, index),\n                            onmousemove: echarts.util.curry(showTooltip, dataIndex),\n                            onmouseout: echarts.util.curry(hideTooltip, dataIndex),\n                            z: 100\n                        };\n                    })\n                };\n            })\n\n        });\n        \n});\n}\n\n\n\n\nfunction showTooltip(dataIndex) {\n    myChart.dispatchAction({\n        type: 'showTip',\n        seriesIndex: 0,\n        dataIndex: dataIndex\n    });\n}\n\nfunction hideTooltip(dataIndex) {\n    myChart.dispatchAction({\n        type: 'hideTip'\n    });\n}\n\nfunction onPointDragging(dataIndex, i) {\n    //console.log('Drag !' + i);\n    data[i][dataIndex] = myChart.convertFromPixel('grid', this.position);\n\n    // Update data\n    myChart.setOption({\n        series: optionSeries\n    });\n}\n\n\noption = {\n    title: {\n        text: 'Typical Relationship Chart'\n    },\n    legend: {\n        data: legendData,\n        left: 0,\n        top: 100\n    },\n    grid: {\n        top: 100\n    },\n    xAxis: {\n        min: 0,\n        max: 1000\n    },\n    yAxis: {\n        min: 0,\n        max: 1000\n    },\n    tooltip: {\n        formatter: function(obj) {\n\n            return \"a \" + \"-->\" + \" b\";\n        }\n    },\n    series: optionSeries\n};","html":"","externalScripts":"","updaterUID":"bd-2239932449","theme":"","layout":"","viewCount":464,"userName":"137*****470","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xHy0P1e_ub.png?v=1503371386650","isCustomThumbnail":0,"builtinTags":["category-work","graphic","grid","legend","series-graph","title","tooltip"],"customTags":[],"updaterUserName":"137*****470"}}