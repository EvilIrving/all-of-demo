{"status":0,"data":{"cid":"x38AZ7NX_9","authorUid":"obd-o2Xu06T0HTK0KYiOdT3Y-cYj1WFgJBH","authorUserName":"球***鞋","title":"12月直观分布图","description":"12月直观分布图","latestVersion":4,"alwaysLatest":0,"createTime":"2021-06-23T01:45:46.000Z","lastUpdateTime":"2021-06-23T01:45:46.000Z","auth":2,"uid":"obd-o2Xu06T0HTK0KYiOdT3Y-cYj1WFgJBH","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"5.1.2","versionCreateTime":"2021-06-23T09:10:15.000Z","code":"//获取每月的天数\r\nfunction mGetDate(year, month){\r\n    var d = new Date(year, month, 0);\r\n    return d.getDate();\r\n}\r\n\r\n//获取两个数之间的随机整数\r\nfunction getRandomNumberByRange(start, end) { \r\n    return Math.floor(Math.random() * (end - start) + start)\r\n}\r\n\r\n//12个月的颜色\r\nlet color = [\r\n    \"#0090FF\",  //第一月背景\r\n    \"#0079AF\",  //第二月背景\r\n    \"#36CE9E\",  //第三月背景\r\n    \"#2FA57A\",  //第四月背景\r\n    \"#00FFF2\",  //第五月背景\r\n    \"#00BCAE\",  //第六月背景\r\n    \"#FFC005\",  //第七月背景\r\n    \"#DD9F05\",  //第八月背景\r\n    \"#FF515A\",  //第九月背景\r\n    \"#B73B47\",  //第十月背景\r\n    \"#8B5CFF\",  //第十一月背景\r\n    \"#6245BA\",  //第十二月背景\r\n];\r\n\r\nconst hexToRgba = (hex, opacity) => {\r\n    let rgbaColor = \"\";\r\n    let reg = /^#[\\da-f]{6}$/i;\r\n    if (reg.test(hex)) {\r\n        rgbaColor = `rgba(${parseInt(\"0x\" + hex.slice(1, 3))},${parseInt(\r\n    \"0x\" + hex.slice(3, 5)\r\n    )},${parseInt(\"0x\" + hex.slice(5, 7))},${opacity})`;\r\n    }\r\n    return rgbaColor;\r\n}\r\n\r\n//数据\r\nlet datas = [];\r\nfor (var i = 1; i <= 12; i++) {\r\n    for (var j = 1; j <= mGetDate(2021,i); j++) {\r\n        let date1 = i+\"-\" +j\r\n        if(date1.slice(0,2).indexOf('-') > -1){\r\n            date1 = '0' + date1\r\n        }\r\n        datas.push({\r\n            'date1':date1,\r\n            'data1':getRandomNumberByRange(0,500),\r\n            'data2':getRandomNumberByRange(0,500),\r\n            'data3':getRandomNumberByRange(0,500),\r\n            'data4':getRandomNumberByRange(0,500),\r\n        })\r\n    }\r\n}\r\n\r\n//柱状图数据\r\nlet xData=[],data1=[],data2=[],data3=[],data4=[];\r\n//折线图数据\r\nlet value1 = [],value2 = [],value3 = [],value4 = [],value5 = [],value6 = [],value7 = [],value8 = [],value9 = [],value10 = [],value11 = [],value12 = [];\r\n\r\ndatas.map((item,index)=>{\r\n    xData.push(item.date1);\r\n    data1.push(item.data1);\r\n    data2.push(item.data2);\r\n    data3.push(item.data3);\r\n    data4.push(item.data4);\r\n    \r\n    let next = datas[index+1]&&datas[index+1].date1\r\n    //第一月\r\n    if(item.date1.slice(0,2) == '01'){\r\n        value1.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '01' && next && next.slice(0,2) == '02'){\r\n        value2.push(2000);\r\n        }else{\r\n        value2.push(undefined);\r\n        }\r\n        value3.push(undefined);\r\n        value4.push(undefined);\r\n        value5.push(undefined);\r\n        value6.push(undefined);\r\n        value7.push(undefined);\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第二月\r\n    }else if(item.date1.slice(0,2) == '02'){\r\n        value2.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '02' && next && next.slice(0,2) == '03'){\r\n        value3.push(2000);\r\n        }else{\r\n        value3.push(undefined);\r\n        }\r\n        value4.push(undefined);\r\n        value5.push(undefined);\r\n        value6.push(undefined);\r\n        value7.push(undefined);\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第三月\r\n    }else if(item.date1.slice(0,2) == '03'){\r\n        value3.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '03' && next && next.slice(0,2) == '04'){\r\n        value4.push(2000);\r\n        }else{\r\n        value4.push(undefined);\r\n        }\r\n        value5.push(undefined);\r\n        value6.push(undefined);\r\n        value7.push(undefined);\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第四月\r\n    }else if(item.date1.slice(0,2) == '04'){\r\n        value4.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '04' && next && next.slice(0,2) == '05'){\r\n        value5.push(2000);\r\n        }else{\r\n        value5.push(undefined);\r\n        }\r\n        value6.push(undefined);\r\n        value7.push(undefined);\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第五月\r\n    }else if(item.date1.slice(0,2) == '05'){\r\n        value5.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '05' && next && next.slice(0,2) == '06'){\r\n        value6.push(2000);\r\n        }else{\r\n        value6.push(undefined);\r\n        }\r\n        value7.push(undefined);\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第六月\r\n    }else if(item.date1.slice(0,2) == '06'){\r\n        value6.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '06' && next && next.slice(0,2) == '07'){\r\n        value7.push(2000);\r\n        }else{\r\n        value7.push(undefined);\r\n        }\r\n        value8.push(undefined);\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第七月\r\n    }else if(item.date1.slice(0,2) == '07'){\r\n        value7.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '07' && next && next.slice(0,2) == '08'){\r\n        value8.push(2000);\r\n        }else{\r\n        value8.push(undefined);\r\n        }\r\n        value9.push(undefined);\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第八月\r\n    }else if(item.date1.slice(0,2) == '08'){\r\n        value8.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '08' && next && next.slice(0,2) == '09'){\r\n        value9.push(2000);\r\n        }else{\r\n        value9.push(undefined);\r\n        }\r\n        value10.push(undefined);\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第九月\r\n    }else if(item.date1.slice(0,2) == '09'){\r\n        value9.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '09' && next && next.slice(0,2) == '10'){\r\n        value10.push(2000);\r\n        }else{\r\n        value10.push(undefined);\r\n        }\r\n        value11.push(undefined);\r\n        value12.push(undefined);\r\n    //第十月\r\n    }else if(item.date1.slice(0,2) == '10'){\r\n        value10.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '10' && next && next.slice(0,2) == '11'){\r\n        value11.push(2000);\r\n        }else{\r\n        value11.push(undefined);\r\n        }\r\n        value12.push(undefined);\r\n    //第十一月\r\n    }else if(item.date1.slice(0,2) == '11'){\r\n        value11.push(2000);\r\n        //判断是当前月最后一条数据的话下个月的第一条数据赋值\r\n        if(item.date1.slice(0,2) == '11' && next && next.slice(0,2) == '12'){\r\n        value12.push(2000);\r\n        }else{\r\n        value12.push(undefined);\r\n        }\r\n    //第十二月\r\n    }else if(item.date1.slice(0,2) == '12'){\r\n        value12.push(2000);\r\n    }\r\n})\r\n  \r\noption = {\r\n    tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n                type: 'shadow'\r\n            },\r\n            formatter:(res)=>{\r\n                let title = res[0].name;\r\n                let text1 = res[0].seriesName + \":\" + res[0].value\r\n                let text2 = res[1].seriesName + \":\" + (res[0].value + res[1].value)\r\n                let text3 = res[2].seriesName + \":\" + (res[0].value + res[1].value + res[2].value)\r\n                let text4 = res[3].seriesName + \":\" + (res[0].value + res[1].value + res[2].value + res[3].value)\r\n                return title + \"<br/>\" + text1 + \"<br/>\" + text2 + \"<br/>\" + text3 + \"<br/>\" + text4\r\n            }\r\n        },\r\n        dataZoom : [\r\n          {\r\n            type: 'slider',\r\n            show: true,\r\n            start: 0,\r\n            end: 100,\r\n            bottom:60,\r\n            height:50,\r\n          }\r\n        ],\r\n        grid: [\r\n          {\r\n            top: 10,\r\n            left:80,\r\n            right:10,\r\n            bottom: 150\r\n          }\r\n        ],\r\n        xAxis: [{\r\n            type: 'category',\r\n            data: xData,\r\n            gridIndex: 0,\r\n            axisLabel: {\r\n                rotate:25,\r\n                color: '#333',\r\n                fontSize:14\r\n            },\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: '#e7e7e7'\r\n                }\r\n            },\r\n            axisTick: {\r\n                lineStyle: {\r\n                    color: '#e7e7e7'\r\n                }\r\n            },\r\n            zlevel: 2\r\n        }],\r\n        yAxis: [{\r\n            type: 'value',\r\n            gridIndex: 0,\r\n            axisLabel: {\r\n                color: '#333',\r\n                fontSize:14\r\n            },\r\n            splitLine: {\r\n                lineStyle: {\r\n                    type: 'dashed'\r\n                }\r\n            },\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            },\r\n            axisTick: {\r\n                lineStyle: {\r\n                    color: '#ccc'\r\n                }\r\n            }\r\n        }],\r\n        series: [{\r\n            name:'第一组',\r\n            data: data1,\r\n            type: 'bar',\r\n            stack:'1',\r\n            label: {\r\n                show: false,\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: hexToRgba('#90BEFF', 1)\r\n                    }, {\r\n                        offset: 1,\r\n                        color: hexToRgba('#5EA1FF', 0.8)\r\n                    }]),\r\n                barBorderRadius: 0,\r\n                }\r\n            },\r\n            xAxisIndex: 0,\r\n            yAxisIndex: 0\r\n        },{\r\n            name:'第二组',\r\n            data: data2,\r\n            type: 'bar',\r\n            stack:'1',\r\n            label: {\r\n                show: false,\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: hexToRgba('#ffbdbd', 1)\r\n                    }, {\r\n                        offset: 1,\r\n                        color: hexToRgba('#ff9d69', 0.8)\r\n                    }]),\r\n                    barBorderRadius: 0,\r\n                },\r\n            },\r\n            xAxisIndex: 0,\r\n            yAxisIndex: 0\r\n        },{\r\n            name:'第三组',\r\n            data: data3,\r\n            type: 'bar',\r\n            stack:'1',\r\n            label: {\r\n                show: false,\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: hexToRgba('#FFABAC', 1)\r\n                    }, {\r\n                        offset: 1,\r\n                        color: hexToRgba('#FF6772', 0.8)\r\n                    }]),\r\n                    barBorderRadius: 0,\r\n                }\r\n                \r\n            },\r\n            xAxisIndex: 0,\r\n            yAxisIndex: 0\r\n        },{\r\n            name:'第四组',\r\n            data: data4,\r\n            type: 'bar',\r\n            stack:'1',\r\n            label: {\r\n                show: false,\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                        offset: 0,\r\n                        color: hexToRgba('#FFF0A0', 1)\r\n                    }, {\r\n                        offset: 1,\r\n                        color: hexToRgba('#FFD355', 0.8)\r\n                    }]),\r\n                    barBorderRadius: 0,\r\n                }\r\n                \r\n            },\r\n            xAxisIndex: 0,\r\n            yAxisIndex: 0\r\n        },{\r\n            name: \"一月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 6){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[0], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[0], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[0], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value1\r\n        },{\r\n            name: \"二月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 36){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[1], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[1], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[1], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value2\r\n        },{\r\n            name: \"三月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 65){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[2], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[2], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[2], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value3\r\n        },{\r\n            name: \"四月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 95){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[3], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[3], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[3], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value4\r\n        },{\r\n            name: \"五月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 125){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[4], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[4], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[4], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value5\r\n        },{\r\n            name: \"六月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 156){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[5], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[5], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[5], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value6\r\n        },{\r\n            name: \"七月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 186){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[6], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[6], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[6], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value7\r\n        },{\r\n            name: \"八月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 218){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[7], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[7], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[7], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value8\r\n        },{\r\n            name: \"九月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 248){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[8], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[8], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[8], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value9\r\n        },{\r\n            name: \"十月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 278){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[9], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[9], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[9], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value10\r\n        },{\r\n            name: \"十一月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 312){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[10], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[10], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[10], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value11\r\n        },{\r\n            name: \"十二月\",\r\n            type: \"line\",\r\n            showSymbol: true,\r\n            symbolSize:0.1,\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff',\r\n                }\r\n            },\r\n            label:{\r\n                show:true,\r\n                fontSize:24,\r\n                color:'red',\r\n                offset:[0,40],\r\n                formatter:(res)=>{\r\n                    let text = ''\r\n                    if(res.dataIndex == 342){\r\n                        text = res.seriesName\r\n                    }else{\r\n                        text = \"\"\r\n                    }\r\n                    return text\r\n                }\r\n            },\r\n            areaStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(\r\n                        0,\r\n                        0,\r\n                        0,\r\n                        1,\r\n                        [{\r\n                                offset: 0,\r\n                                color: hexToRgba(color[11], 0.3)\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: hexToRgba(color[11], 0.1)\r\n                            }\r\n                        ],\r\n                        false\r\n                    ),\r\n                    shadowColor: hexToRgba(color[11], 0.1),\r\n                    shadowBlur: 10\r\n                }\r\n            },\r\n            data: value12\r\n        }]\r\n};","html":"","externalScripts":"","updaterUID":"obd-o2Xu06T0HTK0KYiOdT3Y-cYj1WFgJBH","theme":"","layout":"","viewCount":0,"userName":"球***鞋","commentCount":0,"starCount":6,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x38AZ7NX_9.png?v=1624439415842","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","series-bar","series-line","tooltip"],"customTags":[],"updaterUserName":"球***鞋"}}