{"status":0,"data":{"cid":"x4rwZPDJck","authorUid":"obd-oEd_743uoklBwpuIJJ1I_hRb0NvMF4t","authorUserName":"天***华","title":"3D饼图","description":"","latestVersion":3,"alwaysLatest":0,"createTime":"2021-08-25T01:25:07.000Z","lastUpdateTime":"2021-08-25T01:29:48.000Z","auth":2,"uid":"obd-oEd_743uoklBwpuIJJ1I_hRb0NvMF4t","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"5.1.2","versionCreateTime":"2021-08-25T01:29:48.000Z","code":"/*************************\n\n    根据传入的\n    startRatio（浮点数）: 当前扇形起始比例，取值区间 [0, endRatio)\n    endRatio（浮点数）: 当前扇形结束比例，取值区间 (startRatio, 1]\n    isSelected（布尔值）:是否选中，效果参照二维饼图选中效果（单选）\n    isHovered（布尔值）: 是否放大，效果接近二维饼图高亮（放大）效果（未能实现阴影）\n    k（0~1之间的浮点数）：用于参数方程的一个参数，取值 0~1 之间，通过「内径/外径」的值换算而来。\n    \n    生成 3D 扇形环曲面\n\n*************************\n【 getPie3D 函数说明 】 :\n*************************\n    根据传入的\n    pieData（object）：饼图数据\n    internalDiameterRatio（0~1之间的浮点数）：内径/外径的值（默认值 1/2），当该值等于 0 时，为普通饼图\n    \n    生成模拟 3D 饼图的配置项 option\n    \n    备注：饼图数据格式示意如下\n    [{\n        name: '数据1',\n        value: 10\n    }, {\n        // 数据项名称\n        name: '数据2',\n        value : 56,\n        itemStyle:{\n            // 透明度\n            opacity: 0.5,\n            // 扇形颜色\n            color: 'green'\n        }\n    }]\n        \n*************************/\n\n// 生成扇形的曲面参数方程，用于 series-surface.parametricEquation\nfunction getParametricEquation(startRatio, endRatio, isSelected, isHovered, k,height) {\n\n    // 计算\n    let midRatio = (startRatio + endRatio) / 2;\n\n    let startRadian = startRatio * Math.PI * 2;\n    let endRadian = endRatio * Math.PI * 2;\n    let midRadian = midRatio * Math.PI * 2;\n\n    // 如果只有一个扇形，则不实现选中效果。\n    if (startRatio === 0 && endRatio === 1) {\n        isSelected = false;\n    }\n    \n    // 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\n    k = typeof k !== 'undefined' ? k : 1 / 3 ;\n    \n    // 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\n    let offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\n    let offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\n\n    // 计算高亮效果的放大比例（未高亮，则比例为 1）\n    let hoverRate = isHovered ? 1.05 : 1;\n\n    // 返回曲面参数方程\n    return {\n\n        u: {\n            min: -Math.PI,\n            max: Math.PI * 3,\n            step: Math.PI / 32\n        },\n        \n        v: {\n            min: 0,\n            max: Math.PI * 2,\n            step: Math.PI / 20\n        },\n        \n        x: function(u, v) {\n            if (u < startRadian) {\n                return offsetX + Math.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian ){\n                return offsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        \n        y: function(u, v) {\n            if (u < startRadian) {\n                return offsetY + Math.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian ){\n                return offsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        \n        z: function(u, v) {\n            if (u < - Math.PI * 0.5 ) {\n                return Math.sin(u);\n            }\n            if (u > Math.PI * 2.5 ){\n                return Math.sin(u);\n            }\n            return Math.sin(v) > 0 ? 1*height : -1;\n        }\n    };\n}\n\n// 生成模拟 3D 饼图的配置项\nfunction getPie3D(pieData, internalDiameterRatio) {\n\n    let series = [];\n    let sumValue = 0;\n    let startValue = 0;\n    let endValue = 0;\n    let legendData = [];\n    let k = typeof internalDiameterRatio !== 'undefined' ? (1 - internalDiameterRatio) / (1 + internalDiameterRatio): 1 / 3;\n\n    // 为每一个饼图数据，生成一个 series-surface 配置\n    for (let i = 0; i < pieData.length; i++) {\n\n        sumValue += pieData[i].value;\n\n        let seriesItem = {\n            name: typeof pieData[i].name === 'undefined' ? `series${i}` : pieData[i].name,\n            type: 'surface',\n           \n            parametric: true,\n            wireframe: {\n                show: false\n            },\n            pieData: pieData[i],\n            pieStatus: {\n                selected: false,\n                hovered: false,\n                k: k\n            },\n            labelLine:{\n                show:true\n            },\n            label:{\n                show:true\n            }\n        };\n\n        if (typeof pieData[i].itemStyle != 'undefined') {\n\n            let itemStyle = {};\n\n            typeof pieData[i].itemStyle.color != 'undefined' ? itemStyle.color = pieData[i].itemStyle.color : null;\n            typeof pieData[i].itemStyle.opacity != 'undefined' ? itemStyle.opacity = pieData[i].itemStyle.opacity : null;\n\n            seriesItem.itemStyle = itemStyle;\n        }\n        series.push(seriesItem);\n    }\n\n    // 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\n    // 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\n    for (let i = 0; i < series.length; i++) {\n        endValue = startValue + series[i].pieData.value;\n        console.log(series[i]);\n        series[i].pieData.startRatio = startValue / sumValue;\n        series[i].pieData.endRatio = endValue / sumValue;\n        series[i].parametricEquation = getParametricEquation(series[i].pieData.startRatio, series[i].pieData.endRatio, false, false, k,series[i].pieData.value);\n\n        startValue = endValue;\n\n        legendData.push(series[i].name);\n    }\n\n    \n\n    // 准备待返回的配置项，把准备好的 legendData、series 传入。\n    let option = {\n        tooltip: {\n            formatter: params => {\n                if (params.seriesName !== 'mouseoutSeries') {\n                    return `${params.seriesName}<br/><span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${params.color};\"></span>${option.series[params.seriesIndex].pieData.value}`;\n                }\n            }\n        },\n        labelLine:{\n            show:true,\n        },\n        label:{\n            show:true,\n        },\n        legend: {\n            data: legendData,\n            textStyle:{\n                color:'#fff',\n                fontSize:14\n            }\n        },\n        xAxis3D: {\n            min: -1,\n            max: 1\n        },\n        yAxis3D: {\n            min: -1,\n            max: 1\n        },\n        zAxis3D: {\n            min: -1,\n            max: 1\n        },\n        grid3D: {\n            show: false,\n            boxHeight: 20,\n            //top: '30%',\n            bottom: '50%',\n            environment: '#021041',\n            viewControl:{\n                distance:300,\n                alpha:25,\n                beta:130,\n            },\n            \n        },\n        series: series\n    };\n    return option;\n}\n\n// 传入数据生成 option\noption = getPie3D([{\n    name: '已消除',\n    value: 3,\n   \n}\n\n, {\n    name: '未消除',\n    value: 2,\n    itemStyle: {\n        // opacity: 0.5,\n        color:'rgba(209,126,23,.8)',\n    }\n},\n{\n    name: '消除',\n    value: 1,\n    itemStyle: {\n        // opacity: 0.5,\n        color:'green',\n    }\n},\n],0);\n\n\n","html":"","externalScripts":"https://cdn.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js","updaterUID":"obd-oEd_743uoklBwpuIJJ1I_hRb0NvMF4t","theme":"","layout":"","viewCount":0,"userName":"天***华","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x4rwZPDJck.png?v=1629854988562","isCustomThumbnail":0,"builtinTags":["category-work","grid3D","legend","series-surface","tooltip"],"customTags":[],"updaterUserName":"天***华"}}