{"status":0,"data":{"cid":"xBkqpohnEW","authorUid":"bd-2215764494","authorUserName":"p***g","title":"皮革材质","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2017-07-07T07:44:02.000Z","lastUpdateTime":"2017-07-07T07:44:02.000Z","auth":2,"uid":"bd-2215764494","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"3.6.2","versionCreateTime":"2017-07-07T08:31:59.000Z","code":"var TILING = [4, 2];\n\nvar heightImg = new Image();\nheightImg.onload = update;\nheightImg.src = '/asset/get/s/data-1499412414326-rJU6w22EW.jpg';\n\nfunction update() {\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var width = canvas.width = heightImg.width;\n    var height = canvas.height = heightImg.height;\n    ctx.drawImage(heightImg, 0, 0, width, height);\n    var imgData = ctx.getImageData(0, 0, width, height).data;\n\n    function getScale(u, v) {\n        u = (u / Math.PI * 0.5 + 0.5) * TILING[0];\n        v = v / Math.PI * TILING[1];\n\n        u = Math.floor((u - Math.floor(u)) * (width - 1));\n        v = Math.floor((1 - v + Math.floor(v)) * (height - 1));\n\n        var idx = v * width + u;\n        return 1 + imgData[idx * 4] / 255 / 20;\n    }\n\n    myChart.setOption({\n        xAxis3D: {\n            type: 'value',\n            min: -1.5,\n            max: 1.5\n        },\n        yAxis3D: {\n            type: 'value',\n            min: -1.5,\n            max: 1.5\n        },\n        zAxis3D: {\n            type: 'value',\n            min: -1.5,\n            max: 1.5\n        },\n        grid3D: {\n            show: false,\n\n            environment: 'none',\n\n            axisPointer: {\n                show: false\n            },\n            postEffect: {\n                enable: true,\n                screenSpaceAmbientOcclusion: {\n                    enable: true,\n                    radius: 10,\n                    intensity: 2,\n                    quality: 'high'\n                },\n                screenSpaceReflection: {\n                    enable: false  \n                },\n                depthOfField: {\n                    enable: false,\n                    focalRange: 10,\n                    fstop: 4\n                }\n            },\n            temporalSuperSampling: {\n                enable: true\n            },\n            light: {\n                main: {\n                    intensity: 2,\n                    shadow: true\n                },\n                ambient: {\n                    intensity: 0\n                },\n                ambientCubemap: {\n                    texture: '/asset/get/s/data-1491838644249-ry33I7YTe.hdr',\n                    exposure: 1,\n                    diffuseIntensity: 1,\n                    specularIntensity: 2\n                }\n            },\n            viewControl: {\n                distance: 80\n                // projection: 'orthographic'\n            }\n        },\n        series: [{\n            type: 'surface',\n            parametric: true,\n            shading: 'realistic',\n            silent: true,\n            wireframe: {\n                show: false\n            },\n            realisticMaterial: {\n                // detailTexture: 'asset/leather/leather_albedo.jpg',\n                roughness: '/asset/get/s/data-1499412420721-ryaTw3nNZ.jpg',\n                normalTexture: '/asset/get/s/data-1499412417253-HytpD3n4b.jpg',\n                textureTiling: TILING\n            },\n            itemStyle: {\n                color: '#300'\n            },\n            parametricEquation: {\n                u: {\n                    min: -Math.PI,\n                    max: Math.PI,\n                    step: Math.PI / 100\n                },\n                v: {\n                    min: 0.4,\n                    max: Math.PI - 0.4,\n                    step: Math.PI / 100\n                },\n                x: function (u, v) {\n                    return Math.sin(v) * Math.sin(u) * getScale(u, v);\n                },\n                y: function (u, v) {\n                    return Math.sin(v) * Math.cos(u) * getScale(u, v);\n                },\n                z: function (u, v) {\n                    return Math.cos(v) * getScale(u, v);\n                }\n            }\n        }]\n    });\n}","html":"","externalScripts":"http://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js","updaterUID":"bd-2215764494","theme":"dark","layout":"","viewCount":3623,"userName":"p***g","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xBkqpohnEW.png?v=1499413444602","isCustomThumbnail":1,"builtinTags":["category-work","grid3D","series-surface"],"customTags":["echarts-gl"],"updaterUserName":"p***g"}}