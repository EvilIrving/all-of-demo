{"status":0,"data":{"cid":"xUgQUDGGBi","authorUid":"obd-o-aSEAdBFmNgzJAn8sMH93q7S4ELLA9","authorUserName":"w***7","title":"正态分布图","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-11-26T06:32:50.000Z","lastUpdateTime":"2021-11-26T06:32:50.000Z","auth":1,"uid":"obd-o-aSEAdBFmNgzJAn8sMH93q7S4ELLA9","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-26T06:32:50.000Z","code":"//数据格式[{\"value\":\"1\"},{\"value\":\"2\"}......],\r\n//在我项目里这里是数据库的一个字段，对这个指标字段进行正太分析\r\nvar uploadedDataURL = \"/asset/get/s/data-1612318232940-5fG6JlsJh.json\";\r\n\r\n\r\n$.getJSON(uploadedDataURL, function(json) {\r\n\r\n    let seriesValuedata = json;\r\n    \r\n    let listData = [];\r\n    let xAxis = [];\r\n    seriesValuedata.forEach((item, index) => {\r\n        listData.push(item.value)\r\n    });\r\n\r\n    let objGroup = listData.reduce(function(obj, name) {\r\n        obj[name] = obj[name] ? ++obj[name] : 1;\r\n        return obj;\r\n    }, {});\r\n\r\n    let max = Math.max(...listData);\r\n    let min = Math.min(...listData);\r\n\r\n    //x轴最大最小前后范围\r\n    let dataRangeMinOP = 2;\r\n    let dataRangeMaXOP = 2.1;\r\n    //间距 ，X轴的步距 \r\n    let dataRangeOP = 0.1;\r\n    //小数点位数.这个要和数据精确到哪一位相匹配\r\n    let Xpiont = 1;\r\n\r\n    //处理x轴，把数据范围内的x轴求出来，并设置值轴没有的值为空，按顺序对应\r\n    for (let i = min - dataRangeMinOP; i <= max + dataRangeMaXOP; i += dataRangeOP) {\r\n        let str = i.toFixed(Xpiont).toString();\r\n        xAxis.push(str);\r\n        if (objGroup[str] == null) {\r\n            objGroup[str] = 0;\r\n        } \r\n    }\r\n    //结果不对，用下面这个 解决 0.0！=0，1.0！=1的问题\r\n   /* for (let i = min - dataRangeMinOP; i <= max + dataRangeMaXOP; i += dataRangeOP) {\r\n      let str = i.toFixed(Xpiont).toString();\r\n      xAxis.push(str);\r\n      if (objGroup[Number(str)] == null) {\r\n        objGroup[str] = 0;\r\n      }\r\n    }*/\r\n\r\n    let barYaxis = [];\r\n    Object.keys(objGroup).sort(function(a, b) {\r\n        return parseFloat(a) - parseFloat(b)\r\n    }).map(key => {\r\n        let num = Math.floor((objGroup[key] / listData.length * 100) * 100) / 100;\r\n        barYaxis.push(num)\r\n    })\r\n     \r\n    \r\n    function sum(array) {\r\n        let s = 0;\r\n        array.forEach(function(val, idx, arr) {\r\n            s += Number(val);\r\n        }, 0);\r\n        return s;\r\n    };\r\n\r\n    //正太曲线计算的基本数据和方法\r\n    let avg = 0;\r\n    let stdev = 0;\r\n    avg = sum(listData) / listData.length;\r\n\r\n    let sumXY = function(x, y) {\r\n        return Number(x) + Number(y);\r\n    };\r\n    let square = function(x) {\r\n        return Number(x) * Number(x);\r\n    };\r\n    let mean = listData.reduce(sumXY) / listData.length;\r\n    let deviations = listData.map(function(x) {\r\n        return x - mean;\r\n    });\r\n    \r\n    \r\n    stdev = Math.sqrt(deviations.map(square).reduce(sumXY) / (listData.length - 1));\r\n\r\n    //计算正太曲线\r\n    function NDjs(array) {\r\n        let NDarr = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let ND = (Math.sqrt(2 * Math.PI) * stdev) * Math.pow(Math.E, (-(Math.pow(array[i] - avg, 2) / (2 * Math.pow(stdev, 2)))));\r\n            NDarr.push(ND);\r\n        }\r\n        return NDarr\r\n    }\r\n    let lineYaxis = NDjs(xAxis)\r\n    \r\n    \r\n    //配置项，本身项目是可以动态在页面配置修改这些属性的，贴到这里用了默认值\r\n    let opacityOption = 'off';\r\n    let opacity = 0.5;\r\n    if (opacityOption == 'off') {\r\n        opacity = 0;\r\n    }\r\n    let endPositionOption = 'all';\r\n    let endPositionPercentum = '';\r\n    let endPosition;\r\n    if (endPositionOption == 'all') {\r\n        endPosition = 100;\r\n    } else if (endPositionOption == 'third') {\r\n        endPosition = 29;\r\n    } else {\r\n        endPosition = endPositionPercentum;\r\n    }\r\n\r\n    let persents = 'on';\r\n    let format1;\r\n    let format2;\r\n    if (persents == 'on') {\r\n        format1 = '{value} %'\r\n        format2 = '{c} %'\r\n    }\r\n\r\n    let data = [];\r\n    let lineDataSet = {\r\n        type: 'line',\r\n        smooth: true,\r\n        yAxisIndex: 1,\r\n        areaStyle: {\r\n            opacity: opacity\r\n        },\r\n        data: lineYaxis,\r\n        name: '正太分布曲线',\r\n        itemStyle: {\r\n            normal: {\r\n                label: {\r\n                    formatter: format2,\r\n                    show: false, //开启显示\r\n                    position: 'top', //在上方显示\r\n                    textStyle: { //数值样式\r\n                        fontSize: 16\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let barDataSet = {\r\n        type: 'bar',\r\n        smooth: true,\r\n        yAxisIndex: 0,\r\n        areaStyle: {\r\n            opacity: opacity\r\n        },\r\n        data: barYaxis,\r\n        name: '实际分布',\r\n        itemStyle: {\r\n            normal: {\r\n                label: {\r\n                    formatter: format2,\r\n                    show: false, //开启显示\r\n                    position: 'top', //在上方显示\r\n                    textStyle: { //数值样式\r\n                        fontSize: 16\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    data.push(lineDataSet, barDataSet);\r\n\r\n    option = {\r\n        type: 'scroll',\r\n        title: {\r\n            text: ''\r\n        },\r\n        dataZoom: [{\r\n                type: 'inside',\r\n                show: false,\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: endPosition,\r\n                borderColor: '#F5A9D0',\r\n                backgroundColor: '#F5A9D0'\r\n            },\r\n            {\r\n                show: false,\r\n                type: 'slider',\r\n                xAxisIndex: [0],\r\n                start: 0,\r\n                end: endPosition\r\n            }\r\n        ],\r\n        tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n                type: \"shadow\"\r\n            }\r\n        },\r\n        legend: {\r\n            data: ['正太分布曲线', '实际分布']\r\n        },\r\n        xAxis: {\r\n            boundaryGap: false,\r\n            type: 'category',\r\n            data: xAxis\r\n        },\r\n        yAxis: [{\r\n            type: 'value',\r\n            axisLabel: {\r\n                formatter: format1\r\n            }\r\n        }, {\r\n            show: false,\r\n            type: 'value',\r\n            axisLabel: {\r\n                formatter: '{value} %'\r\n            }\r\n        }],\r\n        grid: [{\r\n            x: '5%',\r\n            y: '10%',\r\n            width: '92%',\r\n            height: '75%'\r\n        }],\r\n        series: data\r\n    };\r\n    myChart.setOption(option);\r\n});","html":"","externalScripts":"","updaterUID":"obd-o-aSEAdBFmNgzJAn8sMH93q7S4ELLA9","theme":"","layout":"","viewCount":0,"userName":"w***7","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xUgQUDGGBi.png?v=1637908370328","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-bar","series-line","title","tooltip"],"customTags":[],"updaterUserName":"w***7"}}