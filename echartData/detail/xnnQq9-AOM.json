{"status":0,"data":{"cid":"xnnQq9-AOM","authorUid":"bd-1965603209","authorUserName":"L***d","title":"热词气泡图（范围内随机生成不重叠）","description":"可以在矩形范围内随机生成不重叠的圆，且限制不同圆之间的大小差别。","latestVersion":3,"alwaysLatest":0,"createTime":"2021-08-25T04:53:11.000Z","lastUpdateTime":"2021-08-25T07:50:15.000Z","auth":2,"uid":"bd-1965603209","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"5.1.2","versionCreateTime":"2021-08-25T07:50:15.000Z","code":"let resultData = {\n  status: 'success',\n  data: [\n    {\n      name: '徐平',\n      value: 4,\n    },\n    {\n      name: '常伟',\n      value: 894,\n    },\n    {\n      name: '魏杰',\n      value: 33,\n    },\n    {\n      name: '丁秀兰',\n      value: 333,\n    },\n    {\n      name: '邓强',\n      value: 32,\n    },\n    {\n      name: '萧杰',\n      value: 785,\n    },\n    {\n      name: '叶磊',\n      value: 235,\n    },\n    {\n      name: '袁涛',\n      value: 785,\n    },\n    {\n      name: '李芳',\n      value: 333,\n    },\n    {\n      name: '赖军',\n      value: 61,\n    },\n    {\n      name: '魏秀英',\n      value: 337,\n    },\n    {\n      name: '陈勇',\n      value: 235,\n    },\n    {\n      name: '薛芳',\n      value: 4,\n    },\n    {\n      name: '龚桂英',\n      value: 337,\n    },\n    {\n      name: '唐强',\n      value: 894,\n    },\n    {\n      name: '常军',\n      value: 337,\n    },\n    {\n      name: '易霞',\n      value: 235,\n    },\n    {\n      name: '侯磊',\n      value: 894,\n    },\n    {\n      name: '龚丽',\n      value: 61,\n    },\n    {\n      name: '范静',\n      value: 785,\n    },\n    {\n      name: '顾静',\n      value: 894,\n    },\n    {\n      name: '马艳',\n      value: 894,\n    },\n    {\n      name: '杜勇',\n      value: 337,\n    },\n    {\n      name: '夏涛',\n      value: 61,\n    },\n    {\n      name: '孟娟',\n      value: 337,\n    },\n  ],\n  msg: 'exercitation in',\n};\n\n//  颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\nlet colorList = [\n  new echarts.graphic.LinearGradient(0, 0, 1, 1, [\n    {\n      offset: 0,\n      color: 'rgba(59, 181, 182, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(66, 227, 151, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(1, 0, 0, 1, [\n    {\n      offset: 0,\n      color: 'rgba(254, 220, 69, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(251, 112, 153, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(0, 1, 1, 0, [\n    {\n      offset: 0,\n      color: 'rgba(0, 138, 255, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(0, 216, 255, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(0, 0, 1, 1, [\n    {\n      offset: 0,\n      color: 'rgba(246, 191, 159, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(219, 138, 222, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(1, 0, 0, 1, [\n    {\n      offset: 0,\n      color: 'rgba(247, 138, 158, 1)',\n    },\n    {\n      offset: 0.5,\n      color: 'rgba(245, 111, 135, 0.5)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(254, 152, 139, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(0, 1, 1, 0, [\n    {\n      offset: 0,\n      color: 'rgba(144, 125, 228, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(33, 223, 209, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(0, 0, 1, 1, [\n    {\n      offset: 0,\n      color: 'rgba(32, 156, 255, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(104, 224, 207, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(1, 0, 0, 1, [\n    {\n      offset: 0,\n      color: 'rgba(94, 209, 225, 1)',\n    },\n    {\n      offset: 0.5,\n      color: 'rgba(191, 194, 254, 0.5)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(232, 189, 219, 0.2)',\n    },\n  ]),\n  new echarts.graphic.LinearGradient(0, 1, 1, 0, [\n    {\n      offset: 0,\n      color: 'rgba(238, 114, 125, 1)',\n    },\n    {\n      offset: 1,\n      color: 'rgba(253, 162, 63, 0.2)',\n    },\n  ]),\n];\nlet colorListLen = colorList.length;\n\n// 生成随机坐标的不重叠圆\nfunction drawCircles(maxLength, radius, max_x, max_y) {\n  let circles = [];\n  let anti_crash_count = 0;\n  while (circles.length < maxLength) {\n    let circle = {\n      x: getRandomNumber(radius, max_x - radius),\n      y: getRandomNumber(radius, max_y - radius),\n      radius,\n    };\n\n    let isOverlapping = false;\n\n    for (let j = 0; j < circles.length; j++) {\n      let previous_circle = circles[j];\n      let distance = Math.hypot(circle.x - previous_circle.x, circle.y - previous_circle.y);\n\n      if (distance < circle.radius + previous_circle.radius) {\n        isOverlapping = true;\n        break;\n      }\n    }\n\n    if (!isOverlapping) {\n      circles.push(circle);\n    }\n    anti_crash_count++;\n    if (anti_crash_count > 10000) {\n      break;\n    }\n  }\n  return circles;\n}\n\n// 生成随机数坐标\nfunction getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n// 数据数组\nlet countList = resultData.data;\nvar showData = [];\nvar sum = 0,\n  max = 0;\ncountList.forEach((e, i) => {\n  e.id = i;\n  e.label = {\n    normal: {\n      show: true,\n      color: '#fff',\n    },\n  };\n  e.itemStyle = {\n    normal: {\n      color: colorList[Math.floor(Math.random() * colorListLen)],\n      shadowBlur: 16,\n      shadowOffsetY: 16,\n      shadowColor: 'rgba(0,0,0,0.1)',\n    },\n  };\n  sum += e.value;\n  if (e.value >= max) max = e.value;\n});\n// 放大规则\nvar number = Math.round(max * 0.5);\nlet graphCanvas = document.getElementById('chart-panel').getBoundingClientRect();\nlet randomCircleArr = drawCircles(\n  countList.length,\n  ((max + number) / max) * 40,\n  graphCanvas.width,\n  graphCanvas.height\n);\ncountList.forEach((e, i) => {\n  if (randomCircleArr[i]) {\n    e.x = randomCircleArr[i].x;\n    e.y = randomCircleArr[i].y;\n    e.symbolSize = ((e.value + number) / max) * 70;\n    e.label.normal.fontSize = ((e.value + number) / max) * 15;\n  } else {\n    e.symbolSize = 0;\n    e.x = 0;\n    e.y = 0;\n  }\n});\noption = {\n  title: {},\n  tooltip: {\n    trigger: 'item',\n    formatter: function (params) {\n      if (params['data']['name'] !== '') {\n        return '<b>' + params['data']['name'] + '</b>：<b>' + params['data']['value'] + ' </b>';\n      }\n    },\n  },\n  series: [\n    {\n      name: '词条分布',\n      type: 'graph',\n      layout: 'none',\n      label: {\n        show: true,\n        normal: {\n          color: '#fff',\n        },\n      },\n      data: countList,\n    },\n  ],\n};\n","html":"","externalScripts":"","updaterUID":"bd-1965603209","theme":"","layout":"","viewCount":0,"userName":"L***d","commentCount":0,"starCount":15,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xnnQq9-AOM.png?v=1629877815718","isCustomThumbnail":0,"builtinTags":["category-work","series-graph","title","tooltip"],"customTags":[],"updaterUserName":"L***d"}}