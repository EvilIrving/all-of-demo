{"status":0,"data":{"cid":"xaHtV3kGL","authorUid":"bd-3304013625","authorUserName":"待***生","title":"流程图","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2019-11-27T02:05:08.000Z","lastUpdateTime":"2019-11-27T02:05:08.000Z","auth":2,"uid":"bd-3304013625","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.4.0","versionCreateTime":"2019-11-27T02:05:08.000Z","code":"//浏览器resize重画\r\nfunction resizeChart() {\r\n    var w = $('body').width();\r\n    var h = $('body').height();\r\n    myChart.resize({\r\n        width: w,\r\n        height: h\r\n    });\r\n    option.series = getSeries();\r\n    myChart.setOption(option, true);\r\n}\r\n\r\nvar data = [{\r\n    name: '节点1',\r\n    code: 'node1',\r\n    value: {\r\n        interfaceNum: 0,\r\n        kpiNum: 0,\r\n        alarmNum: 0\r\n    },\r\n    x: 0.1,\r\n    y: 0.65\r\n}, {\r\n    name: '节点2',\r\n    code: 'node2',\r\n    value: {\r\n        interfaceNum: 0,\r\n        kpiNum: 0,\r\n        alarmNum: 0\r\n    },\r\n    x: 0.3,\r\n    y: 0.8\r\n}, {\r\n    name: '节点3',\r\n    code: 'node3',\r\n    value: {\r\n        interfaceNum: 0,\r\n        kpiNum: 0,\r\n        alarmNum: 0\r\n    },\r\n    x: 0.3,\r\n    y: 0.5\r\n}, {\r\n    name: '节点4',\r\n    code: 'node4',\r\n    value: {\r\n        interfaceNum: 0,\r\n        kpiNum: 0,\r\n        alarmNum: 0\r\n    },\r\n    x: 0.5,\r\n    y: 0.5\r\n}];\r\n\r\nvar links = [{\r\n    source: 'node1',\r\n    target: 'node2',\r\n}, {\r\n    source: 'node1',\r\n    target: 'node3',\r\n}, {\r\n    source: 'node3',\r\n    target: 'node4',\r\n}];\r\n\r\nvar line = 3; //行：把画布上画几行信息框\r\nvar column = 4; //列：把画布上画几列信息框\r\n\r\nfunction getScatterData() {\r\n    var scatterData = [];\r\n\r\n    //画布宽高\r\n    var c_w = myChart.getWidth();\r\n    var c_h = myChart.getHeight();\r\n    //计算信息框的宽高\r\n    var w = c_w / (column * 2);\r\n    var h = c_h / (line * 2);\r\n    for (var i = 0; i < data.length; i++) {\r\n        //把消息框分为两部分：标题和内容,内容高度为标题高度的3倍，echart是以中心画图，所以要分别计算标题和内容框的中心点位置\r\n        scatterData.push({\r\n            name: data[i].name,\r\n            value: [data[i].x, (data[i].y * c_h + (3 / 8 * h)) / c_h],\r\n            type: 'title',\r\n            w: w,\r\n            h: h / 4,\r\n            label: {\r\n                normal: {\r\n                    textStyle: {\r\n                        color: '#fff',\r\n                        fontWeight: 'bold',\r\n                        fontSize: 15\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            code: data[i].code,\r\n            value: [data[i].x, (data[i].y * c_h + (1 / 4 * h) - (3 / 4 * h) / 2) / c_h],\r\n            type: 'body',\r\n            w: w,\r\n            h: 3 / 4 * h,\r\n            info: data[i].value,\r\n            label: {\r\n                normal: {\r\n                    textStyle: {\r\n                        color: '#000'\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return scatterData;\r\n}\r\n\r\nfunction getLinesData() {\r\n    var linesData = [];\r\n    var map = {};\r\n    for (var i = 0; i < data.length; i++) {\r\n        map[data[i].code] = data[i];\r\n    }\r\n\r\n    for (var i = 0; i < links.length; i++) {\r\n        var source = map[links[i].source];\r\n        var target = map[links[i].target];\r\n\r\n        //画布宽高\r\n        var c_w = myChart.getWidth();\r\n        var c_h = myChart.getHeight();\r\n        //计算信息框的宽高\r\n        var w = c_w / (column * 2);\r\n        var h = c_h / (line * 2);\r\n        //计算信息框的四个边中点的位置\r\n        source.top = {\r\n            x: source.x,\r\n            y: (source.y * c_h + (1 / 2 * h)) / c_h\r\n        };\r\n        source.right = {\r\n            x: (source.x * c_w + (1 / 2 * w)) / c_w,\r\n            y: source.y\r\n        };\r\n        source.bottom = {\r\n            x: source.x,\r\n            y: (source.y * c_h - (1 / 2 * h)) / c_h\r\n        };\r\n        source.left = {\r\n            x: (source.x * c_w - (1 / 2 * w)) / c_w,\r\n            y: source.y\r\n        };\r\n\r\n        target.top = {\r\n            x: target.x,\r\n            y: (target.y * c_h + (1 / 2 * h)) / c_h\r\n        };\r\n        target.right = {\r\n            x: (target.x * c_w + (1 / 2 * w)) / c_w,\r\n            y: target.y\r\n        };\r\n        target.bottom = {\r\n            x: target.x,\r\n            y: (target.y * c_h - (1 / 2 * h)) / c_h\r\n        };\r\n        target.left = {\r\n            x: (target.x * c_w - (1 / 2 * w)) / c_w,\r\n            y: target.y\r\n        };\r\n\r\n        //s->t：s左：t右\r\n        if (source.right.x < target.left.x) {\r\n            linesData.push(getLine([\r\n                [source.right.x, source.right.y],\r\n                [target.left.x, target.left.y]\r\n            ]));\r\n        }\r\n        //t<-s：s右：t左\r\n        else if (source.left.x > target.right.x) {\r\n            linesData.push(getLine([\r\n                [source.left.x, source.left.y],\r\n                [target.right.x, target.right.y]\r\n            ]));\r\n        }\r\n        //s\r\n        //|\r\n        //t\r\n        else if (source.bottom.y > target.top.y) {\r\n            linesData.push(getLine([\r\n                [source.bottom.x, source.bottom.y],\r\n                [target.top.x, target.top.y]\r\n            ]));\r\n        }\r\n        //t\r\n        //|\r\n        //s\r\n        else if (source.top.y < target.bottom.y) {\r\n            linesData.push(getLine([\r\n                [source.top.x, source.top.y],\r\n                [target.bottom.x, target.bottom.y]\r\n            ]));\r\n        }\r\n    }\r\n    return linesData;\r\n}\r\n\r\nfunction getLine(coords) {\r\n    return {\r\n        name: '',\r\n        type: 'lines',\r\n        coordinateSystem: 'cartesian2d',\r\n        symbol: ['none', 'arrow'],\r\n        symbolSize: 10,\r\n        zlevel: 4,\r\n        effect: {\r\n            show: true,\r\n            period: 6,\r\n            trailLength: 0.7,\r\n            color: '#7480BC',\r\n            symbolSize: 3\r\n        },\r\n        lineStyle: {\r\n            normal: {\r\n                color: '#9EADD6',\r\n                width: 1,\r\n                curveness: 0\r\n            }\r\n        },\r\n        data: [{\r\n            coords: coords\r\n        }]\r\n    };\r\n}\r\n\r\nfunction getSeries() {\r\n    var series = [];\r\n    series.push({\r\n        type: 'scatter',\r\n        symbol: 'rect',\r\n        zlevel: 2,\r\n        silent: true,\r\n        symbolSize: function(value, params) {\r\n            return [params.data.w, params.data.h];\r\n        },\r\n        itemStyle: {\r\n            normal: {\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(120, 36, 50, 0.5)',\r\n                shadowOffsetY: 5,\r\n                color: function(params) {\r\n                    if (params.data.type == 'title') {\r\n                        return '#007CB8';\r\n                    } else {\r\n                        return '#6DC6F2';\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        label: {\r\n            normal: {\r\n                show: true,\r\n                position: 'inside',\r\n                formatter: function(params) {\r\n                    if (params.data.type == 'title') {\r\n                        return params.data.name;\r\n                    } else {\r\n                        return '核心接口数量：' + params.data.info.interfaceNum +\r\n                            '\\n监测指标数量：' + params.data.info.kpiNum +\r\n                            '\\n告警数量' + params.data.info.alarmNum;\r\n                    }\r\n\r\n                },\r\n                textStyle: {\r\n                    color: '#000'\r\n                }\r\n            }\r\n        },\r\n        data: getScatterData(),\r\n    });\r\n    return series.concat(getLinesData());\r\n}\r\noption = null;\r\noption = {\r\n    backgroundColor: '#F3F3F3',\r\n    title: [{\r\n        text: \"流程图\",\r\n        x: '5%',\r\n        y: 0,\r\n        textStyle: {\r\n            color: '#333',\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fontFamily: 'sans-serif',\r\n            fontSize: 14,\r\n        }\r\n    }],\r\n    tooltip: {\r\n\r\n        /*trigger: 'axis',\r\n        axisPointer: {\r\n            show: true,\r\n            type: 'cross'\r\n        }*/\r\n    },\r\n    grid: {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisLabel: {\r\n            show: false\r\n        },\r\n        max: 1,\r\n        min: 0\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisLabel: {\r\n            show: false\r\n        },\r\n        max: 1,\r\n        min: 0\r\n    },\r\n    series: getSeries()\r\n};","html":"","externalScripts":"","updaterUID":"bd-3304013625","theme":"","layout":"","viewCount":347,"userName":"待***生","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xaHtV3kGL.png?v=1574820308999","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-lines","series-scatter","title","tooltip"],"customTags":[],"updaterUserName":"待***生"}}