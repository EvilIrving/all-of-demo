{"status":0,"data":{"cid":"xqxrceDS9","authorUid":"bd-696783921","authorUserName":"n***人","title":"京津冀空气质量","description":"数据来源：中国环境监测总站","latestVersion":13,"alwaysLatest":1,"createTime":"2019-10-28T09:55:59.000Z","lastUpdateTime":"2021-11-08T10:28:57.000Z","auth":2,"uid":"bd-696783921","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":13,"parentVersion":12,"echartsVersion":"4.9.0","versionCreateTime":"2021-11-08T10:28:57.000Z","code":"function getColor(type) {\n    var color;\n    if (isNaN(type)) {\n        switch (type) {\n            case '暂无数据':\n                color = 'gray';\n                break;\n            case '优':\n                color = '#43ce17';\n                break;\n            case '良':\n                color = '#efdc31';\n                break;\n            case '轻度污染':\n                color = '#fa0';\n                break;\n            case '中度污染':\n                color = '#ff401a';\n                break;\n            case '重度污染':\n                color = '#d20040';\n                break;\n            case '严重污染':\n                color = '#9c0a4e';\n                break;\n            case 'AQI':\n                color = 'hsl(40,100%,50%)';\n                break;\n            case '臭氧':\n                color = 'hsl(80,100%,50%)';\n                break;\n            case '二氧化硫':\n                color = 'hsl(120,100%,50%)';\n                break;\n            case 'NO2':\n                color = 'hsl(160,100%,50%)';\n                break;\n            case '一氧化碳':\n                color = 'hsl(200,100%,50%)';\n                break;\n            case '细颗粒物':\n                color = 'hsl(240,100%,50%)';\n                break;\n            case '可吸入颗粒物':\n                color = 'hsl(280,100%,50%)';\n                break;\n            default:\n                break;\n        }\n    } else {\n        function getAQITYPE(aqi) {\n            if (aqi <= 50) {\n                return '优';\n            } else if (aqi <= 100) {\n                return '良';\n            } else if (aqi <= 150) {\n                return '轻度污染';\n            } else if (aqi <= 200) {\n                return '中度污染';\n            } else if (aqi <= 300) {\n                return '重度污染';\n            } else {\n                return '严重污染';\n            }\n        }\n        color = getColor(getAQITYPE(type));\n    }\n    return color;\n}\n\nlet backgroundColor, //'#1f1a1a',\n    textColor = 'gray',\n    fontFamily = '仿宋',\n    $body = $(myChart.getDom());\n$body.css({\n    'font-family': fontFamily\n})\noption = {\n    title: {\n        subtext: '数据来源：中国环境监测总站',\n        sublink: 'http://123.127.175.45:8082/',\n        left: 10,\n        bottom: '400',\n        textStyle: {\n            color: textColor,\n        }\n    },\n    grid: {\n        show: false,\n        containLabel: true,\n        zlevel: '2',\n        left: '10',\n        bottom: '180',\n        width: '30%',\n        height: '30%',\n        borderWidth: 0\n    },\n    xAxis: {\n        type: 'value',\n        splitLine: {\n            show: false\n        },\n        show: false\n    },\n    bmap: {\n        roam: true,\n        center: [116.39825, 40.045975]\n    },\n    visualMap: [{\n        seriesIndex: 0,\n        backgroundColor: 'whitesmoke',\n        bottom: 2,\n        left: 2,\n        borderRadius: 0,\n        itemWidth: 38,\n        itemGap: 4,\n        padding: 5,\n        inverse: true,\n        pieces: [{\n                value: 'NaN',\n                label: '暂无',\n                color: getColor('暂无'),\n            }, {\n                min: 0,\n                max: 50,\n                label: '优',\n                color: getColor('优')\n            },\n            {\n                min: 51,\n                max: 100,\n                label: '良',\n                color: getColor('良')\n            }, {\n                min: 101,\n                max: 150,\n                label: '轻度',\n                color: getColor('轻度污染')\n            }, {\n                min: 151,\n                max: 200,\n                label: '中度',\n                color: getColor('中度污染')\n            }, {\n                min: 201,\n                max: 300,\n                label: '重度',\n                color: getColor('重度污染')\n            }, {\n                min: 301,\n                label: '严重',\n                color: getColor('严重污染')\n            },\n\n        ],\n        textStyle: {\n            color: 'black'\n        }\n    }],\n    tooltip: {\n        trigger: 'item',\n        confine: true,\n        enterable: true,\n        textStyle: {\n            fontFamily: fontFamily\n        }\n    },\n    series: [{\n        type: 'effectScatter',\n        coordinateSystem: 'bmap',\n        symbol: 'rect',\n        symbolSize: function(a, p) {\n            var size = [12 * (p.name.length), 25];\n            return size;\n        },\n        showEffectOn: 'render',\n        rippleEffect: {\n            brushType: 'stroke'\n        },\n        tooltip: {\n            formatter: function(params) {\n                const data = params.data.data;\n                var $ul = $('<ul><li><b>' + params.name + '</b></li></ul>');\n                $ul.css({\n                    'font-size': 'small',\n                    'border-radius': '5px',\n                    'list-style': 'none',\n                    padding: '10px',\n                    'box-shadow': '0 1px 4px #ddd',\n                    //'background-color': 'rgba(0,0,0,.21)',\n                    color: params.color\n                });\n                $ul.children().first().css({\n                    'font-size': 'large',\n                    'border-bottom': '1px double',\n                });\n                \n                let option = {\n                    title: {\n                        text: data.name\n                    },\n                    grid: {\n                        show: true\n                    },\n                    yAxis: {\n                        type: 'category',\n                        axisLabel: {\n                            rotate: -45,\n                            textStyle: {\n                                color: 'white'\n                            },\n                            show: false,\n                        },\n                        data: [],\n                        show: false,\n                        name: data.name,\n                        nameLocation: 'end',\n                        nameTextStyle: {\n                            color: 'white'\n                        },\n                    },\n                    series: [{}, {\n                        zlevel: '2',\n                        type: 'bar',\n                        gridIndex: 0,\n                        label: {\n                            normal: {\n                                show: true,\n                                position: 'insideLeft',\n                                formatter: '{b}:{c}',\n                                fontFamily: fontFamily,\n                                fontWeight: 'bold'\n                            }\n                        },\n                        data: []\n                    }]\n                };\n\n                $ul.children().first().find('b').css({\n                    'color': 'whitesmoke',\n                    'text-shadow': '0 1px 2px black'\n                })\n                if (data.aqi) {\n                    $ul.children().first().append('<b style=\"font-size: xx-large;float: right;\">' + data.aqi + '</b>');\n                    option.yAxis.data.push('AQI');\n                    option.series[1].data.push({\n                        value: data.aqi,\n                        itemStyle: {\n                            color: getColor(data.aqi)\n                        }\n                    });\n                }\n                if (data.pm2_5) {\n                    $('<li><b>细颗粒物：</b>' + data.pm2_5 + '<span>μg/m<sup>3</sup></span></li>').appendTo($ul);\n                    option.yAxis.data.push('细颗粒物');\n                    option.series[1].data.push({\n                        value: data.pm2_5,\n                        itemStyle: {\n                            color: getColor('细颗粒物')\n                        }\n                    });\n                }\n                if (data.pm10) {\n                    $('<li><b>可吸入颗粒物：</b>' + data.pm10 + '<span>μg/m<sup>3</sup></span></li>').appendTo($ul);\n                    option.yAxis.data.push('可吸入颗粒物');\n                    option.series[1].data.push({\n                        value: data.pm10,\n                        itemStyle: {\n                            color: getColor('可吸入颗粒物')\n                        }\n                    });\n\n                }\n                if (data.o3) {\n                    $('<li><b>臭氧：</b>' + data.o3 + '<span>μg/m<sup>3</sup></span></li>').appendTo($ul);\n\n                    option.yAxis.data.push('臭氧');\n                    option.series[1].data.push({\n                        value: data.o3,\n                        itemStyle: {\n                            color: getColor('臭氧')\n                        }\n                    });\n                }\n                if (data.co) {\n                    $('<li><b>一氧化碳：</b>' + data.co + '<span>mg/m<sup>3</sup></span></li>').appendTo($ul);\n                    option.yAxis.data.push('一氧化碳');\n                    option.series[1].data.push({\n                        value: data.co,\n                        itemStyle: {\n                            color: getColor('一氧化碳')\n                        }\n                    });\n                }\n                if (data.so2) {\n                    $('<li><b>二氧化硫：</b>' + data.so2 + '<span>μg/m<sup>3</sup></span></li>').appendTo($ul);\n                    option.yAxis.data.push('二氧化硫');\n                    option.series[1].data.push({\n                        value: data.so2,\n                        itemStyle: {\n                            color: getColor('二氧化硫')\n                        }\n                    });\n                }\n                /*if (data.pubtime) {\n                    $('<li><b>监测时间：</b>' + new Date(data.pubtime).toLocaleString() + '</li>').appendTo($ul);\n                }*/\n                $ul.children('li').find('span').css('font-size', 'xx-small');\n                myChart.setOption(option);\n                return $ul.prop('outerHTML');\n            }\n        },\n        hoverAnimation: true,\n        label: {\n            normal: {\n                formatter: '{b}',\n                //position: 'right',\n                show: true,\n                borderColor: '#ddd',\n                borderWidth: 1,\n                fontFamily: fontFamily,\n                fontWeight: 'bold',\n                fontSize: 13,\n                color: 'whitesmoke',\n                padding: 4\n            }\n        },\n        itemStyle: {\n            normal: {\n                shadowBlur: 10,\n                shadowColor: '#333'\n            }\n        }\n    }]\n\n\n}\n\nsetTimeout(function() {\n    const data = [{\n        \"name\": \"张家口市\",\n        \"o3\": 61,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"40.812435\",\n        \"pm2_5\": 10,\n        \"so2\": 6,\n        \"aqi\": 23,\n        \"pm10\": 23,\n        \"city_code\": \"131200\",\n        \"co\": 0.2,\n        \"longitude\": \"114.89305\"\n    }, {\n        \"name\": \"秦皇岛市\",\n        \"o3\": 55,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"39.9366\",\n        \"pm2_5\": 15,\n        \"so2\": 10,\n        \"aqi\": 28,\n        \"pm10\": 28,\n        \"city_code\": \"130300\",\n        \"co\": 0.8,\n        \"longitude\": \"119.60482\"\n    }, {\n        \"name\": \"承德市\",\n        \"o3\": 58,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"40.96416\",\n        \"pm2_5\": 7,\n        \"so2\": 6,\n        \"aqi\": 31,\n        \"pm10\": 31,\n        \"city_code\": \"130800\",\n        \"co\": 0.3,\n        \"longitude\": \"117.92774\"\n    }, {\n        \"name\": \"北京市\",\n        \"o3\": 53,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"40.045975\",\n        \"pm2_5\": 9,\n        \"so2\": 3,\n        \"aqi\": 32,\n        \"pm10\": 32,\n        \"city_code\": \"110000\",\n        \"co\": 0.3,\n        \"longitude\": \"116.39825\"\n    }, {\n        \"name\": \"石家庄市\",\n        \"o3\": 57,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"38.03179861125\",\n        \"pm2_5\": 15,\n        \"so2\": 12,\n        \"aqi\": 34,\n        \"pm10\": 34,\n        \"city_code\": \"130100\",\n        \"co\": 0.7,\n        \"longitude\": \"114.4970652875\"\n    }, {\n        \"name\": \"唐山市\",\n        \"o3\": 55,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"39.6449533333333\",\n        \"pm2_5\": 19,\n        \"so2\": 8,\n        \"aqi\": 36,\n        \"pm10\": 36,\n        \"city_code\": \"130200\",\n        \"co\": 0.6,\n        \"longitude\": \"118.182916666667\"\n    }, {\n        \"name\": \"廊坊市\",\n        \"o3\": 58,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"39.54584\",\n        \"pm2_5\": 12,\n        \"so2\": 4,\n        \"aqi\": 40,\n        \"pm10\": 40,\n        \"city_code\": \"131000\",\n        \"co\": 0.5,\n        \"longitude\": \"116.72406\"\n    }, {\n        \"name\": \"沧州市\",\n        \"o3\": 65,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"38.3157666666667\",\n        \"pm2_5\": 16,\n        \"so2\": 12,\n        \"aqi\": 45,\n        \"pm10\": 45,\n        \"city_code\": \"130900\",\n        \"co\": 0.5,\n        \"longitude\": \"116.871566666667\"\n    }, {\n        \"name\": \"天津市\",\n        \"o3\": 51,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"39.0985566666667\",\n        \"pm2_5\": 8,\n        \"so2\": 6,\n        \"aqi\": 51,\n        \"pm10\": 52,\n        \"city_code\": \"120000\",\n        \"co\": 0.4,\n        \"longitude\": \"117.319033333333\"\n    }, {\n        \"name\": \"保定市\",\n        \"o3\": 54,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"38.8762666666667\",\n        \"pm2_5\": 24,\n        \"so2\": 18,\n        \"aqi\": 52,\n        \"pm10\": 53,\n        \"city_code\": \"130600\",\n        \"co\": 0.6,\n        \"longitude\": \"115.4852\"\n    }, {\n        \"name\": \"衡水市\",\n        \"o3\": 55,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"37.74335\",\n        \"pm2_5\": 28,\n        \"so2\": 12,\n        \"aqi\": 54,\n        \"pm10\": 57,\n        \"city_code\": \"131100\",\n        \"co\": 0.6,\n        \"longitude\": \"115.6743\"\n    }, {\n        \"name\": \"邢台市\",\n        \"o3\": 52,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"37.0771\",\n        \"pm2_5\": 31,\n        \"so2\": 14,\n        \"aqi\": 54,\n        \"pm10\": 58,\n        \"city_code\": \"130500\",\n        \"co\": 0.5,\n        \"longitude\": \"114.506675\"\n    }, {\n        \"name\": \"邯郸市\",\n        \"o3\": 49,\n        \"pubtime\": \"2018-12-28 14:00:00\",\n        \"latitude\": \"36.60786\",\n        \"pm2_5\": 32,\n        \"so2\": 18,\n        \"aqi\": 64,\n        \"pm10\": 77,\n        \"city_code\": \"130400\",\n        \"co\": 0.8,\n        \"longitude\": \"114.513875\"\n    }].sort(function(a,b){\n        return a.aqi>b.aqi;\n    });\n    const $tbody = $('<table></table>');\n    $tbody.css({\n        position: 'fixed',\n        right: '12px',\n        bottom: '21px',\n        'z-index': 9,\n        'box-shadow': '0 1px 4px #ddd',\n    });\n    $tbody.appendTo($body);\n    \n     myChart.setOption({\n        series: [{\n            data: data.filter(function(item) {\n                return item.latitude && item.longitude;\n            }).map(function(item, index) {\n                item.value = [item.longitude, item.latitude].concat(item.aqi);\n                var $tr = $('<tr><td>' + (index + 1) + '</td><td>' + item.name + '</td><td>' + (item.aqi ? item.aqi : '--') + '</td></tr>');\n                $tr.appendTo($tbody);\n\n                $tr.children().not(':eq(1)').css({\n                    'text-align': 'center'\n                });\n                $tr.children().css({\n                    'border-bottom': '1px dotted'\n                });\n                $tr.children().last().css('background-color', getColor(item.aqi));\n                return {\n                    name: item.name,\n                    value: item.value,\n                    data: item\n                };\n            })\n        }]\n    })\n\n    var bmap = myChart.getModel().getComponent('bmap').getBMap();\n    bmap.setMinZoom(7);\n    bmap.setMaxZoom(10);\n    bmap.addControl(new BMap.NavigationControl());\n    const $mapStyle = $('<select></select');\n    $mapStyle.css({\n        position: 'fixed',\n        right: '.521%',\n        top: '.521%'\n    });\n    $mapStyle.appendTo($body);\n    $mapStyle.append('<option value=\"normal\"></option>');\n    $mapStyle.append('<option value=\"dark\">极夜黑</option>');\n    $mapStyle.change(function() {\n        let style = $(this).val();\n        console.log(style)\n        switch (style) {\n            case 'normal':\n            case 'dark':\n            case 'light':\n                bmap.setMapStyle({\n                    style: style\n                });\n                break;\n            default:\n                json = $(this).find('option:selected').data('json');\n                json.push({\n                    \"featureType\": \"road\",\n                    \"elementType\": \"all\",\n                    \"stylers\": {\n                        \"visibility\": \"off\"\n                    }\n                });\n                bmap.setMapStyle({\n                    styleJson: json\n                });\n        }\n\n        function resetColor(backgroundColor, textColor) {\n            myChart.setOption({\n                title: {\n                    textStyle: {\n                        color: textColor,\n                    }\n                },\n                grid: {\n                    backgroundColor: backgroundColor\n                },\n                tooltip: {\n                    backgroundColor: backgroundColor\n                },\n                series: [{\n                    label: {\n                        backgroundColor: backgroundColor,\n                        color: textColor\n                    }\n                }]\n            });\n            $body.css({\n                'background-color': backgroundColor,\n                'color': textColor\n            });\n            $tbody.css({\n                'background-color': backgroundColor\n            })\n        }\n        switch (style) {\n            case '一蓑烟雨':\n                resetColor('rgba(237, 243, 243,.88)', 'gray');\n                break;\n            case 'dark':\n                resetColor('rgba(33, 33, 33,.88)', 'white');\n                break;\n            case '绿野仙踪':\n                resetColor('rgba(31, 60, 69,.88)', 'whitesmoke');\n                break;\n            case '青花瓷':\n                resetColor('rgba(241, 241, 241,.88)', 'rgb(27, 129, 197)');\n                break;\n            default:\n                resetColor(backgroundColor, textColor);\n        }\n    });\n    const bmapStyleURL = \"/asset/get/s/data-1572317283167-8bAaywO7.json\";\n    $.getJSON(bmapStyleURL, function(style) {\n        for (key in style) {\n            if (key != '眼眸') {\n                let $option = $('<option>' + key + '</option>');\n                $option.data('json', style[key]);\n                $mapStyle.append($option);\n            }\n        }\n        $mapStyle.children().eq(3).prop('selected', true);\n        $mapStyle.trigger('change');\n    });\n}, 100);","html":"","externalScripts":"http://api.map.baidu.com/api?v=3.0&ak=bA8ttqluwMG4ksk3jv3yycLnXhUL7yBB,https://cdn.jsdelivr.net/npm/echarts@5/dist/extension/bmap.min.js","updaterUID":"bd-696783921","theme":"default","layout":"","viewCount":199020,"userName":"n***人","commentCount":1,"starCount":29,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xqxrceDS9.png?v=1572333027888","isCustomThumbnail":1,"builtinTags":["category-work"],"customTags":["bar","bmap","effectScatter","grid","tooltip","visualMap"],"updaterUserName":"n***人"}}