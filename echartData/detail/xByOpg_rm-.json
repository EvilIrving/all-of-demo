{"status":0,"data":{"cid":"xByOpg_rm-","authorUid":"bd-2215764494","authorUserName":"p***g","title":"Flight path on Mapbox","description":"","latestVersion":10,"alwaysLatest":1,"createTime":"2017-06-19T15:41:52.000Z","lastUpdateTime":"2017-06-20T02:22:43.000Z","auth":2,"uid":"bd-2215764494","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":10,"parentVersion":9,"echartsVersion":"3.6.2","versionCreateTime":"2017-07-11T16:36:41.000Z","code":"// 数据来自 https://uber.github.io/deck.gl/#/examples/core-layers/line-layer\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicGlzc2FuZyIsImEiOiJjaXBnaGYxcW8wMDFodWNtNDc4NzdqMWR2In0.4XUWeduDltiCbsIiS-U8Lg';\n\n\n$.get('/asset/get/s/data-1497886591658-rJOKkdH7W.txt', function (text) {\n    \n    var data = decodeFlightPathData(text);\n    \n    var dataAll = [];\n    for (var i = 0; i < 4; i++) {\n        dataAll = dataAll.concat(data.map(function (item) {\n            return {\n                name: item.name,\n                coords: item.coords.map(function (coord) {\n                    return coord.slice();\n                })\n            };\n        }));\n    }\n    \n    myChart.setOption({\n        mapbox: {\n            center: [0, 51.5],\n            zoom: 8,\n            pitch: 60,\n            altitudeScale: 5,\n            style: 'mapbox://styles/mapbox/dark-v9',\n            postEffect: {\n                enable: true,\n                bloom: {\n                    intensity: 0.4\n                }\n            }\n        },\n        series: [{\n            type: 'lines3D',\n\n            coordinateSystem: 'mapbox',\n\n            effect: {\n                show: true,\n                constantSpeed: 40,\n                trailWidth: 2,\n                trailLength: 0.15,\n                trailOpacity: 1\n            },\n\n            blendMode: 'lighter',\n\n            polyline: true,\n\n            lineStyle: {\n                width: 1,\n                color: 'rgb(50, 60, 170)',\n                opacity: 0.1\n            },\n\n            data: dataAll\n        }]\n    });\n\n    window.addEventListener('keydown', function () {\n        myChart.dispatchAction({\n            type: 'lines3DToggleEffect',\n            seriesIndex: 0\n        });\n    });\n});\n\n\n/**\n * https://github.com/mapbox/polyline\n *\n * Decodes to a [longitude, latitude] coordinates array.\n *\n * This is adapted from the implementation in Project-OSRM.\n *\n * @param {String} str\n * @param {Number} precision\n * @returns {Array}\n *\n * @see https://github.com/Project-OSRM/osrm-frontend/blob/master/WebContent/routing/OSRM.RoutingGeometry.js\n */\nfunction decodePolyline(str, precision) {\n    var index = 0;\n    var lat = 0;\n    var lng = 0;\n    var coordinates = [];\n    var shift = 0;\n    var result = 0;\n    var byte = null;\n    var latitude_change;\n    var longitude_change;\n    var factor = Math.pow(10, precision || 5);\n\n        // Coordinates have variable length when encoded, so just keep\n        // track of whether we've hit the end of the string. In each\n        // loop iteration, a single coordinate is decoded.\n    while (index < str.length) {\n\n        // Reset shift, result, and byte\n        byte = null;\n        shift = 0;\n        result = 0;\n\n        do {\n            byte = str.charCodeAt(index++) - 63;\n            result |= (byte & 0x1f) << shift;\n            shift += 5;\n        } while (byte >= 0x20);\n\n        latitude_change = ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n        shift = result = 0;\n\n        do {\n            byte = str.charCodeAt(index++) - 63;\n            result |= (byte & 0x1f) << shift;\n            shift += 5;\n        } while (byte >= 0x20);\n\n        longitude_change = ((result & 1) ? ~(result >> 1) : (result >> 1));\n\n        lat += latitude_change;\n        lng += longitude_change;\n\n        coordinates.push([lng / factor, lat / factor]);\n    }\n\n    return coordinates;\n}\n\nfunction decodeFlightPathData(text) {\n    var lines = text.split('\\n');\n\n    var result = [];\n\n    lines.forEach(function(line) {\n\n        if (!line) {\n            return;\n        }\n\n        var parts = line.split('\\t');\n        var coords0 = parts[2].split('\\x01').map(function(str) { return decodePolyline(str, 5) });\n        var coords1 = parts[3].split('\\x01').map(function(str) { return decodePolyline(str, 1) });\n\n        var coords = [];\n        coords0.forEach(function(lineStr, i) {\n            for (var j = 1; j < lineStr.length; j++) {\n                var prevPt0 = coords0[i][j - 1],\n                    prevPt1 = coords1[i][j - 1],\n                    currPt0 = coords0[i][j],\n                    currPt1 = coords1[i][j];\n                \n                coords.push(\n                    [prevPt0[0], prevPt0[1], prevPt1[0]],\n                    [currPt0[0], currPt0[1], currPt1[0]]\n                );\n            // result.push({\n            //     name: parts[0],\n            //     country: parts[1],\n            //     start: [prevPt0[0], prevPt0[1], prevPt1[0]],\n            //     end: [currPt0[0], currPt0[1], currPt1[0]]\n            // });\n            }\n        });\n\n        result.push({\n            name: parts[0],\n            country: parts[1],\n            coords: coords\n        });\n    });\n    return result;\n}","html":"","externalScripts":"http://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js,https://api.mapbox.com/mapbox-gl-js/v0.38.0/mapbox-gl.js","updaterUID":"bd-2215764494","theme":"default","layout":"","viewCount":21463,"userName":"p***g","commentCount":0,"starCount":13,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xByOpg_rm-.png?v=1497925365751","isCustomThumbnail":1,"builtinTags":["category-work","mapbox","series-lines3D"],"customTags":["echarts-gl"],"updaterUserName":"p***g"}}