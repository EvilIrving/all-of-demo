{"status":0,"data":{"cid":"x6wcPOsfiw","authorUid":"obd-oFywMxOTC0LpUlk0zoQqAnIExMwvJ5r","authorUserName":"硬***人","title":"boxplot+自定义图形","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2020-07-17T03:29:02.000Z","lastUpdateTime":"2020-07-17T03:29:02.000Z","auth":2,"uid":"obd-oFywMxOTC0LpUlk0zoQqAnIExMwvJ5r","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-17T03:29:02.000Z","code":"myChart.showLoading();\nvar uploadedDataURL = \"/asset/get/s/data-1594956039560-gme3lYsqq.json\";\n\n$.getJSON(uploadedDataURL, function(data) {\n    let axisData = [];\n    let _95CIData = [];\n    let averageData = [];\n    let boxPlotData = data.reduce((res, item, index) => {\n        axisData.push(item.date.slice(5));\n        res.push(item.box_plot);\n        _95CIData.push([index].concat(item._95CI));\n        averageData.push(item.average);\n        return res;\n    }, [])\n    let option = {\n        backgroundColor: '#fff',\n        grid: {\n            top: 70,\n            left: 33,\n            right: 33,\n            bottom: 24,\n            containLabel: true\n        },\n        /* legend: {\n            left: 'center',\n            bottom: 24,\n            itemWidth: 15,\n            itemHeight: 11,\n            itemGap: 20,\n            borderRadius: 4,\n            textStyle: {\n                color: '#262C41',\n                fontSize: 14\n            },\n            data: ['箱线', '平均值', '95CID']\n        }, */\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'line'\n            },\n            formatter(params) {\n                let tooltip = `<span>${params[0].name}</span>`;\n                return params.reduce((res, item) => {\n                    // res += '\\n';\n                    let {\n                        marker,\n                        seriesType,\n                        seriesName,\n                        value\n                    } = item;\n                    if (seriesType === 'boxplot') {\n                       ['最小值', '25%分位', '中位数', '75%分位', '最大值'].forEach((d, i) => {\n                            res += `\n                                        <br/>\n                                        ${marker}\n                                        <span>${d}：${value[i + 1]}</span>\n                                    `;\n                        });\n                    } else if (seriesType === 'scatter') {\n                        res += `\n                                    <br/>\n                                    ${marker}\n                                    <span>${seriesName}：${value}</span>\n                                `;\n                    } else if (seriesType === 'custom') {\n                        res += `\n                                    <br/>\n                                    ${marker}\n                                    <span>${seriesName}：${value[1]}~${value[2]}</span>\n                                `;\n                    }\n                    return res;\n                }, tooltip);\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: axisData,\n            splitLine: {\n                show: false\n            },\n            axisLine: {\n                show: true,\n                lineStyle: {\n                    color: '#DCDCDC'\n                }\n            },\n            axisLabel: {\n                show: true,\n                margin: 10,\n                fontSize: 14,\n                color: '#262C41',\n                interval: 'auto'\n            },\n            axisTick: {\n                show: false\n            }\n        },\n        yAxis: {\n            type: 'value',\n            inverse: false,\n            axisLine: {\n                show: false\n            },\n            axisTick: {\n                show: false\n            },\n            splitLine: {\n                show: true,\n                lineStyle: {\n                    type: 'dashed',\n                    color: '#DCDCDC'\n                }\n            },\n            axisLabel: {\n                show: true,\n                margin: 10,\n                fontSize: 14,\n                color: '#262C41'\n            }\n        },\n        series: [{\n            name: '箱线',\n            type: 'boxplot',\n            itemStyle: {\n                borderColor: '#01C5B2',\n                borderWidth: 1,\n                color: '#99E8E0'\n            },\n            z: 0,\n            data: boxPlotData\n        }, {\n            name: '平均值',\n            type: 'scatter',\n            symbol: 'triangle',\n            symbolSize: 10,\n            itemStyle: {\n                color: '#FFB569'\n            },\n            z: 2,\n            data: averageData\n        }, {\n            name: '95CI',\n            type: 'custom',\n            renderItem: function(params, api) {\n                // 这里使用 api.value(0) 取出当前 dataItem 中第一个维度的数值。\n                let xValue = api.value(0);\n\n                // 这里使用 api.coord(...) 将数值在当前坐标系中转换成为屏幕上的点的像素值。\n                let highPoint = api.coord([xValue, api.value(2)]);\n                let lowPoint = api.coord([xValue, api.value(1)]);\n                // 这里使用 api.size(...) 获得 Y 轴上数值范围为 1 的一段所对应的像素长度。\n                // let halfWidth = api.size([1, 0])[0] * 0.4;\n                let halfWidth = 5;\n                let style = Object.assign(api.style(), {\n                    stroke: api.visual('color'),\n                    strokeWidth: 4\n                });\n                return {\n                    // 表示这个图形元素是矩形。还可以是 'circle', 'sector', 'polygon' 等等。\n                    type: 'group',\n                    // shape 属性描述了这个矩形的像素位置和大小。\n                    // 其中特殊得用到了 echarts.graphic.clipRectByRect，意思是，\n                    // 如果矩形超出了当前坐标系的包围盒，则剪裁这个矩形。\n                    // 如果矩形完全被剪掉，会返回 undefined.\n                    children: [{\n                        type: 'line',\n                        shape: {\n                            x1: highPoint[0] - halfWidth,\n                            y1: highPoint[1],\n                            x2: highPoint[0] + halfWidth,\n                            y2: highPoint[1]\n                        },\n                        style: style\n                    }, {\n                        type: 'line',\n                        shape: {\n                            x1: highPoint[0],\n                            y1: highPoint[1],\n                            x2: lowPoint[0],\n                            y2: lowPoint[1]\n                        },\n                        style: style\n                    }, {\n                        type: 'line',\n                        shape: {\n                            x1: lowPoint[0] - halfWidth,\n                            y1: lowPoint[1],\n                            x2: lowPoint[0] + halfWidth,\n                            y2: lowPoint[1]\n                        },\n                        style: style\n                    }]\n\n                };\n            },\n            encode: {\n                x: 0,\n                y: [1, 2]\n            },\n            z: 3,\n            data: _95CIData\n        }]\n    };\n    myChart.setOption(option, true);\n    myChart.hideLoading();\n});","html":"","externalScripts":"","updaterUID":"obd-oFywMxOTC0LpUlk0zoQqAnIExMwvJ5r","theme":"","layout":"","viewCount":356,"userName":"硬***人","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x6wcPOsfiw.png?v=1594956542820","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-boxplot","series-custom","series-scatter","tooltip"],"customTags":[],"updaterUserName":"硬***人"}}