{"status":0,"data":{"cid":"xLgJM2x3I8","authorUid":"bd-1326617093","authorUserName":"龙***","title":"聚合点","description":"","latestVersion":5,"alwaysLatest":0,"createTime":"2021-05-24T10:32:04.000Z","lastUpdateTime":"2021-05-24T10:32:04.000Z","auth":2,"uid":"bd-1326617093","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.9.0","versionCreateTime":"2021-06-03T11:19:46.000Z","code":"function randomNum(m, n) {\n    var num = Math.floor(Math.random() * (m - n) + n);\n    return num;\n}\nconst imgUrl =\n    'image://http://m.qpic.cn/psc?/V50xb38C1d5fOi3riCgj2Zq4eI27wM88/TmEUgtj9EK6.7V8ajmQrEOkqjNnUnVC5hMR1rgKr7BwVDziJVMQzerU5LKrB8qAVDf8aKPxqsfCzV7zPp2o4ofTcSXUOLXFUa*mjAUPs1gw!/b&bo=MgAbAAAAAAADFxs!&rf=viewer_4';\nlet datas1 = [];\nlet pieces = [];\nfor (let i = 0; i < 5000; i++) {\n    datas1.push({ value: [10 * i + 10, randomNum(31, 39)], symbol: 'emptyCircle', index: i });\n}\n\nfunction getDatas2(i) {\n    let data2 = datas;\n    const dd = datas1[i];\n    for (let j = 1; j < 10; j++) {\n        data2.push({ value: [dd.value[0] + j, dd.value[1] - randomNum(0, 9) / 10], symbol: 'circle', index: i + 0.1 });\n    }\n    pieces.push([dd.value[0], dd.value[0] + 9]);\n    data2.map((res) => {\n        if (res.index === i) {\n            res.symbol = 'circle';\n        }\n        return res;\n    });\n    data2 = data2.sort((a, b) => {\n        return a.value[0] - b.value[0];\n    });\n    return data2;\n}\nlet datas = JSON.parse(JSON.stringify(datas1));\noption = {\n    title: { text: '' },\n    grid: { width: '74%', height: '50%', left: '13.5%', top: '8.2%' },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            animation: false,\n            type: 'none'\n        },\n    },\n    xAxis: {\n        type: 'value',\n        scale: true,\n        boundaryGap: false,\n        \"splitLine\": {     //网格线\n          \"show\": false\n        }\n    },\n    yAxis: [\n        {\n            type: 'value',\n            scale: true,\n            max: 70,\n            min: 10,\n        },\n    ],\n    graphic: [\n        {\n            name: 'guanbiAll',\n            type: 'text',\n            position: [20, 20],\n            style: {\n                text: '关闭全部聚合点',\n            },\n        },\n    ],\n    dataZoom: [\n        {\n            type: 'inside',\n            xAxisIndex: [0],\n            show: false,\n            // filterMode: 'empty'\n        },\n    ],\n    series: [\n        {\n            type: 'line',\n            sampling: 'lttb',\n            animation: false,\n            hoverAnimation: false,\n            smooth: false,\n            clip: false,\n            lineStyle: {\n                color: '#4679B4',\n            },\n            itemStyle: {\n                color: '#4679B4',\n                borderColor: '#4679B4',\n                opacity: 1,\n            },\n            data: datas,\n        },\n    ],\n};\n\nmyChart.on('highlight', function (e) {\n    // console.log(e);\n    if (e.batch.length > 0 && datas[e.batch[0].dataIndex].symbol === 'circle') {\n        // 关闭的按钮的位置处理\n        const xValue = datas[e.batch[0].dataIndex].value[0];\n        myChart.setOption({\n            series: [\n                {\n                    markLine: {\n                        symbol: 'none',\n                        silent: true,\n                        lineStyle: {\n                            normal: {\n                                color:'rgba(131, 138, 157, 0.3)',\n                                type: 'dashed',\n                            },\n                        },\n                        label:{show:false},\n                        data: [\n                            {\n                                xAxis: xValue,\n                            },\n                        ],\n                    },\n                    markPoint: {\n                        symbol: imgUrl,\n                        animation: false,\n                        data: [\n                            {\n                                name: 'guan',\n                                symbolSize: [40, 20],\n                                coord: [xValue, 10],\n                                itemStyle: {\n                                    opacity: 1,\n                                },\n                            },\n                        ],\n                    },\n                },\n            ],\n        });\n    }\n    if (e.batch.length > 0 && datas[e.batch[0].dataIndex].symbol === 'emptyCircle') {\n        const xValue = datas[e.batch[0].dataIndex].value[0];\n        myChart.setOption({\n            series: [\n                {\n                    markLine: {\n                        symbol: 'none',\n                        silent: true,\n                        lineStyle: {\n                            normal: {\n                                color:'rgba(131, 138, 157, 0.3)',\n                                type: 'dashed',\n                            },\n                        },\n                        label:{show:false},\n                        data: [\n                            {\n                                xAxis: xValue,\n                            },\n                        ],\n                    },\n                    markPoint: {\n                    data: [\n                        {\n                            itemStyle: {\n                                opacity: 0,\n                            },\n                        },\n                    ],\n                },\n                },\n            ],\n        });\n    }\n});\n\n// myChart.on('downplay', function (e) {\n//     // 去掉关闭的位置\n//     // if(e.batch[0].dataIndex===0||e.batch[0].dataIndex===datas.length-1)\n//     myChart.setOption({\n//         series: [\n//             {\n//                 markPoint: {\n//                     data: [\n//                         {\n//                             itemStyle: {\n//                                 opacity: 0,\n//                             },\n//                         },\n//                     ],\n//                 },\n//             },\n//         ],\n//     });\n// });\n\nmyChart.on('click', function (e) {\n    if (e.name === 'guan') {\n        const da = datas.find((res) => res.value[0] === e.data.coord[0]);\n        const ind = da.index;\n        let len = datas.filter((res) => res.index === ind).length;\n        if (len > 1) {\n            datas = datas.filter((res) => res.index !== ind);\n            datas = datas.map((res) => {\n                if (res.index === ind - 0.1) {\n                    res.symbol = 'emptyCircle';\n                }\n                return res;\n            });\n        } else if (len === 1) {\n            datas = datas.filter((res) => res.index !== ind + 0.1);\n            datas = datas.map((res) => {\n                if (res.index === ind) {\n                    res.symbol = 'emptyCircle';\n                }\n                return res;\n            });\n        }\n        for (let k = pieces.length - 1; k >= 0; k--) {\n            if (pieces[k][0] <= da.value[0] && pieces[k][1] >= da.value[0]) {\n                pieces.splice(k, 1);\n            }\n        }\n        uptDatas();\n    } else if (e.name === 'guanbiAll') {\n        datas = datas.filter((res) => res.index === Math.round(res.index));\n        datas = datas.map((res) => {\n            res.symbol = 'emptyCircle';\n            return res;\n        });\n        pieces = [];\n        uptDatas();\n    } else if (e.seriesType === 'line') {\n        if (e.data.symbol === 'emptyCircle') {\n            datas = getDatas2(datas[e.dataIndex].index);\n            uptDatas();\n        }\n    }\n});\n\nfunction uptDatas() {\n    let piece = [];\n    // pieces.map((res) => {\n    //     piece.push({\n    //         gte: res[0],\n    //         lte: res[1],\n    //         color: '#dae4f0',\n    //     });\n    // });\n    myChart.setOption({\n        // visualMap: {\n        //     type: 'piecewise',\n        //     show: false,\n        //     dimension: 0,\n        //     seriesIndex: 0,\n        //     pieces: piece,\n        // },\n        series: [\n            {\n                data: datas,\n                // areaStyle: { opacity: pieces.length > 0 ? 1 : 0 },\n                markPoint: {\n                    data: [\n                        {\n                            itemStyle: {\n                                opacity: 0,\n                            },\n                        },\n                    ],\n                },\n            },\n        ],\n    });\n}\n\nmyChart.on('mouseover', function (e) {\n    if (e.name === 'guan') {\n    }\n});\nmyChart.on('mouseover', function (e) {\n    if (e.name === 'guan') {\n    }\n});\n","html":"","externalScripts":"","updaterUID":"bd-1326617093","theme":"","layout":"","viewCount":0,"userName":"龙***","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xLgJM2x3I8.png?v=1622719187035","isCustomThumbnail":0,"builtinTags":["category-work","graphic","grid","markPoint","series-line","title","tooltip"],"customTags":[],"updaterUserName":"龙***"}}