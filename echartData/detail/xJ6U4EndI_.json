{"status":0,"data":{"cid":"xJ6U4EndI_","authorUid":"bd-892391590","authorUserName":"k***9","title":"","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-07-01T02:08:37.000Z","lastUpdateTime":"2021-07-01T02:08:37.000Z","auth":2,"uid":"bd-892391590","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.1.2","versionCreateTime":"2021-07-01T02:08:37.000Z","code":"var colors = [{\r\n        c1: \"#00c7ef\",\r\n        c2: \"#0AF3FF\"\r\n    },\r\n    {\r\n        c1: \"#FF8E14\",\r\n        c2: \"#FFA12F\"\r\n    },\r\n    {\r\n        c1: \"#AF5AFF\",\r\n        c2: \"#B62AFF\"\r\n    },\r\n    {\r\n        c1: \"#25dd59\",\r\n        c2: \"#29f463\"\r\n    },\r\n    {\r\n        c1: \"#6E35FF\",\r\n        c2: \"#6E67FF\"\r\n    },\r\n    {\r\n        c1: \"#002AFF\",\r\n        c2: \"#0048FF\"\r\n    },\r\n    {\r\n        c1: \"#8CD282\",\r\n        c2: \"#95F300\"\r\n    },\r\n    {\r\n        c1: \"#3B0EFF\",\r\n        c2: \"#604BFF\"\r\n    },\r\n    {\r\n        c1: \"#00BE74\",\r\n        c2: \"#04FDB8\"\r\n    },\r\n    {\r\n        c1: \"#4a3ac6\",\r\n        c2: \"#604BFF\"\r\n    }\r\n];\r\n\r\nfunction getData() {\r\n    let data = {\r\n        name: \"根节点1\",\r\n        value: 0,\r\n        list: []\r\n    };\r\n    for (let i = 1; i <= 10; i++) {\r\n        let obj = {\r\n            name: \"节点\" + i,\r\n            value: i,\r\n            list: [],\r\n        };\r\n        for (let j = 1; j <= 5; j++) {\r\n            let obj2 = {\r\n                name: `节点1-${i}-${j}`,\r\n                value: 1 + \"-\" + i + \"-\" + j,\r\n            };\r\n            // if(j%2==1){\r\n            //   obj2.list=[]\r\n            //   for (let k = 1; k <= 3; k++) {\r\n            //     let obj3 = {\r\n            //       name: `节点1-${i}-${j}-${k}`,\r\n            //       value: 1 + \"-\" + i + \"-\" + j+'-'+k,\r\n            //     };\r\n            //     obj2.list.push(obj3);\r\n            //   }\r\n            // }\r\n\r\n            obj.list.push(obj2);\r\n        }\r\n\r\n        data.list.push(obj);\r\n    }\r\n    var arr = []\r\n    arr.push(data)\r\n    //   arr=handle(arr,0)\r\n    return arr;\r\n}\r\n\r\n\r\nvar listData = getData()\r\nvar list = [];\r\nvar links = [];\r\nvar legend = [];\r\n\r\nvar categories = listData[0].list.map(item => {\r\n    return {\r\n        name: item.name\r\n    };\r\n});\r\n\r\nvar legendColor = colors.map(item => item.c2)\r\n\r\n\r\nhandle2(JSON.parse(JSON.stringify(listData)), 0);\r\nhandle3(JSON.parse(JSON.stringify(listData)), 0);\r\n\r\n//计算list\r\nfunction handle2(arr, idx, color, category) {\r\n    arr.forEach((item, index) => {\r\n        if (item.name === null) {\r\n            return false;\r\n        }\r\n        // 设置节点大小\r\n        let symbolSize = 10;\r\n        switch (idx) {\r\n            case 0:\r\n                symbolSize = 70;\r\n                break;\r\n            case 1:\r\n                symbolSize = 50;\r\n                break;\r\n            default:\r\n                symbolSize = 10;\r\n                break;\r\n        }\r\n\r\n        // 每个节点所对应的文本标签的样式。\r\n        let label = null;\r\n        switch (idx) {\r\n            case 0:\r\n            case 1:\r\n                label = {\r\n                    position: \"inside\",\r\n                    rotate: 0\r\n                };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //计算出颜色,从第二级开始\r\n        if (idx === 0) {\r\n            color = colors[0];\r\n        }\r\n        if (idx == 1) {\r\n            color = colors.find((itemm, eq) => eq == index % 10);\r\n            legend.push(item.name);\r\n        }\r\n        // 设置线条颜色\r\n        let lineStyle = {\r\n            color: color.c2\r\n        };\r\n        // 设置节点样式\r\n        let bgcolor = null;\r\n        if (idx === 0) {\r\n            bgcolor = {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.5,\r\n                colorStops: [{\r\n                        offset: 0,\r\n                        color: color.c1 // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 0.8,\r\n                        color: color.c1 // 80% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: \"rgba(0, 0, 0, 0.3)\" // 100% 处的颜色\r\n                    }\r\n                ],\r\n                global: false\r\n            };\r\n        } else {\r\n            bgcolor = {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.5,\r\n                colorStops: [{\r\n                        offset: 0,\r\n                        color: color.c1 // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 0.4,\r\n                        color: color.c1 // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: color.c2 // 100% 处的颜色\r\n                    }\r\n                ],\r\n                global: false\r\n            };\r\n        }\r\n        let itemStyle = null;\r\n        if (item.list && item.list.length !== 0) {\r\n            //非子节点\r\n            itemStyle = {\r\n                borderColor: color.c2,\r\n                color: bgcolor\r\n            };\r\n        } else {\r\n            //子节点\r\n            item.isEnd = true;\r\n            if (item.isdisease == \"true\") {\r\n                itemStyle = {\r\n                    color: color.c2,\r\n                    borderColor: color.c2\r\n                };\r\n            } else {\r\n                itemStyle = {\r\n                    color: \"transparent\",\r\n                    borderColor: color.c2\r\n                };\r\n            }\r\n        }\r\n        //可以改变来实现节点发光效果，但体验不好\r\n        itemStyle = Object.assign(itemStyle, {\r\n            shadowColor: \"rgba(255, 255, 255, 0.5)\",\r\n            shadowBlur: 10\r\n        });\r\n\r\n        if (idx == 1) {\r\n            category = item.name;\r\n        }\r\n        let obj = {\r\n            name: item.name,\r\n            symbolSize: symbolSize,\r\n            category: category,\r\n            label,\r\n            color: bgcolor,\r\n            itemStyle,\r\n            lineStyle\r\n        };\r\n        obj = Object.assign(item, obj);\r\n        if (idx === 0) {\r\n            obj = Object.assign(obj, {\r\n                root: true\r\n            });\r\n        }\r\n        if (item.list && item.list.length === 0) {\r\n            obj = Object.assign(obj, {\r\n                isEnd: true\r\n            });\r\n        }\r\n        list.push(obj);\r\n        if (item.list && item.list.length > 0) {\r\n            handle2(item.list, idx + 1, color, category);\r\n        }\r\n    });\r\n}\r\n// 计算links\r\nfunction handle3(arr, index, color) {\r\n    arr.forEach(item => {\r\n        if (item.list) {\r\n            item.list.forEach((item2, eq) => {\r\n                if (index === 0) {\r\n                    color = colors.find((itemm, eq2) => eq2 == eq % 10);\r\n                }\r\n                let lineStyle = null;\r\n                switch (index) {\r\n                    case 0:\r\n                        if (item2.list.length > 0) {\r\n                            lineStyle = {\r\n                                normal: {\r\n                                    color: \"target\"\r\n                                }\r\n                            };\r\n                        } else {\r\n                            lineStyle = {\r\n                                normal: {\r\n                                    color: color.c2\r\n                                }\r\n                            };\r\n                        }\r\n                        break;\r\n                    default:\r\n                        lineStyle = {\r\n                            normal: {\r\n                                color: \"source\"\r\n                            }\r\n                        };\r\n                        break;\r\n                }\r\n                let obj = {\r\n                    source: item.name,\r\n                    target: item2.name,\r\n                    lineStyle\r\n                };\r\n                links.push(obj);\r\n                if (item2.list && item.list.length > 0) {\r\n                    handle3(item.list, index + 1);\r\n                }\r\n            });\r\n        }\r\n\r\n    });\r\n}\r\n\r\n\r\noption = {\r\n    backgroundColor: \"#020f3c\",\r\n    toolbox: {\r\n        show: true,\r\n        left: \"right\",\r\n        right: 20,\r\n        top: \"bottom\",\r\n        bottom: 20,\r\n    },\r\n    color: legendColor,\r\n    legend: {\r\n        show: true,\r\n        data: legend,\r\n        textStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 10\r\n        },\r\n        // inactiveColor: \"#fff\",\r\n        icon: \"circle\",\r\n        type: \"scroll\",\r\n        orient: \"vertical\",\r\n        left: \"right\",\r\n        right: 20,\r\n        top: 20,\r\n        bottom: 80,\r\n        // itemWidth: 12,\r\n        // itemHeight: 12,\r\n        pageIconColor: \"#00f6ff\",\r\n        pageIconInactiveColor: \"#fff\",\r\n        pageIconSize: 12,\r\n        pageTextStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 12\r\n        }\r\n    },\r\n    selectedMode: \"false\",\r\n    bottom: 20,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    animationDuration: 1500,\r\n    animationEasingUpdate: \"quinticInOut\",\r\n    series: [{\r\n        name: \"知识图谱\",\r\n        type: \"graph\",\r\n        hoverAnimation: true,\r\n        layout: \"force\",\r\n        force: {\r\n            repulsion: 300,\r\n            edgeLength: 100\r\n        },\r\n        nodeScaleRatio: 0.6,\r\n        draggable: true,\r\n        roam: true,\r\n        symbol: \"circle\",\r\n        data: list,\r\n        links: links,\r\n        categories: categories,\r\n        focusNodeAdjacency: true,\r\n        scaleLimit: {\r\n            //所属组件的z分层，z值小的图形会被z值大的图形覆盖\r\n            min: 0.5, //最小的缩放值\r\n            max: 9 //最大的缩放值\r\n        },\r\n        edgeSymbol: [\"circle\", \"arrow\"],\r\n        edgeSymbolSize: [4, 8],\r\n        label: {\r\n            normal: {\r\n                show: true,\r\n                position: \"right\",\r\n                color: \"#fff\",\r\n                distance: 5,\r\n                fontSize: 10\r\n            }\r\n        },\r\n        lineStyle: {\r\n            normal: {\r\n                width: 1.5,\r\n                curveness: 0,\r\n                type: \"solid\"\r\n            }\r\n        }\r\n    }]\r\n};","html":"","externalScripts":"","updaterUID":"bd-892391590","theme":"","layout":"","viewCount":0,"userName":"k***9","commentCount":0,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xJ6U4EndI_.png?v=1625105318146","isCustomThumbnail":0,"builtinTags":["category-work","legend","series-graph","toolbox"],"customTags":[],"updaterUserName":"k***9"}}