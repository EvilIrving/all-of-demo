{"status":0,"data":{"cid":"xG8nLSzXxR","authorUid":"obd-otzvfj8vteYdCiC0yVCJ0txO3Ohut87","authorUserName":"天***2","title":"对称带点的圆环图","description":"设计灵感来自上一个作品，此为本人魔改版本","latestVersion":3,"alwaysLatest":1,"createTime":"2020-12-21T14:23:13.000Z","lastUpdateTime":"2020-12-21T14:23:13.000Z","auth":2,"uid":"obd-otzvfj8vteYdCiC0yVCJ0txO3Ohut87","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.8.0","versionCreateTime":"2020-12-21T14:57:17.000Z","code":"let angle = 0; //角度，用来做简单的动画效果的\r\nlet value = 66;\r\nlet maxvalue = 100;\r\nlet percent = (value / maxvalue) * 100;\r\npercent = percent.toFixed(0); //小数位数为0\r\noption = {\r\n    backgroundColor: '#000E1A',\r\n    title: {\r\n        text: '{a|' + percent + '}{c|%}',\r\n        x: 'center',\r\n        y: 'center',\r\n        textStyle: {\r\n            rich: {\r\n                a: {\r\n                    fontSize: 70,\r\n\r\n                    color: '#ffffff',\r\n                    fontFamily: 'Din'\r\n                },\r\n\r\n                c: {\r\n                    fontSize: 45,\r\n\r\n                    color: '#ffffff',\r\n                    fontFamily: 'SanFrancisco ',\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    polar: [{\r\n            radius: ['33.5%', '70.8%'],\r\n            center: ['50%', '50%'],\r\n\r\n        },\r\n\r\n    ],\r\n\r\n    angleAxis: {\r\n        max: maxvalue,\r\n        show: false,\r\n        inverse: false\r\n    },\r\n    radiusAxis: {\r\n        type: 'category',\r\n        show: true,\r\n        axisLabel: {\r\n            show: false,\r\n        },\r\n        axisLine: {\r\n            show: false,\r\n\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n    },\r\n\r\n    series: [\r\n        // 大弧线\r\n        {\r\n            name: \"ring5\",\r\n            type: 'custom',\r\n            coordinateSystem: \"none\",\r\n            renderItem: function(params, api) {\r\n                return {\r\n                    type: 'arc',\r\n                    shape: {\r\n                        cx: api.getWidth() / 2,\r\n                        cy: api.getHeight() / 2,\r\n                        r: Math.min(api.getWidth(), api.getHeight()) / 2.3 * 0.6,\r\n                        // startAngle: (0+angle) * Math.PI / 180,\r\n                        // endAngle: (90+angle) * Math.PI / 180\r\n                        startAngle: (0) * Math.PI / 180,\r\n                        endAngle: (360) * Math.PI / 180\r\n                    },\r\n                    style: {\r\n                        stroke: \"rgb(53,53,53)\",\r\n                        fill: \" transparent\",\r\n                        lineWidth: 5\r\n                    },\r\n                    silent: true\r\n                };\r\n            },\r\n            data: [0]\r\n        },\r\n         //点\r\n        {\r\n            name: \"ring5\",\r\n            type: 'custom',\r\n            coordinateSystem: \"none\",\r\n            renderItem: function (params, api) {\r\n                let x0 = api.getWidth() / 2;\r\n                let y0 = api.getHeight() / 2;\r\n                let r = Math.min(api.getWidth(), api.getHeight()) / 3.5 * 0.6;\r\n                let point = getCirlPoint(x0, y0, r, (0))\r\n                return {\r\n                    type: 'circle',\r\n                    shape: {\r\n                        cx: point.x,\r\n                        cy: point.y,\r\n                        r: 5\r\n                    },\r\n                    style: {\r\n                        stroke: \"rgb(211,145,28)\",\r\n                        fill: \"rgb(211,145,28)\"\r\n                    },\r\n                    silent: true\r\n                };\r\n            },\r\n            data: [0]\r\n        },\r\n         //点\r\n        {\r\n            name: \"ring5\",\r\n            type: 'custom',\r\n            coordinateSystem: \"none\",\r\n            renderItem: function (params, api) {\r\n                let x0 = api.getWidth() / 2;\r\n                let y0 = api.getHeight() / 2;\r\n                let r = Math.min(api.getWidth(), api.getHeight()) / 3.5 * 0.6;\r\n                let point = getCirlPoint(x0, y0, r, (360*(value / maxvalue)))\r\n                return {\r\n                    type: 'circle',\r\n                    shape: {\r\n                        cx: point.x,\r\n                        cy: point.y,\r\n                        r: 5\r\n                    },\r\n                    style: {\r\n                        stroke: \"rgb(211,145,28)\",\r\n                        fill: \"rgb(211,145,28)\",\r\n                        \r\n                    },\r\n                    silent: true\r\n                };\r\n            },\r\n            data: [0]\r\n        },\r\n        //小弧线\r\n        {\r\n            name: \"ring5\",\r\n            type: 'custom',\r\n            z: 1,\r\n            coordinateSystem: \"none\",\r\n            renderItem: function(params, api) {\r\n                return {\r\n                    type: 'arc',\r\n                    shape: {\r\n                        cx: api.getWidth() / 2,\r\n                        cy: api.getHeight() / 2,\r\n                        r: Math.min(api.getWidth(), api.getHeight()) / 3.5 * 0.6,\r\n                        // startAngle: (0+angle) * Math.PI / 180,\r\n                        // endAngle: (90+angle) * Math.PI / 180\r\n                        startAngle: (0) * Math.PI / 180,\r\n                        endAngle: (360*(value / maxvalue)) * Math.PI / 180\r\n                    },\r\n                    style: {\r\n                        stroke: \"rgb(99,99,99)\",\r\n                        fill: \" transparent\",\r\n                        lineWidth: 5\r\n                    },\r\n                    silent: true\r\n                };\r\n            },\r\n            data: [0]\r\n        },\r\n       \r\n\r\n        //极坐标柱状图\r\n        { //显示\r\n            name: '',\r\n            type: 'bar',\r\n            roundCap: true,\r\n            barWidth: 10,\r\n            showBackground: true,\r\n            stack: \"a\",\r\n            backgroundStyle: {\r\n                color: 'rgba(66, 66, 66, 0)',\r\n            },\r\n            data: [value / 2],\r\n            coordinateSystem: 'polar',\r\n\r\n\r\n            itemStyle: {\r\n                // normal: {\r\n                //     color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\r\n                //         offset: 0,\r\n                //         color: 'rgb(211,145,28)'\r\n                //     }, {\r\n                //         offset: 1,\r\n                //         color: 'rgba(211,145,28,1)',\r\n                        \r\n                //     }]),\r\n                    \r\n                // },\r\n                color:'rgba(211,145,28,1)',\r\n                shadowBlur:15,\r\n                shadowColor:'rgba(211,145,28,1)',\r\n                \r\n                \r\n                \r\n            }\r\n\r\n        },\r\n        { //不显示\r\n            name: '',\r\n            type: 'bar',\r\n            roundCap: true,\r\n            barWidth: 10,\r\n            showBackground: true,\r\n            stack: \"a\",\r\n            backgroundStyle: {\r\n                color: 'rgba(66, 66, 66, 0)',\r\n            },\r\n            data: [(maxvalue - value) / 2],\r\n            coordinateSystem: 'polar',\r\n\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\r\n                        offset: 0,\r\n                        color: 'rgba(211,145,28,0)'\r\n                    }, {\r\n                        offset: 1,\r\n                        color: 'rgba(211,145,30,0)'\r\n                    }]),\r\n                }\r\n            }\r\n\r\n        },\r\n        {\r\n            name: '',\r\n            type: 'bar',\r\n            roundCap: true,\r\n            barWidth: 10,\r\n            showBackground: true,\r\n            stack: \"a\",\r\n            backgroundStyle: {\r\n                color: 'rgba(66, 66, 66, 0)',\r\n            },\r\n            data: [value / 2],\r\n            coordinateSystem: 'polar',\r\n\r\n            itemStyle: {\r\n                // normal: {\r\n                //     color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\r\n                //         offset: 0,\r\n                //         color: 'rgb(211,145,28)'\r\n                //     }, {\r\n                //         offset: 1,\r\n                //         color: 'rgba(211,145,30,1)'\r\n                //     }]),\r\n                // }\r\n                 color:'rgba(211,145,28,1)',\r\n                shadowBlur:15,\r\n                shadowColor:'rgba(211,145,28,1)',\r\n                \r\n            }\r\n\r\n        },\r\n        {\r\n            name: '',\r\n            type: 'bar',\r\n            roundCap: true,\r\n            barWidth: 10,\r\n            showBackground: true,\r\n            stack: \"a\",\r\n            backgroundStyle: {\r\n                color: 'rgba(66, 66, 66, 0)',\r\n            },\r\n            data: [(maxvalue - value) / 2],\r\n            coordinateSystem: 'polar',\r\n\r\n            itemStyle: {\r\n                normal: {\r\n                    color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\r\n                        offset: 0,\r\n                        color: 'rgba(211,145,28,0)'\r\n                    }, {\r\n                        offset: 1,\r\n                        color: 'rgba(211,145,28,0)'\r\n                    }]),\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        //仪表盘，用于显示小刻度圈\r\n        {\r\n            name: '统计',\r\n            type: 'gauge',\r\n            splitNumber: 12, //刻度数量\r\n            min: 0,\r\n            max: 100,\r\n            radius: '45%', //图表尺寸\r\n            center: ['50%', '50%'],\r\n            startAngle: 90,\r\n            endAngle: -269.9999,\r\n            axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                    width: 0,\r\n                    shadowBlur: 0,\r\n                    color: [\r\n                        [0, 'rgb(99,99,99)'],\r\n                        [1, 'rgb(99,99,99)']\r\n                    ]\r\n                }\r\n            },\r\n            axisTick: {\r\n                show: true,\r\n                lineStyle: {\r\n                    color: 'rgb(99,99,99)',\r\n                    width: 5, //刻度线的宽度\r\n                },\r\n                length: 2, //刻度线的长度\r\n                splitNumber: 5\r\n            },\r\n            splitLine: {\r\n                show: true,\r\n                length: 0,\r\n                lineStyle: {\r\n                    color: 'rgb(99,99,99)',\r\n                }\r\n            },\r\n            axisLabel: {\r\n                show: false\r\n            },\r\n            // pointer: { //仪表盘指针\r\n            //     show: 0,\r\n            // },\r\n            detail: {\r\n                borderColor: '#fff',\r\n                shadowColor: '#fff', //默认透明\r\n                shadowBlur: 2,\r\n                offsetCenter: [0, '0%'], // x, y，单位px\r\n                textStyle: { // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                    color: '0',\r\n                    fontSize: 50,\r\n                },\r\n                formatter: '{value}'\r\n            },\r\n            // data: [{\r\n            //     name: \"\",\r\n            //     value: 0\r\n            // }]\r\n        },\r\n\r\n        //外圈波纹效果\r\n\r\n    ]\r\n};\r\n\r\n//获取圆上面某点的坐标(x0,y0表示坐标，r半径，angle角度)\r\nfunction getCirlPoint(x0, y0, r, angle) {\r\n    let x1 = x0 + r * Math.cos(angle * Math.PI / 180)\r\n    let y1 = y0 + r * Math.sin(angle * Math.PI / 180)\r\n    return {\r\n        x: x1,\r\n        y: y1\r\n    }\r\n}\r\n\r\nfunction draw() {\r\n    angle = angle + 3\r\n    myChart.setOption(option, true)\r\n    //window.requestAnimationFrame(draw);\r\n}\r\n\r\nsetInterval(function() {\r\n    //用setInterval做动画感觉有问题\r\n    draw()\r\n}, 100);","html":"","externalScripts":"","updaterUID":"obd-otzvfj8vteYdCiC0yVCJ0txO3Ohut87","theme":"","layout":"","viewCount":190,"userName":"天***2","commentCount":0,"starCount":8,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xG8nLSzXxR.png?v=1608562637187","isCustomThumbnail":0,"builtinTags":["category-work","polar","series-bar","series-custom","series-gauge","title"],"customTags":[],"updaterUserName":"天***2"}}