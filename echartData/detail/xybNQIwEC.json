{"status":0,"data":{"cid":"xybNQIwEC","authorUid":"bd-1873793385","authorUserName":"w***3","title":"矢量地图下深","description":"点击省可以下深到市","latestVersion":2,"alwaysLatest":1,"createTime":"2019-12-31T09:32:18.000Z","lastUpdateTime":"2019-12-31T09:32:18.000Z","auth":2,"uid":"bd-1873793385","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.4.0","versionCreateTime":"2019-12-31T09:32:38.000Z","code":"/**\r\n边界数据的实时获取与应用，省市区县多级联动【附最新geoJson文件下载】\r\n边界数据可以实时获取，也可以结合geojson本地文件加载\r\n\r\ngeojson文件下载地址：https://hxkj.vip/demo/echartsMap/\r\n\r\n项目GitHub地址（欢迎star）：https://github.com/TangSY/echarts-map-demo\r\n\r\n作者：TSY\r\n作者个人空间（欢迎闲逛）：https://hxkj.vip\r\n**/\r\n\r\n$(`<div id=\"container\"></div>\r\n    <div class=\"input-card\">\r\n            <h4>下属行政区查询</h4>\r\n            <div class=\"input-item\">\r\n                <div class=\"input-item-prepend\"><span class=\"input-item-text\">省市区</span></div>\r\n                <select id='province' style=\"width:100px\"></select>\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <div class=\"input-item-prepend\"><span class=\"input-item-text\">地级市</span></div>\r\n                <select id='city' style=\"width:100px\"></select>\r\n            </div>\r\n            <div class=\"input-item\">\r\n                <div class=\"input-item-prepend\"><span class=\"input-item-text\">区县</span></div>\r\n                <select id='district' style=\"width:100px\"></select>\r\n            </div>\r\n             <div class=\"input-item-\" style='display: none;'>\r\n        <div class=\"input-item-prepend\"><span class=\"input-item-text\" >街道</span></div>\r\n        <select id='street' style=\"width:100px\" onchange='setCenter(this)'></select>\r\n    </div>\r\n            <p>请选择文件命名方式</p>\r\n            <div class=\"radio\">\r\n                <input type=\"radio\" value=\"name\" name=\"nameType\">地域名称\r\n                <input type=\"radio\" value=\"code\" checked name=\"nameType\">地域行政编码\r\n            </div>\r\n            <div class=\"input-item download\" @click=\"download\">下载geoJson数据</div>\r\n        </div>`).appendTo(\r\n    $('#chart-panel')\r\n);\r\n\r\n$('*').css({\r\n    'box-sizing': 'border-box'\r\n})\r\n\r\n$('#container').css({\r\n    position: 'absolute',\r\n    width: '100%',\r\n    left: '0',\r\n    top: '0',\r\n    height: '100%',\r\n})\r\n\r\n$('.input-card').css({\r\n    position: 'fixed',\r\n    top: '10px',\r\n    left: '10px',\r\n    height: '300px',\r\n    display: 'flex',\r\n    'flex-direction': 'column',\r\n    'min-width': '0',\r\n    'word-wrap': 'break-word',\r\n    'background-color': '#fff',\r\n    'background-clip': 'border-box',\r\n    'border-radius': '.25rem',\r\n    width: '22rem',\r\n    'border-width': '0',\r\n    'border-radius': '0.4rem',\r\n    'box-shadow': '0 2px 6px 0 rgba(114, 124, 245, .5)',\r\n    bottom: '1rem',\r\n    right: '1rem',\r\n    '-ms-flex': '1 1 auto',\r\n    flex: '1 1 auto',\r\n    padding: '0.75rem 1.25rem',\r\n    'z-index': '10'\r\n})\r\n\r\n$('.input-item').css({\r\n    position: 'relative',\r\n    display: '-ms-flexbox',\r\n    display: 'flex',\r\n    '-ms-flex-wrap': 'wrap',\r\n    'flex-wrap': 'wrap',\r\n    '-ms-flex-align': 'center',\r\n    'align-items': 'center',\r\n    width: '100%',\r\n    height: '3rem'\r\n})\r\n\r\n$('.input-item-text').css({\r\n    width: '6rem',\r\n    'text-align': 'justify',\r\n    padding: '0.4rem 0.7rem',\r\n    display: 'inline-block',\r\n    'text-justify': 'distribute-all-lines',\r\n    'text-align-last': 'justify',\r\n    '-moz-text-align-last': 'justify',\r\n    '-webkit-text-align-last': 'justify',\r\n    '-ms-flex-align': 'center',\r\n    'align-items': 'center',\r\n    'margin-bottom': '0',\r\n    'font-size': '1rem',\r\n    ' font-weight': '400',\r\n    'line-height': '1.5',\r\n    color: '#495057',\r\n    'text-align': 'center',\r\n    'white-space': 'nowrap',\r\n    'background-color': '#e9ecef',\r\n    border: '1px solid #ced4da',\r\n    'border-radius': '.25rem',\r\n    'border-bottom-right-radius': '0',\r\n    'border-top-right-radius': '0',\r\n    height: 'calc(2.2rem + 2px)'\r\n})\r\nvar url = \"\";\r\nvar background = `#fff url(${url}) no-repeat right .75rem center`\r\n$('select').css({\r\n    display: 'inline-block',\r\n    width: '100%',\r\n    padding: '.375rem 1.75rem .375rem .75rem',\r\n    'line-height': '1.5',\r\n    color: '#495057',\r\n    'vertical-align': 'middle',\r\n    'background-size': '8px 10px',\r\n    border: '1px solid #ced4da',\r\n    'border-radius': '.25rem',\r\n    '-webkit-appearance': 'none',\r\n    '-moz-appearance': 'none',\r\n    appearance: 'none',\r\n    position: 'relative',\r\n    '-ms-flex': '1 1 auto',\r\n    flex: '1 1 auto',\r\n    width: '1%',\r\n    'border-top-left-radius': '0',\r\n    'border-bottom-left-radius': '0',\r\n    height: 'calc(2.2rem + 2px)',\r\n    'margin-bottom': '0'\r\n})\r\n\r\n$('.radio').css({\r\n    margin: '3px 0'\r\n})\r\n\r\n$($('#chart-panel').children(\"div\").get(0)).css({\r\n    position: 'absolute',\r\n    'z-index': '8'\r\n})\r\n\r\n$('.download').css({\r\n    display: '-webkit-box',\r\n    display: '-ms-flexbox',\r\n    display: 'flex',\r\n    '-webkit-box-pack': 'center',\r\n    '-ms-flex-pack': 'center',\r\n    'justify-content': 'center',\r\n    '-webkit-box-align': 'center',\r\n    '-ms-flex-align': 'center',\r\n    'align-items': 'center',\r\n    border: '1px solid #ced4da',\r\n    'border-radius': '.25rem',\r\n    'background-color': '#e9ecef',\r\n    color: '#495057',\r\n    'text-align': 'center',\r\n    cursor: 'pointer'\r\n})\r\n\r\nvar map, district, polygons = [],\r\n    mapData = [],\r\n    cityCode = 100000,\r\n    cityName = '中国',\r\n    areaCode = 10000,\r\n    geoJsonData = '';\r\nvar citySelect = document.getElementById('city');\r\nvar districtSelect = document.getElementById('district');\r\nvar areaSelect = document.getElementById('street');\r\nvar areaData = {}\r\n\r\n$(\"select\").change(function() {\r\n    search(this);\r\n});\r\n\r\nmap = new AMap.Map('container', {\r\n    resizeEnable: true,\r\n    center: [116.30946, 39.937629],\r\n    zoom: 3\r\n});\r\n//行政区划查询\r\nvar opts = {\r\n    subdistrict: 1, //返回下一级行政区\r\n    showbiz: false //最后一级返回街道信息\r\n};\r\ndistrict = new AMap.DistrictSearch(opts); //注意：需要使用插件同步下发功能才能这样直接使用\r\ndistrict.search('中国', function(status, result) {\r\n    if (status == 'complete') {\r\n        getData(result.districtList[0], '', 100000);\r\n    }\r\n});\r\n\r\nfunction echartsMapClick(params) { //地图点击事件\r\n\r\n\r\n    if (!params.data || params.data.level == 'street') return;\r\n    cityName = params.data.name;\r\n    cityCode = params.data.cityCode;\r\n    district.setLevel(params.data.level); //行政区级别\r\n    district.setExtensions('all');\r\n    //行政区查询\r\n    //按照adcode进行查询可以保证数据返回的唯一性\r\n    district.search(params.data.cityCode, (status, result) => {\r\n        if (status === 'complete') {\r\n            getData(result.districtList[0], params.data.level, params.data.cityCode);\r\n        }\r\n    });\r\n};\r\n\r\nfunction loadMapData(areaCode) {\r\n    AMapUI.loadUI(['geo/DistrictExplorer'], DistrictExplorer => {\r\n\r\n        //创建一个实例\r\n        var districtExplorer = window.districtExplorer = new DistrictExplorer({\r\n            eventSupport: true, //打开事件支持\r\n            map: map\r\n        });\r\n\r\n        districtExplorer.loadAreaNode(areaCode, (error, areaNode) => {\r\n\r\n            if (error) {\r\n                console.error(error);\r\n                return;\r\n            }\r\n            let mapJson = {};\r\n            mapJson.features = areaNode.getSubFeatures();\r\n            loadMap(cityName, mapJson);\r\n            geoJsonData = mapJson;\r\n        });\r\n    });\r\n};\r\n\r\nfunction downloadJson() {\r\n    var nameType = $(\"input[name='nameType']:checked\").val();\r\n    var blob = new Blob([JSON.stringify(geoJsonData)], {\r\n        type: \"text/plain;charset=utf-8\"\r\n    });\r\n    let filename = cityName;\r\n    if (nameType === 'code') {\r\n        filename = cityCode;\r\n    }\r\n    saveAs(blob, `${filename}.geoJson`); //filename\r\n};\r\n\r\nfunction loadMap(mapName, data) {\r\n    if (data) {\r\n        echarts.registerMap(mapName, data);\r\n        var option = {\r\n            backgroundColor: 'rgba(0,0,0,.6)',\r\n            visualMap: {\r\n                type: 'piecewise',\r\n                pieces: [{\r\n                        max: 30,\r\n                        label: '安全',\r\n                        color: '#2c9a42'\r\n                    },\r\n                    {\r\n                        min: 30,\r\n                        max: 60,\r\n                        label: '警告',\r\n                        color: '#d08a00'\r\n                    },\r\n                    {\r\n                        min: 60,\r\n                        label: '危险',\r\n                        color: '#c23c33'\r\n                    },\r\n                ],\r\n                color: '#fff',\r\n                textStyle: {\r\n                    color: '#fff',\r\n                },\r\n                visibility: 'off'\r\n            },\r\n            series: [{\r\n                name: '数据名称',\r\n                type: 'map',\r\n                roam: false,\r\n                mapType: mapName,\r\n                selectedMode: 'single',\r\n                showLegendSymbol: false,\r\n                visibility: 'off',\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: '#ccc',\r\n                        areaColor: '#fff',\r\n                        borderColor: '#fff',\r\n                        borderWidth: 0.5,\r\n                        label: {\r\n                            show: true,\r\n                            textStyle: {\r\n                                color: \"rgb(249, 249, 249)\"\r\n                            }\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: false,\r\n                        borderColor: '#fff',\r\n                        areaStyle: {\r\n                            color: '#fff'\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            textStyle: {\r\n                                color: \"rgb(249, 249, 249)\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                data: mapData,\r\n            }]\r\n        };\r\n        myChart.setOption(option);\r\n    }\r\n};\r\nmyChart.on('click', echartsMapClick);\r\n$('.download').on('click', downloadJson);\r\n\r\nfunction getData(data, level, adcode) {\r\n    var bounds = data.boundaries;\r\n    if (bounds) {\r\n        for (var i = 0, l = bounds.length; i < l; i++) {\r\n            var polygon = new AMap.Polygon({\r\n                map: map,\r\n                strokeWeight: 1,\r\n                strokeColor: '#0091ea',\r\n                fillColor: '#80d8ff',\r\n                fillOpacity: 0.2,\r\n                path: bounds[i]\r\n            });\r\n            polygons.push(polygon);\r\n        }\r\n        map.setFitView(); //地图自适应\r\n    }\r\n\r\n    //清空下一级别的下拉列表\r\n    if (level === 'province') {\r\n        citySelect.innerHTML = '';\r\n        districtSelect.innerHTML = '';\r\n    } else if (level === 'city') {\r\n        districtSelect.innerHTML = '';\r\n    }\r\n\r\n    var subList = data.districtList;\r\n    if (subList) {\r\n        var contentSub = new Option('--请选择--');\r\n        var curlevel = subList[0].level;\r\n        if (curlevel === 'street') {\r\n            let mapJsonList = geoJsonData.features;\r\n            let mapJson = {};\r\n            for (let i in mapJsonList) {\r\n                if (mapJsonList[i].properties.name == cityName) {\r\n                    mapJson.features = [].concat(mapJsonList[i]);\r\n                }\r\n            }\r\n            mapData = [];\r\n            mapData.push({\r\n                name: cityName,\r\n                value: Math.random() * 100,\r\n                level: curlevel\r\n            });\r\n            loadMap(cityName, mapJson);\r\n            geoJsonData = mapJson;\r\n            return;\r\n        }\r\n        var curList = document.querySelector('#' + curlevel);\r\n        curList.add(contentSub);\r\n        mapData = [];\r\n        for (var i = 0, l = subList.length; i < l; i++) {\r\n            var name = subList[i].name;\r\n            var citycode = subList[i].adcode;\r\n            mapData.push({\r\n                name: name,\r\n                value: Math.random() * 100,\r\n                cityCode: citycode,\r\n                level: curlevel\r\n            });\r\n            var levelSub = subList[i].level;\r\n            contentSub = new Option(name);\r\n            contentSub.setAttribute(\"value\", levelSub);\r\n            contentSub.center = subList[i].center;\r\n            contentSub.adcode = subList[i].adcode;\r\n            curList.add(contentSub);\r\n        }\r\n        loadMapData(adcode);\r\n        areaData[curlevel] = curList;\r\n    }\r\n\r\n}\r\n\r\nfunction search(obj) {\r\n    console.log('111')\r\n    //清除地图上所有覆盖物\r\n    for (var i = 0, l = polygons.length; i < l; i++) {\r\n        polygons[i].setMap(null);\r\n    }\r\n    var option = obj[obj.options.selectedIndex];\r\n    var keyword = option.text; //关键字\r\n    var adcode = option.adcode;\r\n    cityName = keyword;\r\n    cityCode = adcode;\r\n    district.setLevel(option.value); //行政区级别\r\n    district.setExtensions('all');\r\n    //行政区查询\r\n    //按照adcode进行查询可以保证数据返回的唯一性\r\n    district.search(adcode, function(status, result) {\r\n        if (status === 'complete') {\r\n            getData(result.districtList[0], obj.id, adcode);\r\n        }\r\n    });\r\n}\r\n\r\nfunction setCenter(obj) {\r\n    map.setCenter(obj[obj.options.selectedIndex].center)\r\n}\r\n\r\nvar saveAs = saveAs || (function(view) {\r\n  \"use strict\";\r\n  // IE <10 is explicitly unsupported\r\n  if (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\r\n    return;\r\n  }\r\n  var\r\n     doc = view.document\r\n     // only get URL when necessary in case Blob.js hasn't overridden it yet\r\n    , get_URL = function() {\r\n      return view.URL || view.webkitURL || view;\r\n    }\r\n    , save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\r\n    , can_use_save_link = \"download\" in save_link\r\n    , click = function(node) {\r\n      var event = new MouseEvent(\"click\");\r\n      node.dispatchEvent(event);\r\n    }\r\n    , is_safari = /constructor/i.test(view.HTMLElement) || view.safari\r\n    , is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\r\n    , throw_outside = function(ex) {\r\n      (view.setImmediate || view.setTimeout)(function() {\r\n        throw ex;\r\n      }, 0);\r\n    }\r\n    , force_saveable_type = \"application/octet-stream\"\r\n    // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\r\n    , arbitrary_revoke_timeout = 1000 * 40 // in ms\r\n    , revoke = function(file) {\r\n      var revoker = function() {\r\n        if (typeof file === \"string\") { // file is an object URL\r\n          get_URL().revokeObjectURL(file);\r\n        } else { // file is a File\r\n          file.remove();\r\n        }\r\n      };\r\n      setTimeout(revoker, arbitrary_revoke_timeout);\r\n    }\r\n    , dispatch = function(filesaver, event_types, event) {\r\n      event_types = [].concat(event_types);\r\n      var i = event_types.length;\r\n      while (i--) {\r\n        var listener = filesaver[\"on\" + event_types[i]];\r\n        if (typeof listener === \"function\") {\r\n          try {\r\n            listener.call(filesaver, event || filesaver);\r\n          } catch (ex) {\r\n            throw_outside(ex);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    , auto_bom = function(blob) {\r\n      // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n      // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n      if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n        return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\r\n      }\r\n      return blob;\r\n    }\r\n    , FileSaver = function(blob, name, no_auto_bom) {\r\n      if (!no_auto_bom) {\r\n        blob = auto_bom(blob);\r\n      }\r\n      // First try a.download, then web filesystem, then object URLs\r\n      var\r\n         filesaver = this\r\n        , type = blob.type\r\n        , force = type === force_saveable_type\r\n        , object_url\r\n        , dispatch_all = function() {\r\n          dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\r\n        }\r\n        // on any filesys errors revert to saving with object URLs\r\n        , fs_error = function() {\r\n          if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\r\n            // Safari doesn't allow downloading of blob urls\r\n            var reader = new FileReader();\r\n            reader.onloadend = function() {\r\n              var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n              var popup = view.open(url, '_blank');\r\n              if(!popup) view.location.href = url;\r\n              url=undefined; // release reference before dispatching\r\n              filesaver.readyState = filesaver.DONE;\r\n              dispatch_all();\r\n            };\r\n            reader.readAsDataURL(blob);\r\n            filesaver.readyState = filesaver.INIT;\r\n            return;\r\n          }\r\n          // don't create more object URLs than needed\r\n          if (!object_url) {\r\n            object_url = get_URL().createObjectURL(blob);\r\n          }\r\n          if (force) {\r\n            view.location.href = object_url;\r\n          } else {\r\n            var opened = view.open(object_url, \"_blank\");\r\n            if (!opened) {\r\n              // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\r\n              view.location.href = object_url;\r\n            }\r\n          }\r\n          filesaver.readyState = filesaver.DONE;\r\n          dispatch_all();\r\n          revoke(object_url);\r\n        }\r\n      ;\r\n      filesaver.readyState = filesaver.INIT;\r\n      if (can_use_save_link) {\r\n        object_url = get_URL().createObjectURL(blob);\r\n        setTimeout(function() {\r\n          save_link.href = object_url;\r\n          save_link.download = name;\r\n          click(save_link);\r\n          dispatch_all();\r\n          revoke(object_url);\r\n          filesaver.readyState = filesaver.DONE;\r\n        });\r\n        return;\r\n      }\r\n      fs_error();\r\n    }\r\n    , FS_proto = FileSaver.prototype\r\n    , saveAs = function(blob, name, no_auto_bom) {\r\n      return new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\r\n    }\r\n  ;\r\n  // IE 10+ (native saveAs)\r\n  if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\r\n    return function(blob, name, no_auto_bom) {\r\n      name = name || blob.name || \"download\";\r\n      if (!no_auto_bom) {\r\n        blob = auto_bom(blob);\r\n      }\r\n      return navigator.msSaveOrOpenBlob(blob, name);\r\n    };\r\n  }\r\n  FS_proto.abort = function(){};\r\n  FS_proto.readyState = FS_proto.INIT = 0;\r\n  FS_proto.WRITING = 1;\r\n  FS_proto.DONE = 2;\r\n  FS_proto.error =\r\n  FS_proto.onwritestart =\r\n  FS_proto.onprogress =\r\n  FS_proto.onwrite =\r\n  FS_proto.onabort =\r\n  FS_proto.onerror =\r\n  FS_proto.onwriteend =\r\n    null;\r\n  return saveAs;\r\n}(\r\n    typeof self !== \"undefined\" && self\r\n  || typeof window !== \"undefined\" && window\r\n  || this.content\r\n));\r\n// `self` is undefined in Firefox for Android content script context\r\n// while `this` is nsIContentFrameMessageManager\r\n// with an attribute `content` that corresponds to the window\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n module.exports.saveAs = saveAs;\r\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\r\n define(\"FileSaver.js\", function() {\r\n  return saveAs;\r\n });\r\n}","html":"","externalScripts":"https://webapi.amap.com/maps?v=1.4.11&key=35a871e5905ecfd749bd998448b9cd03,https://webapi.amap.com/maps?v=1.4.11&key=35a871e5905ecfd749bd998448b9cd03&plugin=AMap.DistrictSearch,https://webapi.amap.com/ui/1.0/main.js?v=1.0.11","updaterUID":"bd-1873793385","theme":"","layout":"","viewCount":1136,"userName":"w***3","commentCount":0,"starCount":3,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xybNQIwEC.png?v=1577784759024","isCustomThumbnail":0,"builtinTags":["category-work","series-map","visualMap"],"customTags":[],"updaterUserName":"w***3"}}