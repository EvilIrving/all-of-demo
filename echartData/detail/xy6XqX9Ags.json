{"status":0,"data":{"cid":"xy6XqX9Ags","authorUid":"obd-olkA2wM1LpX6NTAT1647s5RvLoXTD0M","authorUserName":"T***Y","title":"螺旋图","description":"","latestVersion":3,"alwaysLatest":1,"createTime":"2021-11-12T03:46:41.000Z","lastUpdateTime":"2021-11-12T03:49:13.000Z","auth":2,"uid":"obd-olkA2wM1LpX6NTAT1647s5RvLoXTD0M","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-12T03:49:13.000Z","code":"/*\n 此图为横向图，需要将 html 中的容器顺时针旋转90度，如：\n    <div\n      id=\"container\"\n      style=\"width: 100%; height: 1000px; transform: rotate(90deg)\"\n    ></div>\n*/\n\nvar areas = [\n    '北京',\n    '天津',\n    '河北',\n    '山西',\n    '内蒙古',\n    '辽宁',\n    '吉林',\n    '黑龙江',\n    '上海',\n    '江苏',\n    '浙江',\n    '安徽',\n    '福建',\n    '江西',\n    '山东',\n    '河南',\n    '湖北',\n    '湖南',\n    '广东',\n    '广西',\n    '海南',\n    '重庆',\n    '四川',\n    '贵州',\n    '云南',\n    '西藏',\n    '陕西',\n    '甘肃',\n    '青海',\n    '宁夏',\n    '新疆',\n];\n\nvar colors = [\n    '#B4F493',\n    '#B3F393',\n    '#B0F092',\n    '#ACED91',\n    '#AAEB91',\n    '#A9EB93',\n    '#A5E692',\n    '#A3E492',\n    '#9FE293',\n    '#9DE093',\n    '#9BDF92',\n    '#97DB92',\n    '#95DB93',\n    '#92D794',\n    '#8FD491',\n    '#8DD394',\n    '#8BD193',\n    '#88D091',\n    '#87CE93',\n    '#83CA92',\n    '#7DC794',\n    '#7AC492',\n    '#76C291',\n    '#75C192',\n    '#73BE93',\n    '#6FBB93',\n    '#6DB993',\n    '#6AB794',\n    '#67B494',\n    '#62B192',\n    '#5FAE93',\n    '#5CAC93',\n    '#59A893',\n    '#56A796',\n    '#53A493',\n    '#50A293',\n    '#4EA094',\n    '#4B9C93',\n    '#499A93',\n    '#449992',\n    '#409695',\n    '#3E9494',\n    '#3B9192',\n    '#399193',\n    '#368D94',\n];\n\nvar amounts = [\n    49,\n    14,\n    14,\n    1,\n    5,\n    26,\n    13,\n    14,\n    4,\n    13,\n    7,\n    3,\n    7,\n    6,\n    8,\n    13,\n    14,\n    22,\n    19,\n    3,\n    1,\n    2,\n    17,\n    6,\n    7,\n    0,\n    10,\n    4,\n    1,\n    0,\n    1,\n];\nvar soureData = [];\nareas.forEach(function (area, index) {\n    if (amounts[index]) {\n        soureData.push({\n            name: area,\n            amount: amounts[index],\n        });\n    }\n});\nsoureData.sort(function (a, b) {\n    return a.amount - b.amount;\n});\nvar graphicChildren = [];\nvar mid = 3;\nvar max = Math.max.apply(Math, amounts),\n    min = Math.min.apply(Math, amounts);\nvar data = [];\nsoureData.forEach(function (item, index) {\n    var maxScale = 1,\n        minScale = 0.3,\n        stepRadius = (2 * Math.PI) / soureData.length,\n        stepScale = (maxScale - minScale) / (max - min),\n        countScale = item.amount * stepScale * 3,\n        curRadius = (index + 0.5) * stepRadius,\n        curScale = countScale > maxScale ? maxScale : countScale < minScale ? minScale : countScale,\n        startR =\n            index > mid\n                ? ((item.amount * 450) / soureData.slice(-1)[0].amount) * 0.95\n                : (item.amount * 460) / soureData.slice(-1)[0].amount + 20,\n        curR = [\n            startR,\n            startR * (index > mid ? 0.75 : 1.12),\n            startR * (index > mid ? 0.8 : 1.17) * (index > 11 ? 0.8 : 1.17),\n        ];\n    for (var j = 0; j < 2; j++) {\n        var curX = Math.sin(curRadius) * curR[j],\n            curY = -Math.cos(curRadius) * curR[j];\n        graphicChildren.push({\n            type: 'group',\n            bounding: 'raw',\n            // 此注释只针对横向图。调整文字的纵向位置，数字小上移，数字大下移\n            x:\n                index == 28\n                    ? curX - 8\n                    : index == 27\n                    ? curX - 9\n                    : index == 26\n                    ? curX - 11\n                    : index == 25\n                    ? curX - 14\n                    : index == 24\n                    ? curX - 15\n                    : index == 23\n                    ? curX - 17\n                    : index == 22\n                    ? curX - 17\n                    : index == 21\n                    ? curX - 15\n                    : index == 20\n                    ? curX - 15\n                    : index == 19\n                    ? curX - 13\n                    : index == 18\n                    ? curX - 11\n                    : index == 17\n                    ? curX - 9\n                    : index == 16\n                    ? curX - 9\n                    : index == 15\n                    ? curX - 5\n                    : index == 14\n                    ? curX - 1\n                    : index == 13\n                    ? curX + 2\n                    : index == 12\n                    ? curX + 4\n                    : index == 11\n                    ? curX + 7\n                    : index == 10\n                    ? curX + 10\n                    : index == 9\n                    ? curX + 12\n                    : index == 8\n                    ? curX + 14\n                    : index == 7\n                    ? curX + 15\n                    : index == 6\n                    ? curX + 14\n                    : index == 5\n                    ? curX + 13\n                    : index == 4 && j == 1\n                    ? curX + 10\n                    : index == 4\n                    ? curX + 11.5\n                    : index == 3 && j == 1\n                    ? curX - 2.2\n                    : index == 2 && j == 1\n                    ? curX - 1.6\n                    : index == 1 && j == 1\n                    ? curX - 1\n                    : index == 0 && j == 1\n                    ? curX - 0.3\n                    : curX,\n            // 此注释只针对横向图。调整文字的横向位置，数字小靠右，数字大靠左                                                                                                                        : curX,\n            y:\n                index == 28\n                    ? curY + 4\n                    : index == 27\n                    ? curY + 5\n                    : index == 26 && j == 1\n                    ? curY - 1\n                    : index == 26\n                    ? curY + 5\n                    : index == 25 && j == 1\n                    ? curY - 3\n                    : index == 25\n                    ? curY + 3\n                    : index == 24 && j == 1\n                    ? curY - 3\n                    : index == 24\n                    ? curY + 3\n                    : index == 23 && j == 1\n                    ? curY - 1\n                    : index == 23\n                    ? curY + 2\n                    : index == 22 && j == 1\n                    ? curY + 2\n                    : index == 22\n                    ? curY + 9\n                    : index == 21 && j == 1\n                    ? curY + 4\n                    : index == 21\n                    ? curY + 8\n                    : index == 20 && j == 1\n                    ? curY + 7\n                    : index == 20\n                    ? curY + 11\n                    : index == 19 && j == 1\n                    ? curY + 9\n                    : index == 19\n                    ? curY + 13\n                    : index == 18 && j == 1\n                    ? curY + 10\n                    : index == 18\n                    ? curY + 15\n                    : index == 17 && j == 1\n                    ? curY + 13\n                    : index == 17\n                    ? curY + 15\n                    : index == 16\n                    ? curY + 18\n                    : index == 15\n                    ? curY + 18\n                    : index == 14\n                    ? curY + 18\n                    : index == 13\n                    ? curY + 17\n                    : index == 12\n                    ? curY + 16\n                    : index == 11 && j == 1\n                    ? curY + 13\n                    : index == 11\n                    ? curY + 15\n                    : index == 10 && j == 1\n                    ? curY + 11\n                    : index == 10\n                    ? curY + 14\n                    : index == 9 && j == 1\n                    ? curY + 9\n                    : index == 9\n                    ? curY + 13\n                    : index == 8 && j == 1\n                    ? curY + 6\n                    : index == 8\n                    ? curY + 8\n                    : index == 7 && j == 1\n                    ? curY + 2\n                    : index == 7\n                    ? curY + 5\n                    : index == 6 && j == 1\n                    ? curY - 1\n                    : index == 6\n                    ? curY + 1\n                    : index == 5 && j == 1\n                    ? curY - 5\n                    : index == 5\n                    ? curY - 3\n                    : index == 4 && j == 1\n                    ? curY - 7\n                    : index == 4\n                    ? curY - 5\n                    : index == 3 && j == 1\n                    ? curY - 6\n                    : index == 2 && j == 1\n                    ? curY - 5\n                    : index == 1 && j == 1\n                    ? curY - 5\n                    : index == 0 && j == 1\n                    ? curY - 5\n                    : curY,\n            rotation: Math.PI / 2,\n            scaleX: curScale,\n            scaleY: curScale,\n            children: [\n                {\n                    type: 'text',\n                    z: 100,\n                    style: {\n                        fill: index > mid ? 'white' : 'black',\n                        text: j == 0 ? item.name : item.amount.toString(),\n                        textAlign: 'left',\n                    },\n                },\n            ],\n        });\n    }\n    data.push({\n        name: item.name,\n        value: item.amount,\n        itemStyle: {\n            color: colors[index],\n            borderWidth: 0,\n        },\n        label: {\n            show: false,\n        },\n        labelLine: {\n            show: false,\n        },\n    });\n});\n\nfunction getRandomColors(n) {\n    var colors = [];\n    for (var index = 0; index < n; index++) {\n        colors.push('#' + ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).substr(-6));\n    }\n    return colors;\n}\nvar options = {\n    tooltip: {\n        trigger: 'item',\n    },\n    toolbox: {\n        left: 0,\n        bottom: 0,\n        show: true,\n        feature: {\n            mark: {\n                show: true,\n            },\n            dataView: {\n                show: true,\n                readOnly: false,\n            },\n            restore: {\n                show: true,\n            },\n            saveAsImage: {\n                show: true,\n            },\n        },\n    },\n    graphic: {\n        type: 'group',\n        left: 'center',\n        top: '60%',\n        bounding: 'raw',\n        z: 100,\n        children: graphicChildren,\n    },\n    series: [\n        {\n            name: '专利授权数',\n            type: 'pie',\n            radius: [20, 450],\n            center: ['50%', '60%'],\n            label: {\n                show: true,\n            },\n            roseType: 'area',\n            data: data,\n        },\n    ],\n};\nmyChart.setOption(options);\n","html":"","externalScripts":"","updaterUID":"obd-olkA2wM1LpX6NTAT1647s5RvLoXTD0M","theme":"infographic","layout":"","viewCount":0,"userName":"T***Y","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xy6XqX9Ags.png?v=1636688801224","isCustomThumbnail":1,"builtinTags":["category-work","graphic","series-pie","toolbox","tooltip"],"customTags":[],"updaterUserName":"T***Y"}}