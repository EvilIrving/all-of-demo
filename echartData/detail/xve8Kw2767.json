{"status":0,"data":{"cid":"xve8Kw2767","authorUid":"bd-1080360291","authorUserName":"超***l","title":"可拖动流程图","description":"节点可拖动\n前后点击两个节点，可以对节点进行连接\n点击连线，可以删除连线\n动态添加、删除节点","latestVersion":1,"alwaysLatest":1,"createTime":"2019-06-07T09:41:02.000Z","lastUpdateTime":"2019-06-07T09:41:02.000Z","auth":2,"uid":"bd-1080360291","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-07T09:41:02.000Z","code":"//\n// 节点可拖动\n// 前后点击两个节点，可以对节点进行连接\n// 点击连线，可以删除连线\n// 动态添加、删除节点 ，还未完成\n\n\n//关系坐标\nvar xydata = [\n    [0, 1],\n    [1, 2],\n    [2, 3]\n];\n//节点坐标\nvar dataArr = [{\n        name: 'A',\n        value: [15, 50]\n    },\n    {\n        name: 'B',\n        value: [-50, 10]\n    },\n    {\n        name: 'C',\n        value: [-55, -70]\n    },\n    {\n        name: 'D',\n        value: [40, -40]\n    },\n]\n\n//设置点的大小\nvar symbolSize = 70;\n\n//当0时候表示输入起点坐标，其他值输入终点坐标\nvar position = 0;\n//起点\nvar positionSource;\n//钟点\nvar positionTarget;\n//设置判断点击线还是点击点\nvar ok = 1;\n//删除数组的索引位置\nvar del;\n    \nvar links = xydata.map(function(item, i) {\n    return {\n        source: xydata[i][0],\n        target: xydata[i][1]\n    };\n});\n\nvar option = {\n    title: {\n        text: '可拖动流程图'\n    },\n    grid: {\n\n    },\n    //定义X轴 \n    xAxis: {\n        min: -100,\n        max: 100,\n        type: 'value',\n        axisLine: {\n            onZero: false\n        },\n        show: false\n    },\n    yAxis: {\n        min: -100,\n        max: 100,\n        type: 'value',\n        axisLine: {\n            onZero: false\n        },\n        show: false\n    },\n    series: [{\n        //设置id很重要 \n        id: 'a',\n        //设置为甘特图\n        type: 'graph',\n        layout: 'none',\n        coordinateSystem: 'cartesian2d',\n        //设置球的大小\n        symbolSize: symbolSize,\n\n        label: {\n            show: true,\n            formatter: function(d, i) {\n                return dataArr[d.dataIndex].name;\n            }\n        },\n        itemStyle: {\n\n            borderColor: '#22faf7',\n            borderWidth: 3,\n            color: '#123456',\n        },\n        //设置连线形式为箭头\n        edgeSymbol: ['circle', 'arrow'],\n        edgeSymbolSize: [4, 10],\n        //指定数据数组\n        data: echarts.util.map(dataArr, function(item, di) {\n            return item.value;\n        }),\n        //指定连线方式\n        edges: links,\n        //指定连线颜色\n        lineStyle: {\n            normal: {\n                color: '#22faf7'\n            }\n        },\n    }],\n\n};\n\n\n//在demo里，必须要加setTimeout ，否则执行 myChart.convertToPixel 会报错\nsetTimeout(function() {\n    initGraphic();\n    //窗口大小改事件\n    window.addEventListener('resize', updatePosition);\n}, 0);\n\n//重新定位图形元素\nfunction updatePosition() {\n    myChart.setOption({\n        graphic: echarts.util.map(dataArr, function(item, dataIndex) {\n            return {\n                position: myChart.convertToPixel('grid', item.value),\n            };\n        })\n    });\n}\n\n//绘制图形元素\nfunction initGraphic() {\n    myChart.setOption({\n        graphic: echarts.util.map(dataArr, function(item, dataIndex) {\n            return {\n                //圆形\n                type: 'circle',\n                //将坐标转化为像素\n                position: myChart.convertToPixel('grid', item.value),\n                shape: {\n                    // 拖动点的大小\n                    r: symbolSize / 2 - 2\n                },\n                style: {\n                    fill: '#3FA7DC50',\n                    borderColor: '#22faf7',\n                    borderWidth: 1,\n                },\n\n                //指定虚拟圈是否可见  false 可见\n                invisible: false,\n                //指定圈被拖拽（可以与不可以）\n                draggable: true,\n                //ondrag: echarts.util.curry(onPointDragging, dataIndex),\n                onclick: echarts.util.curry(initLinks, dataIndex),\n                onmouseup: echarts.util.curry(onPointDragging, dataIndex),\n\n                //层级\n                z: 100\n\n            };\n        })\n    });\n}\n//图形元素拖动后， 修改节点位置\nfunction onPointDragging(dataIndex, dx, dy) {\n    dataArr[dataIndex].value = myChart.convertFromPixel('grid', this.position);\n    // Update data\n    myChart.setOption({\n        series: [{\n            id: 'a',\n            data: dataArr\n        }]\n    });\n\n}\n\n//绘制添加的连线\nfunction initLinks(dataIndex){\n    for (var i = 0; i < dataArr.length; i++) {\n            if (i == dataIndex) {\n                ok = 0;\n                if (position == 0) {\n                    positionSource = i;\n                    position = 1;\n                } else {\n                    positionTarget = i;\n                    position = 0;\n                    xydata.push([positionSource, positionTarget])\n                    //当xydata值改变时linkss方法需要重新跑一变\n                    var linkss = xydata.map(function (item, i) {\n                        return {\n                            source: xydata[i][0],\n                            target: xydata[i][1]\n                        };\n                    });\n                    //重新载入的东西都写在这里\n                    myChart.setOption({\n                        series: [{\n                            edges: linkss,\n                            //指定连线颜色\n                            lineStyle: {\n                                normal: {\n                                    color: '#22faf7'\n                                }\n                            }\n                        }]\n                    });\n                    return true;\n                }\n                break;\n            }\n\n        }\n}\n\n//点击事件 , 删除连线\nmyChart.on('click', function (params) {\n    if (params.componentType != 'series' || params.dataType != \"edge\") {\n        return;\n    }\n\n    var a = [params.data.source, params.data.target]\n    for (var i = 0; i < xydata.length; i++) {\n        if (params.data.source == xydata[i][0] && params.data.target == xydata[i][1]) {\n            del = i;\n            xydata.splice(del, 1);\n            //当xydata值改变时linkss方法需要重新跑一变\n            var linkss = xydata.map(function (item, i) {\n                return {\n                    source: xydata[i][0],\n                    target: xydata[i][1]\n                };\n            });\n            //重新载入的东西都写在这里\n            myChart.setOption({\n                series: [{\n                    edges: linkss,\n                }]\n            });\n            return true;\n        } \n    }\n\n});\n    ","html":"","externalScripts":"","updaterUID":"bd-1080360291","theme":"dark","layout":"","viewCount":5883,"userName":"超***l","commentCount":13,"starCount":31,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xve8Kw2767.png?v=1559900462933","isCustomThumbnail":1,"builtinTags":["category-work","graphic","grid","series-graph","title"],"customTags":[],"updaterUserName":"超***l"}}