{"status":0,"data":{"cid":"xDl4iMrzox","authorUid":"bd-824743424","authorUserName":"m***7","title":"3dMap","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2019-02-13T10:17:31.000Z","lastUpdateTime":"2019-02-13T10:17:31.000Z","auth":2,"uid":"bd-824743424","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.1","versionCreateTime":"2019-02-13T10:17:31.000Z","code":"    // 城市、国家 地理坐标\n    const geoCoordMap = {\n        '南宁': [108.479, 23.1152],\n        '广州': [113.5107, 23.2196],\n        '重庆': [107.7539, 30.1904],\n        '芬兰': [24.909912, 60.169095],\n        '美国': [-100.696295, 33.679979],\n        '日本': [139.710164, 35.706962],\n        '韩国': [126.979208, 37.53875],\n        '瑞士': [7.445147, 46.956241],\n        '东南亚': [117.53244, 5.300343],\n        '澳大利亚': [135.193845, -25.304039],\n        '德国': [13.402393, 52.518569],\n        '英国': [-0.126608, 51.208425],\n        '加拿大': [-102.646409, 59.994255]\n    };\n\n    // 连线起始位置\n    let CQData = [\n        [{\n            name: '重庆'\n        }, {\n            name: \"英国\",\n            value: 70\n        }]\n    ];\n\n    let GZData = [\n        [{\n            name: '广州'\n        }, {\n            name: \"日本\",\n            value: 30\n        }],\n    ];\n\n    let NNData = [\n        [{\n            name: '南宁'\n        }, {\n            name: \"加拿大\",\n            value: 80\n        }],\n        [{\n            name: '南宁'\n        }, {\n            name: \"美国\",\n            value: 100\n        }],\n        [{\n            name: '南宁'\n        }, {\n            name: \"澳大利亚\",\n            value: 95\n        }],\n        [{\n            name: '南宁'\n        }, {\n            name: \"瑞士\",\n            value: 50\n        }]\n    ];\n\n    // 根据起始位置，获得线的地理位置\n    function convertData(data) {\n\n        let res = [];\n        for (let i = 0; i < data.length; i++) {\n\n            let dataItem = data[i];\n            let [fromCoord, toCoord] = [geoCoordMap[dataItem[1].name], geoCoordMap[dataItem[0].name]];\n\n            if (fromCoord && toCoord) res.push([fromCoord, toCoord]);\n        }\n        return res;\n    }\n\n    let [series2d, series3d] = [\n        [],\n        []\n    ];\n    [\n        ['重庆', CQData],\n        ['广州', GZData],\n        ['南宁', NNData]\n    ].forEach(function(item) {\n\n        // 2d平面地图 + 散点\n        series2d.push({\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            zlevel: 3,\n            rippleEffect: {\n                brushType: 'stroke'\n            },\n            label: {\n                fontSize: 24,\n                show: true,\n                position: 'right',\n                formatter: '{b}'\n            },\n            itemStyle: {\n                normal: {\n                    color: '#f5f802'\n                }\n            },\n            data: item[1].map(function(dataItem) {\n\n                return {\n                    name: dataItem[1].name,\n                    value: geoCoordMap[dataItem[1].name],\n                    symbolSize: dataItem[1].value / 4\n                };\n            })\n        }, {\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            zlevel: 3,\n            rippleEffect: {\n                brushType: 'stroke'\n            },\n            label: {\n                show: true,\n                position: 'left',\n                fontSize: 18,\n                formatter: '{b}'\n            },\n            itemStyle: {\n                normal: {\n                    color: '#ff0000'\n                }\n            },\n            data: [{\n                name: item[0],\n                value: geoCoordMap[item[0]],\n                symbolSize: parseInt(Math.random() * 20 + 10),\n                label: {\n                    position: 'right'\n                }\n            }]\n        });\n\n        // 3d连线\n        series3d.push({\n            type: 'lines3D',\n            effect: {\n                show: true,\n                period: 3,\n                trailLength: 0.1\n            },\n            lineStyle: {\n                color: '#9ae5fc',\n                width: 1,\n                opacity: 0.6\n            },\n            tooltip: {\n                show: true,\n                trigger: 'item',\n                formatter() {\n\n                    console.log(3);\n                    return 'jhfjdsagfjsdgfisdgfiusagfuiasgf';\n                }\n            },\n            data: convertData(item[1])\n        }, {\n            type: 'scatter3D',\n            name: 'location',\n            coordinateSystem: 'globe',\n            blendMode: 'lighter',\n            symbolSize: 10,\n            itemStyle: {\n                color: '#0276f3',\n                opacity: 1\n            },\n            label: {\n                show: true,\n                formatter: param => param.data.name\n            },\n            data: [{\n                name: '中国',\n                value: [116.4551, 40.2539, 0]\n            }]\n        })\n    });\n\n    let chart = echarts.init(document.createElement('canvas'), null, {\n        width: 4096,\n        height: 2048\n    });\n\n    // 添加2d地图 + 散点图\n    chart.setOption({\n        backgroundColor: 'rgba(3, 28, 72, 0.3)',\n        tooltip: {\n            backgroundColor: 'red',\n            alwaysShowContent: true,\n            formatter(item) {\n\n                console.log(item);\n                return 'jhfjdsagfjsdgfisdgfiusagfuiasgf';\n            }\n        },\n        geo: {\n            type: 'map',\n            map: 'world',\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            zoom: 0,\n            boundingCoords: [\n                [-180, 90],\n                [180, -90]\n            ],\n            roam: false,\n            itemStyle: {\n                borderColor: '#000d2d',\n                areaColor: '#2455ad',\n                emphasis: {\n                    areaColor: '#357cf8'\n                }\n            },\n            label: {\n                fontSize: 24\n            }\n        },\n        series: series2d\n    });\n\n    // 添加地球\n    let option = {\n        backgroundColor: 'transparent',\n        tooltip: {\n            show: true,\n            alwaysShowContent: true,\n            formatter(item) {\n\n                console.log(1);\n                return item.name;\n            }\n        },\n        globe: {\n            baseTexture: chart,\n            top: 'middle',\n            left: 'center',\n            displacementScale: 0,\n            environment: 'examples/data-gl/asset/starfield.jpg',\n            shading: 'color',\n            viewControl: {\n                distance: 240,\n                autoRotate: false\n            }\n        },\n        roam: true,\n        series: series3d\n    };\n\n    myChart.setOption(option, true);","html":"","externalScripts":"https://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js,/dep/echarts/map/js/world.js","updaterUID":"bd-824743424","theme":"","layout":"","viewCount":1254,"userName":"m***7","commentCount":0,"starCount":7,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xDl4iMrzox.png?v=1550053051531","isCustomThumbnail":0,"builtinTags":["category-work","globe","series-lines3D","series-scatter3D","tooltip"],"customTags":[],"updaterUserName":"m***7"}}