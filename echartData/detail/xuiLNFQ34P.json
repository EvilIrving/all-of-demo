{"status":0,"data":{"cid":"xuiLNFQ34P","authorUid":"bd-6442928284","authorUserName":"流***r","title":"quan-画线算法","description":"缠中说禅画线","latestVersion":4,"alwaysLatest":0,"createTime":"2021-06-25T16:16:35.000Z","lastUpdateTime":"2021-06-25T16:16:35.000Z","auth":2,"uid":"bd-6442928284","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"5.1.2","versionCreateTime":"2021-06-27T15:31:51.000Z","code":"// -10% ~ 10% 随机数\nconst rnd = () => 0.2 * Math.random() - 0.1 + 0.003;\n// 随机漫步\nconst randomWalk = (count) => {\n  const ps = [1];\n  for (let i = 1; i < count; i++) {\n    ps[i] = Number((ps[i - 1] * (1 + rnd())).toFixed(2));\n  }\n  return ps;\n};\n\n// const prices = randomWalk(500);\n\n// localStorage.setItem('rnd_prices', JSON.stringify(prices));\nconst prices = JSON.parse(localStorage.getItem('rnd_prices'));\n\n// 不限制交易次数 一共可以交易多少次\nconst getInfinity = (prices) => {\n    const bIdxs = [];\n    const sIdxs = [];\n    let value = 0;\n    \n    for (let i = 1; i < prices.length - 1; i++) {\n        const prev = prices[i -1];\n        const current = prices[i];\n        const next = prices[i + 1];\n        // 买点\n        if (current <= prev && current < next) {\n            bIdxs.push(i);\n            value -= current;\n        }\n        // 卖点\n        if(current > prev && current >= next) {\n            sIdxs.push(i);\n            value += current;\n        }\n    }\n    \n    // 如果第一笔是卖 将第一个数据作为买点\n    if (sIdxs[0] < bIdxs[0]) {\n        bIdxs.unshift(0);\n        value -= prices[0];\n    }\n    \n    // 如果最后一笔是买，将最后一个数据作为卖点\n    if (bIdxs[bIdxs.length - 1] > sIdxs[sIdxs.length - 1]) {\n        sIdxs.push(prices.length - 1);\n        value += prices[prices.length - 1];\n    }\n    \n    return {bIdxs, sIdxs, value};\n};\n\nconst dropMinTrade = (prices, {bIdxs, sIdxs, value}) => {\n    let minBIndex = 0;\n    let minSIndex = 0;\n    let minValue = prices[sIdxs[0]] - prices[bIdxs[0]];\n    \n    for (let i = 1; i < bIdxs.length; i++) {\n        const v = prices[sIdxs[i]] - prices[bIdxs[i]];\n        const p = prices[sIdxs[i - 1]] - prices[bIdxs[i]];\n        if (v < minValue) {\n            minBIndex = i;\n            minSIndex = i;\n            minValue = v;\n        }\n        if (p < minValue) {\n            minBIndex = i;\n            minSIndex = i - 1;\n            minValue = p;\n        }\n    }\n    \n    bIdxs.splice(minBIndex, 1);\n    sIdxs.splice(minSIndex, 1);\n    value = value - minValue;\n\n    return {bIdxs, sIdxs, value};\n};\n\n// 另一种算法\nconst getKMax = (arr, k) => {\n    let inf = getInfinity(arr);\n    \n    if (k >= inf.bIdxs.length) {\n        return inf;\n    }\n    \n    while(inf.bIdxs.length > k) {\n        inf = dropMinTrade(arr, inf);\n    }\n    return inf;\n};\n\n// 限制交易k次 最大的收益\nconst getDPKMax = (arr, k) => {\n    const {bIdxs, sIdxs, value} = getInfinity(arr);\n    \n    if (k >= bIdxs.length) {\n        return {bIdxs, sIdxs, value};\n    }\n\n    const len = arr.length;\n    \n    const dk = k * 2;\n    const tb = [];\n    const tbIdxs = [];\n    for (let j = 0; j <= dk; j++) {\n        tb[j] = Array(len + 1 - j).fill(0);\n        tbIdxs[j] = Array(len + 1 - j).fill(0);\n    }\n    \n    for (let j = 1; j <= dk; j++) {\n        const sign = j % 2 === 0 ? -1 : 1;\n        for (let i = len -1 -j; i >= 0; i--) {\n            if (tb[j - 1][i + 1] + sign * arr[i] > tb[j][i + 1]) {\n                tb[j][i] = tb[j - 1][i + 1] + sign * arr[i];\n                tbIdxs[j][i] = tbIdxs[j - 1][i + 1] + ',' + i;\n            } else {\n                tb[j][i] = tb[j][i + 1];\n                tbIdxs[j][i] = tbIdxs[j][i + 1];\n            }    \n        }\n    }\n    \n    const maxValue = tb[dk][0];\n    const idxs = tbIdxs[dk][0].split(',').slice(1).map(Number).reverse();\n    \n    return {\n        value: maxValue,\n        bIdxs: idxs.filter((_,i) => i % 2 === 0),\n        sIdxs: idxs.filter((_,i) => i % 2 === 1)\n    };\n};\n\nconst dataSet = prices.map((v, index) => [index, v]);\n\n// 上证日线数据\nconst shDataUrl = 'https://money.finance.sina.com.cn/quotes_service/api/json_v2.php/CN_MarketData.getKLineData?symbol=sh000001&scale=240&ma=no&datalen=8000';\n\n// fetch(shDataUrl,{\n//     method: 'GET',\n//     mode: 'cors',\n// }).then(res => {\n//     console.log(res, res.json())\n//     return res.json();\n// }).then(json => {\n//     console.log('...gggg...', json);\n// }).catch(err => {\n//     console.log('...err..', err);\n// });\n\n// console.time('....ggggg...');\nconst { bIdxs, sIdxs } = getKMax(prices, 6);\n// console.timeEnd('....ggggg...');\n\nconst markPoints = [];\nbIdxs.forEach(v => {\n  markPoints.push({\n    name : '买点',\n    coord: [v, dataSet[v][1]],\n    symbolOffset: [0, 10],\n    itemStyle: {\n      color:'red',\n    },\n   });\n});\n\nsIdxs.forEach(v => {\n  markPoints.push({\n    name : '卖点',\n    coord: [v, dataSet[v][1]],\n    symbolOffset: [0, -10],\n    itemStyle: {\n      color:'yellowgreen',\n    },\n   });\n});\n\noption = {\n    backgroundColor: '#080b30',\n    title: {\n        text: 'quan-infinity',\n        textStyle: {\n          color: '#fff',  \n        },\n    },\n    tooltip: {\n        trigger: 'axis',\n        formatter: params => {\n            const item = params[0];\n            return item.marker + item.data[0] + ', ' + item.data[1];\n        }\n    },\n    grid: {\n        left: 64,\n        right: 16,\n        bottom: 80,\n    },\n    toolbox: {\n        feature: {\n            dataZoom: {\n                yAxisIndex: 'none'\n            },\n            restore: {},\n            saveAsImage: {}\n        }\n    },\n    xAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(255,255,255,0.3)'\n            }\n        },\n        axisTick: {\n            show: false,\n        },\n        splitLine: {\n            show: false,\n        },\n    },\n    yAxis: {\n        axisLine: {\n            show: false,\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            color: 'rgba(255,255,255,0.3)',\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: 'rgba(255,255,255,0.3)'\n            }\n        },\n    },\n    dataZoom: [\n        {\n            type: 'inside',\n            start: 0,\n            end: 1000\n        },\n        {\n            start: 0,\n            end: 1000,\n            handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            handleStyle: {\n                color: '#fff',\n                shadowBlur: 3,\n                shadowColor: 'rgba(0, 0, 0, 0.6)',\n                shadowOffsetX: 2,\n                shadowOffsetY: 2\n            }\n        }\n    ],\n    series: [{\n        type: 'line',\n        lineStyle: {\n            color: \"#6c50f3\",\n        },\n        markPoint : {\n            symbol: 'circle',\n            symbolSize: 10,\n            data : markPoints,\n        },\n        data: dataSet,\n    }],\n};","html":"","externalScripts":"","updaterUID":"bd-6442928284","theme":"","layout":"","viewCount":0,"userName":"流***r","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xuiLNFQ34P.png?v=1624807911522","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","markPoint","series-line","title","toolbox","tooltip"],"customTags":["line","可视化","画线","缠中说禅","趋势线"],"updaterUserName":"流***r"}}