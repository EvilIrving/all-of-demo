{"status":0,"data":{"cid":"xvgeXjS0OC","authorUid":"obd-oE7wt-Hr7H0YYXr40UXym0LkgX6bL4H","authorUserName":"183*****210","title":"项目执行进度跟踪","description":"仿机场航班甘特图（交点和尾点吸附暂没想到办法实现）","latestVersion":1,"alwaysLatest":0,"createTime":"2021-11-15T08:45:15.000Z","lastUpdateTime":"2021-11-15T08:45:15.000Z","auth":2,"uid":"obd-oE7wt-Hr7H0YYXr40UXym0LkgX6bL4H","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-15T08:45:15.000Z","code":"const HEIGHT_RATIO = 0.6;\nconst DIM_CATEGORY_INDEX = 0;\nconst DIM_TIME_ARRIVAL = 1;\nconst DIM_TIME_DEPARTURE = 2;\nconst ACTUAL_TIME_ARRIVAL = 3;\nconst _cartesianXBounds = [];\nconst _cartesianYBounds = [];\nconst rowData = {\n        flight: {\n          data: [\n            [7, '2020-1-1', '2020-1-2', '2020-1-9', 'Project Kick Off'],\n            [6, '2020-1-1', '2020-1-31', '2020-1-24', 'Requirement confirm'],\n            [5, '2020-2-1', '2020-4-30', '2020-4-30', 'Development'],\n            [4, '2020-5-1', '2020-5-31', '2020-6-30', 'SIT'],\n            [3, '2020-6-1', '2020-6-30', '2020-7-15', 'UAT'],\n            [2, '2020-7-1', '2020-7-15', '2020-7-23', 'Go live'],\n            [1, '2020-7-16', '2020-7-31', '', 'Training'],\n            [0, '2020-8-1', '2020-8-31', '', 'Payment'],\n          ],\n          dimensions: ['Parking Apron Index', '开始时间', '结束时间', '实际结束时间'],\n        },\n        parkingApron: {\n          dimensions: ['Name', 'Type'],\n          data: [\n            ['Task01', 'Project Kick Off'],\n            ['Task02', 'Requirement confirm'],\n            ['Task03', 'Development'],\n            ['Task04', 'SIT'],\n            ['Task05', 'UAT'],\n            ['Task06', 'Go live'],\n            ['Task07', 'Training'],\n            ['Task08', 'Payment'],\n          ],\n        },\n      }\n\n function clipRectByRect ( params,rect){\n    return echarts.graphic.clipRectByRect(rect, {\n      x: params.coordSys.x,\n      y: params.coordSys.y,\n      width: params.coordSys.width,\n      height: params.coordSys.height,\n    })\n  }\n\n  function renderGanttItem (params,api) {\n    const categoryIndex = api.value(DIM_CATEGORY_INDEX);\n    const timeStart = api.coord([api.value(DIM_TIME_ARRIVAL), categoryIndex]);\n    const timeEnd = api.coord([api.value(DIM_TIME_DEPARTURE), categoryIndex]);\n    const actualTimeArrival = api.coord([api.value(ACTUAL_TIME_ARRIVAL), categoryIndex]);\n    const { coordSys } = params;\n    _cartesianXBounds[0] = coordSys.x;\n    _cartesianXBounds[1] = coordSys.x + coordSys.width;\n    _cartesianYBounds[0] = coordSys.y;\n    _cartesianYBounds[1] = coordSys.y + coordSys.height;\n    const barLength1 = timeEnd[0] - timeStart[0];\n    const barLength2 = timeEnd[0] - actualTimeArrival[0];\n    const barLength3 = actualTimeArrival[0] - timeEnd[0];\n    // Get the heigth corresponds to length 1 on y axis.\n    const barHeight = api.size([0, 1])[1] * HEIGHT_RATIO;\n    const rectNormal = clipRectByRect(params, {\n      x: timeStart[0],\n      y: timeStart[1] - barHeight,\n      width: barLength1,\n      height: barHeight,\n    });\n    const rectBefore = clipRectByRect(params, {\n      x: actualTimeArrival[0],\n      y: actualTimeArrival[1] - barHeight,\n      width: barLength2,\n      height: barHeight,\n    });\n    const rectAfter = clipRectByRect(params, {\n      x: timeEnd[0],\n      y: timeEnd[1] - barHeight,\n      width: barLength3,\n      height: barHeight,\n    });\n    return {\n      type: 'group',\n      children: [\n        {\n          type: 'rect',\n          ignore: !rectNormal,\n          shape: rectNormal,\n          style: api.style({ fill: '#fac758' }), // 黄色区域-开始时间到结束时间\n        },\n        {\n          type: 'rect',\n          ignore: !rectBefore,\n          shape: rectBefore,\n          style: api.style({ fill: '#3ba272' }), // 绿色区域 - 提前结束\n        },\n        {\n          type: 'rect',\n          ignore: !rectAfter,\n          shape: rectAfter,\n          style: api.style({ fill: '#ee6666' }), // 红色区域-延迟\n        },\n      ],\n    };\n  }\n  \n  function renderAxisLabelItem (params, api){\n    const y = api.coord([0, api.value(0)])[1];\n    if (y < params.coordSys.y + 5) {\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return {\n      type: 'group',\n      position: [10, y],\n      children: [\n        {\n          type: 'path', // task区域\n          shape: {\n            d: 'M0,0 L0,-20 L30,-20 C42,-20 38,-1 50,-1 L70,-1 L70,0 Z',\n            x: 0,\n            y: -20,\n            width: 90,\n            height: 20,\n            layout: 'cover',\n          },\n          style: {\n            fill: '#368c6c',\n          },\n        },\n        {\n          type: 'text', // task字体\n          style: {\n            x: 24,\n            y: -3,\n            text: api.value(1),\n            textVerticalAlign: 'bottom',\n            textAlign: 'center',\n            textFill: '#fff',\n          },\n        },\n        {\n          type: 'text', // 项目名称\n          style: {\n            x: 60,\n            y: -2,\n            textVerticalAlign: 'bottom',\n            textAlign: 'left',\n            text: api.value(2),\n            textFill: '#000',\n          },\n        },\n      ],\n    };\n  }\n  \n   function makeOption() {\n      return {\n        tooltip: {\n          trigger: 'item',\n          show: true,\n          axisPointer: {\n            type: 'line',\n          },\n          formatter(params) {\n            if (params && params.length > 0) {\n              return '';\n            }\n            const { data, value } = params;\n            const end = value[2] ? new Date(value[2]).getTime() : 0;\n            const actual = value[3] ? new Date(value[3]).getTime() : 0;\n            let color = '#ddb30b';\n            if (actual - end > 0) {\n              color = '#ee6666';\n            } else if (actual - end < 0) {\n              color = '#3ba272';\n            }\n            const marker = `<span style=\"display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:${color};\"></span>`;\n            return `${data[4]} <br/>${marker}开始时间：${value[1]}<br/>${marker}结束时间：${value[2]}<br/>${marker}实际结束时间：${value[3]}`;\n          },\n        },\n        animation: false,\n        grid: {\n          show: true,\n          top: 70,\n          bottom: 20,\n          left: 200,\n          right: 20,\n          backgroundColor: '#fff',\n          borderWidth: 0,\n        },\n        dataZoom: [\n          {\n            type: 'slider',\n            xAxisIndex: 0,\n            filterMode: 'weakFilter',\n            height: 20,\n            bottom: 0,\n            start: 0,\n            end: 100,\n            handleIcon:\n              'path://M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n            handleSize: '80%',\n            showDetail: false,\n          },\n          {\n            type: 'inside',\n            id: 'insideX',\n            xAxisIndex: 0,\n            filterMode: 'weakFilter',\n            start: 0,\n            end: 100,\n            zoomOnMouseWheel: false,\n            moveOnMouseMove: true,\n          },\n          {\n            type: 'slider',\n            yAxisIndex: 0,\n            zoomLock: true,\n            width: 10,\n            right: 10,\n            top: 70,\n            bottom: 20,\n            start: 100,\n            end: 0,\n            handleSize: 0,\n            showDetail: false,\n          },\n          {\n            type: 'inside',\n            id: 'insideY',\n            yAxisIndex: 0,\n            start: 95,\n            end: 100,\n            zoomOnMouseWheel: false,\n            moveOnMouseMove: true,\n            moveOnMouseWheel: true,\n          },\n        ],\n        xAxis: {\n          type: 'time',\n          position: 'top',\n          splitLine: {\n            alignWithLabel: true,\n            show: true,\n            lineStyle: {\n              color: ['#E9EDFF'],\n            },\n          },\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n            lineStyle: {\n              color: '#929ABA',\n            },\n          },\n          axisLabel: {\n            color: '#929ABA',\n            inside: false,\n            align: 'center',\n            formatter: (param) => {\n              const formatDate = new Date(param);\n              return `${formatDate.getFullYear()}-${\n                formatDate.getMonth() + 1\n              }-${formatDate.getDate()}`;\n            },\n          },\n          axisPointer: {\n            show: true,\n            label: {\n              backgroundColor: '#004f53',\n              margin: -20,\n            },\n            lineStyle: {\n              color: '#9fbfcd',\n              type: 'solid',\n              width: 1.5,\n            },\n          },\n        },\n        yAxis: {\n          axisTick: { show: false },\n          splitLine: { show: false },\n          axisLine: { show: false },\n          axisLabel: { show: false },\n          min: 0,\n          axisPointer: {\n            show: false,\n          },\n          max: rowData.parkingApron.data.length,\n        },\n        legend: {\n          show: true,\n          data: [\n            {\n              name: '提前完成',\n              itemStyle: { color: '#3ba272' },\n            },\n            {\n              name: '延期完成',\n              itemStyle: { color: '#ee6666' },\n            },\n          ],\n        },\n        series: [\n          {\n            id: 'flightData1',\n            type: 'custom',\n            name: '提前完成',\n            renderItem: renderGanttItem,\n            dimensions: rowData.flight.dimensions,\n            encode: {\n              x: [DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE, ACTUAL_TIME_ARRIVAL],\n              y: DIM_CATEGORY_INDEX,\n              tooltip: [DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE, ACTUAL_TIME_ARRIVAL],\n            },\n            data: rowData.flight.data,\n          },\n          {\n            id: 'flightData2',\n            type: 'custom',\n            name: '延期完成',\n            renderItem: renderGanttItem,\n            dimensions: rowData.flight.dimensions,\n            encode: {\n              x: [DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE, ACTUAL_TIME_ARRIVAL],\n              y: DIM_CATEGORY_INDEX,\n              tooltip: [DIM_TIME_ARRIVAL, DIM_TIME_DEPARTURE, ACTUAL_TIME_ARRIVAL],\n            },\n            data: rowData.flight.data,\n          },\n          {\n            type: 'custom',\n            renderItem: renderAxisLabelItem,\n            dimensions: rowData.parkingApron.dimensions,\n            encode: {\n              x: -1,\n              y: 0,\n            },\n            data: rowData.parkingApron.data.map((item, index) => {\n              return [rowData.parkingApron.data.length - 1 - index].concat(item);\n            }),\n          },\n        ],\n      };\n    }\n  \noption = makeOption()\n","html":"","externalScripts":"","updaterUID":"obd-oE7wt-Hr7H0YYXr40UXym0LkgX6bL4H","theme":"","layout":"","viewCount":0,"userName":"183*****210","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xvgeXjS0OC.png?v=1636965916154","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-custom","tooltip"],"customTags":["甘特图、项目进度、时间轴"],"updaterUserName":"183*****210"}}