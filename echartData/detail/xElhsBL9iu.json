{"status":0,"data":{"cid":"xElhsBL9iu","authorUid":"bd-3448657041","authorUserName":"m***0","title":"市县区地图下钻（乡镇）","description":"太原市地图下钻","latestVersion":1,"alwaysLatest":0,"createTime":"2021-07-02T08:28:18.000Z","lastUpdateTime":"2021-07-02T08:28:18.000Z","auth":2,"uid":"bd-3448657041","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.1.2","versionCreateTime":"2021-07-02T08:28:18.000Z","code":"var gujiaoshi = '/asset/get/s/data-1625208670498-SKRJclMQB.json';\nvar jiancaopingqu = '/asset/get/s/data-1625208708262-boKm1A6PD.json';\nvar jinyuanqu = '/asset/get/s/data-1625208718941-PoBtZhqxM.json';\nvar loufanxian = '/asset/get/s/data-1625208727346-JTXJHhHQz.json';\nvar qingxuxian = '/asset/get/s/data-1625208742104-xNQI5eRpO.json';\nvar taiyuanshi = '/asset/get/s/data-1625214372297-4TvnpZjw0.json';\nvar wanbolinqu = '/asset/get/s/data-1625208774016-t1TTxt8gA.json';\nvar xiaodianqu = '/asset/get/s/data-1625208783562-nfaMGou7A.json';\nvar xinghualingqu = '/asset/get/s/data-1625208789097-xflm8U4oL.json';\nvar yangquxian = '/asset/get/s/data-1625208795375-coGKLP5vv.json';\nvar yingzequ = '/asset/get/s/data-1625208800471-OnOQxGuBi.json';\n\necharts.extendsMap = function (id, opt) {\n    // 实例\n    var chart = this.init(document.getElementById(id));\n\n    var curGeoJson = {};\n    var cityMap = {\n        //\"太原市\": taiyuanshi,\n        \"古交市\": gujiaoshi,\n        \"尖草坪区\": jiancaopingqu,\n        \"晋源区\": jinyuanqu,\n        \"娄烦县\": loufanxian,\n        \"清徐县\": qingxuxian,\n        \"万柏林区\": wanbolinqu,\n        \"小店区\": xiaodianqu,\n        \"杏花岭区\": xinghualingqu,\n        \"阳曲县\": yangquxian,\n        \"迎泽区\": yingzequ,\n    };\n    var geoCoordMap = {\n        '杏花岭区':[112.6442,37.9228],\n        '尖草坪区':[112.4959,37.9810],\n        '万柏林区':[112.4004,37.8689],\n        '晋源区':[112.4355,37.7349],\n        '清徐县':[112.4176,37.5337],\n        '阳曲县':[112.6717,38.1389],\n        '娄烦县':[111.7937,38.0660],\n        '古交市':[112.174353,37.908534],\n        '小店区':[112.564273,37.817974],\n        '迎泽区':[112.6895,37.8662]\n    };\n    var levelColorMap = {\n        1: 'rgba(241, 109, 115, .8)',\n        2: 'rgba(255, 235, 59, .7)',\n        3: 'rgba(147, 235, 248, 1)',\n    };\n\n    var defaultOpt = {\n        mapName: 'china', // 地图展示\n        goDown: false, // 是否下钻\n        bgColor: '#404a59', // 画布背景色\n        activeArea: [], // 区域高亮,同echarts配置项\n        data: [],\n        // 下钻回调(点击的地图名、实例对象option、实例对象)\n        callback: function (name, option, instance) {},\n    };\n    if (opt) opt = this.util.extend(defaultOpt, opt);\n\n    // 层级索引\n    var name = [opt.mapName];\n    var idx = 0;\n    var pos = {\n        leftPlus: 115,\n        leftCur: 150,\n        left: 198,\n        top: 50,\n    };\n\n    var line = [\n        [0, 0],\n        [8, 11],\n        [0, 22],\n    ];\n    // style\n    var style = {\n        font: '18px \"Microsoft YaHei\", sans-serif',\n        textColor: '#eee',\n        lineColor: 'rgba(147, 235, 248, .8)',\n    };\n\n    var handleEvents = {\n        /**\n         * i 实例对象\n         * o option\n         * n 地图名\n         **/\n        resetOption: function (i, o, n) {\n            var breadcrumb = this.createBreadcrumb(n);\n\n            var j = name.indexOf(n);\n            var l = o.graphic.length;\n            if (j < 0) {\n                o.graphic.push(breadcrumb);\n                o.graphic[0].children[0].shape.x2 = 145;\n                o.graphic[0].children[1].shape.x2 = 145;\n                if (o.graphic.length > 2) {\n                    for (var x = 0; x < opt.data.length; x++) {\n                        if (n === opt.data[x].name + '市') {\n                            o.series[0].data = handleEvents.initSeriesData([opt.data[x]]);\n                            break;\n                        } else o.series[0].data = [];\n                    }\n                }\n                name.push(n);\n                idx++;\n            } else {\n                o.graphic.splice(j + 2, l);\n                if (o.graphic.length <= 2) {\n                    o.graphic[0].children[0].shape.x2 = 60;\n                    o.graphic[0].children[1].shape.x2 = 60;\n                    o.series[0].data = handleEvents.initSeriesData(opt.data);\n                }\n                name.splice(j + 1, l);\n                idx = j;\n                pos.leftCur -= pos.leftPlus * (l - j - 1);\n            }\n\n            o.geo.map = n;\n            o.geo.zoom = 0.4;\n            i.clear();\n            i.setOption(o);\n            this.zoomAnimation();\n            opt.callback(n, o, i);\n        },\n\n        /**\n         * name 地图名\n         **/\n        createBreadcrumb: function (name) {\n            var cityToPinyin = {\n                \"古交市\": \"gujiaoshi\",\n                \"尖草坪区\": \"jiancaopingqu\",\n                \"晋源区\": \"jinyuanqu\",\n                \"娄烦县\": \"loufanxian\",\n                \"清徐县\": \"qingxuxian\",\n                \"万柏林区\": \"wanbolinqu\",\n                \"小店区\": \"xiaodianqu\",\n                \"杏花岭区\": \"xinghualingqu\",\n                \"阳曲县\": \"yangquxian\",\n                \"迎泽区\": \"yingzequ\"\n            };\n            var breadcrumb = {\n                type: 'group',\n                id: name,\n                left: pos.leftCur + pos.leftPlus,\n                top: pos.top + 3,\n                children: [\n                    {\n                        type: 'polyline',\n                        left: -90,\n                        top: -5,\n                        shape: {\n                            points: line,\n                        },\n                        style: {\n                            stroke: '#fff',\n                            key: name,\n                            // lineWidth: 2,\n                        },\n                        onclick: function () {\n                            var name = this.style.key;\n                            handleEvents.resetOption(chart, option, name);\n                        },\n                    },\n                    {\n                        type: 'text',\n                        left: -68,\n                        top: 'middle',\n                        style: {\n                            text: name,\n                            textAlign: 'center',\n                            fill: style.textColor,\n                            font: style.font,\n                        },\n                        onclick: function () {\n                            var name = this.style.text;\n                            handleEvents.resetOption(chart, option, name);\n                        },\n                    },\n                    {\n                        type: 'text',\n                        left: -68,\n                        top: 10,\n                        style: {\n                            name: name,\n                            text: cityToPinyin[name] ? cityToPinyin[name].toUpperCase() : '',\n                            textAlign: 'center',\n                            fill: style.textColor,\n                            font: '12px \"Microsoft YaHei\", sans-serif',\n                        },\n                        onclick: function () {\n                            // console.log(this.style);\n                            var name = this.style.name;\n                            handleEvents.resetOption(chart, option, name);\n                        },\n                    },\n                ],\n            };\n\n            pos.leftCur += pos.leftPlus;\n\n            return breadcrumb;\n        },\n\n        // 设置effectscatter\n        initSeriesData: function (data) {\n            var temp = [];\n            for (var i = 0; i < data.length; i++) {\n                var geoCoord = geoCoordMap[data[i].name];\n                if (geoCoord) {\n                    temp.push({\n                        name: data[i].name,\n                        value: geoCoord.concat(data[i].value, data[i].level),\n                    });\n                }\n            }\n            return temp;\n        },\n\n        zoomAnimation: function () {\n            var count = null;\n            var zoom = function (per) {\n                if (!count) count = per;\n                count = count + per;\n                // console.log(per,count);\n                chart.setOption({\n                    geo: {\n                        zoom: count,\n                    },\n                });\n                if (count < 1)\n                    window.requestAnimationFrame(function () {\n                        zoom(0.2);\n                    });\n            };\n            window.requestAnimationFrame(function () {\n                zoom(0.2);\n            });\n        },\n    };\n\n    var option = {\n        backgroundColor: opt.bgColor,\n        graphic: [\n            {\n                type: 'group',\n                left: pos.left,\n                top: pos.top - 4,\n                children: [\n                    {\n                        type: 'line',\n                        left: 0,\n                        top: -20,\n                        shape: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 60,\n                            y2: 0,\n                        },\n                        style: {\n                            stroke: style.lineColor,\n                        },\n                    },\n                    {\n                        type: 'line',\n                        left: 0,\n                        top: 20,\n                        shape: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 60,\n                            y2: 0,\n                        },\n                        style: {\n                            stroke: style.lineColor,\n                        },\n                    },\n                ],\n            },\n            {\n                id: name[idx],\n                type: 'group',\n                left: pos.left + 2,\n                top: pos.top,\n                children: [\n                    {\n                        type: 'polyline',\n                        left: 90,\n                        top: -12,\n                        shape: {\n                            points: line,\n                        },\n                        style: {\n                            stroke: 'transparent',\n                            key: name[0],\n                        },\n                        onclick: function () {\n                            var name = this.style.key;\n                            handleEvents.resetOption(chart, option, name);\n                        },\n                    },\n                    {\n                        type: 'text',\n                        left: 0,\n                        top: 'middle',\n                        style: {\n                            text: name[0] === '太原' ? '太原市' : name[0],\n                            textAlign: 'center',\n                            fill: style.textColor,\n                            font: style.font,\n                        },\n                        onclick: function () {\n                            handleEvents.resetOption(chart, option, '太原');\n                        },\n                    },\n                    {\n                        type: 'text',\n                        left: 0,\n                        top: 10,\n                        style: {\n                            text: 'TAIYUAN',\n                            textAlign: 'center',\n                            fill: style.textColor,\n                            font: '12px \"Microsoft YaHei\", sans-serif',\n                        },\n                        onclick: function () {\n                            handleEvents.resetOption(chart, option, '太原');\n                        },\n                    },\n                ],\n            },\n        ],\n        geo: {\n            map: opt.mapName,\n            // roam: true,\n            zoom: 1,\n            label: {\n                normal: {\n                    show: true,\n                    textStyle: {\n                        color: '#fff',\n                    },\n                },\n                emphasis: {\n                    textStyle: {\n                        color: '#fff',\n                    },\n                },\n            },\n            itemStyle: {\n                normal: {\n                    borderColor: 'rgba(147, 235, 248, 1)',\n                    borderWidth: 1,\n                    areaColor: {\n                        type: 'radial',\n                        x: 0.5,\n                        y: 0.5,\n                        r: 0.8,\n                        colorStops: [\n                            {\n                                offset: 0,\n                                color: 'rgba(147, 235, 248, 0)', // 0% 处的颜色\n                            },\n                            {\n                                offset: 1,\n                                color: 'rgba(147, 235, 248, .2)', // 100% 处的颜色\n                            },\n                        ],\n                        globalCoord: false, // 缺省为 false\n                    },\n                    shadowColor: 'rgba(128, 217, 248, 1)',\n                    // shadowColor: 'rgba(255, 255, 255, 1)',\n                    shadowOffsetX: -2,\n                    shadowOffsetY: 2,\n                    shadowBlur: 10,\n                },\n                emphasis: {\n                    areaColor: '#389BB7',\n                    borderWidth: 0,\n                },\n            },\n            regions: opt.activeArea.map(function (item) {\n                if (typeof item !== 'string') {\n                    return {\n                        name: item.name,\n                        itemStyle: {\n                            normal: {\n                                areaColor: item.areaColor || '#389BB7',\n                            },\n                        },\n                        label: {\n                            normal: {\n                                show: item.showLabel,\n                                textStyle: {\n                                    color: '#fff',\n                                },\n                            },\n                        },\n                    };\n                } else {\n                    return {\n                        name: item,\n                        itemStyle: {\n                            normal: {\n                                borderColor: '#91e6ff',\n                                areaColor: '#389BB7',\n                            },\n                        },\n                    };\n                }\n            }),\n        },\n        series: [\n            {\n                type: 'effectScatter',\n                coordinateSystem: 'geo',\n                // symbol: 'diamond',\n                showEffectOn: 'render',\n                rippleEffect: {\n                    period: 15,\n                    scale: 6,\n                    brushType: 'fill',\n                },\n                hoverAnimation: true,\n                itemStyle: {\n                    normal: {\n                        color: function (params) {\n                            return levelColorMap[params.value[3]];\n                        },\n                        shadowBlur: 10,\n                        shadowColor: '#333',\n                    },\n                },\n                data: handleEvents.initSeriesData(opt.data),\n            },\n        ],\n    };\n\n    chart.setOption(option);\n    // 添加事件\n    chart.on('click', function (params) {\n        var _self = this;\n        if (opt.goDown && params.name !== name[idx]) {\n            if (cityMap[params.name]) {\n                var url = cityMap[params.name];\n                $.get(url, function (response) {\n                    // console.log(response);\n                    curGeoJson = response;\n                    echarts.registerMap(params.name, response);\n                    handleEvents.resetOption(_self, option, params.name);\n                });\n            }\n        }\n    });\n\n    chart.setMap = function (mapName) {\n        var _self = this;\n        if (mapName.indexOf('市') < 0) mapName = mapName + '市';\n        var citySource = cityMap[mapName];\n        if (citySource) {\n            var url = './map/' + citySource + '.json';\n            $.get(url, function (response) {\n                // console.log(response);\n                curGeoJson = response;\n                echarts.registerMap(mapName, response);\n                handleEvents.resetOption(_self, option, mapName);\n            });\n        }\n        // handleEvents.resetOption(this, option, mapName);\n    };\n\n    return chart;\n};\n\n$.getJSON(taiyuanshi, function (geoJson) {\n    echarts.registerMap('太原', geoJson);\n    var myChart = echarts.extendsMap('chart-panel', {\n        bgColor: '#154e90', // 画布背景色\n        mapName: '太原', // 地图名\n        goDown: true, // 是否下钻\n        // 下钻回调\n        callback: function (name, option, instance) {\n            console.log(name, option, instance);\n        },\n        // 数据展示\n        data: [\n            {\n                name: '古交市',\n                value: 10,\n                level: 1,\n            },\n            {\n                name: '阳曲县',\n                value: 12,\n                level: 2,\n            },\n            {\n                name: '万柏林区',\n                value: 11,\n                level: 3,\n            },\n            {\n                name: '晋源区',\n                value: 16,\n                level: 2,\n            },\n            {\n                name: '娄烦县',\n                value: 12,\n                level: 1,\n            },\n        ],\n    });\n});\n","html":"","externalScripts":"","updaterUID":"bd-3448657041","theme":"","layout":"","viewCount":0,"userName":"m***0","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xElhsBL9iu.png?v=1625214498932","isCustomThumbnail":0,"builtinTags":["category-work","geo","graphic","series-effectScatter"],"customTags":[],"updaterUserName":"m***0"}}