{"status":0,"data":{"cid":"xJ06H1IYsw","authorUid":"obd-oMhzRXtzeT8-hXyMStSZIJXaUYQkb27","authorUserName":"墨***埃","title":"3D立体占比饼图","description":"希望能够出一份力，丰富3D生态圈，有问题可以联系QQ:478214961","latestVersion":1,"alwaysLatest":1,"createTime":"2021-01-18T08:57:13.000Z","lastUpdateTime":"2021-01-18T08:57:13.000Z","auth":2,"uid":"obd-oMhzRXtzeT8-hXyMStSZIJXaUYQkb27","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2021-01-18T08:57:14.000Z","code":"/*************************\r\npie3D   改造\r\n\r\n更新时间: 2021.01.18 16:00 v1.0\r\n使用组件: grid3D、xAxis3D、yAxis3D、zAxis3D、surface\r\n EC 版本: 4.8.0\r\n GL 版本：0.4.3\r\n根据用户ZhXand618的模板 进行改造\r\n如果转载: 请注明出处\r\n\r\nQQ:478214961\r\n\r\n*************************\r\n【 getParametricEquation 函数说明 】 :\r\n*************************\r\n    根据传入的\r\n    startRatio（浮点数）: 当前扇形起始比例，取值区间 [0, endRatio)\r\n    endRatio（浮点数）: 当前扇形结束比例，取值区间 (startRatio, 1]\r\n    isSelected（布尔值）:是否选中，效果参照二维饼图选中效果（单选）\r\n    isHovered（布尔值）: 是否放大，效果接近二维饼图高亮（放大）效果（未能实现阴影）\r\n    k（0~1之间的浮点数）：用于参数方程的一个参数，取值 0~1 之间，通过「内径/外径」的值换算而来。\r\n    \r\n    生成 3D 扇形环曲面\r\n\r\n*************************\r\n【 getPie3D 函数说明 】 :\r\n*************************\r\n    根据传入的\r\n    pieData（object）：饼图数据\r\n    internalDiameterRatio（0~1之间的浮点数）：内径/外径的值（默认值 1/2），当该值等于 0 时，为普通饼图\r\n    \r\n    生成模拟 3D 饼图的配置项 option\r\n    \r\n    备注：饼图数据格式示意如下\r\n    [{\r\n        name: '数据1',\r\n        value: 10\r\n    }, {\r\n        // 数据项名称\r\n        name: '数据2',\r\n        value : 56,\r\n        itemStyle:{\r\n            // 透明度\r\n            opacity: 0.5,\r\n            // 扇形颜色\r\n            color: 'green'\r\n        }\r\n    }]\r\n    \r\n*************************\r\n【 鼠标事件监听说明 】 :\r\n*************************\r\n    click： 实现饼图的选中效果（单选）\r\n            大致思路是，通过监听点击事件，获取到被点击数据的系列序号 params.seriesIndex，\r\n            然后将对应扇形向外/向内移动 10% 的距离。\r\n            \r\n    mouseover： 近似实现饼图的高亮（放大）效果\r\n            大致思路是，在饼图外部套一层透明的圆环，然后监听 mouseover 事件，获取\r\n            到对应数据的系列序号 params.seriesIndex 或系列名称 params.seriesName，\r\n            如果鼠标移到了扇形上，则先取消高亮之前的扇形（如果有）,再高亮当前扇形；\r\n            如果鼠标移到了透明圆环上，则只取消高亮之前的扇形（如果有），不做任何高亮。\r\n            \r\n    globalout： 当鼠标移动过快，直接划出图表区域时，有可能监听不到透明圆环的 mouseover，\r\n            导致此前高亮没能取消，所以补充了对 globalout 的监听。\r\n\r\n        \r\n*************************/\r\n\r\n// 生成扇形的曲面参数方程，用于 series-surface.parametricEquation\r\nfunction getParametricEquation(startRatio, endRatio, isSelected, isHovered, k) {\r\n\t// 计算\r\n\tlet midRatio = (startRatio + endRatio) / 2;\r\n\r\n\tlet startRadian = startRatio * Math.PI * 2;\r\n\tlet endRadian = endRatio * Math.PI * 2;\r\n\tlet midRadian = midRatio * Math.PI * 2;\r\n\r\n\t// 如果只有一个扇形，则不实现选中效果。\r\n\tif (startRatio === 0 && endRatio === 1) {\r\n\t\tisSelected = false;\r\n\t}\r\n\r\n\t// 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\r\n\tk = typeof k !== \"undefined\" ? k : 1 / 3;\r\n\r\n\t// 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\r\n\tlet offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\r\n\tlet offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\r\n\r\n\t// 计算高亮效果的放大比例（未高亮，则比例为 1）\r\n\tlet hoverRate = isHovered ? 1.05 : 1;\r\n\r\n\t// 返回曲面参数方程\r\n\treturn {\r\n\t\tu: {\r\n\t\t\tmin: -Math.PI,\r\n\t\t\tmax: Math.PI * 3,\r\n\t\t\tstep: Math.PI / 32\r\n\t\t},\r\n\r\n\t\tv: {\r\n\t\t\tmin: 0,\r\n\t\t\tmax: Math.PI * 2,\r\n\t\t\tstep: Math.PI / 20\r\n\t\t},\r\n\r\n\t\tx: function(u, v) {\r\n\t\t\tif (u < startRadian) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\toffsetX +\r\n\t\t\t\t\tMath.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (u > endRadian) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\toffsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\r\n\t\t},\r\n\r\n\t\ty: function(u, v) {\r\n\t\t\tif (u < startRadian) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\toffsetY +\r\n\t\t\t\t\tMath.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (u > endRadian) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\toffsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\r\n\t\t},\r\n\r\n\t\tz: function(u, v) {\r\n\t\t\tif (u < -Math.PI * 0.5) {\r\n\t\t\t\treturn Math.sin(u);\r\n\t\t\t}\r\n\t\t\tif (u > Math.PI * 2.5) {\r\n\t\t\t\treturn Math.sin(u);\r\n\t\t\t}\r\n\t\t\treturn Math.sin(v) > 0 ? 1 : -1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// 生成模拟 3D 饼图的配置项\r\nfunction getPie3D(pieData, internalDiameterRatio) {\r\n\tlet series = [];\r\n\tlet sumValue = 0;\r\n\tlet startValue = 0;\r\n\tlet endValue = 0;\r\n\tlet legendData = [];\r\n\tlet k =\r\n\t\ttypeof internalDiameterRatio !== \"undefined\" ?\r\n\t\t(1 - internalDiameterRatio) / (1 + internalDiameterRatio) :\r\n\t\t1 / 3;\r\n\r\n\t// 为每一个饼图数据，生成一个 series-surface 配置\r\n\tfor (let i = 0; i < pieData.length; i++) {\r\n\t\tsumValue += pieData[i].value;\r\n\r\n\t\tlet seriesItem = {\r\n\t\t\tname: typeof pieData[i].name === \"undefined\" ?\r\n\t\t\t\t`series${i}` : pieData[i].name,\r\n\t\t\ttype: \"surface\",\r\n\t\t\tparametric: true,\r\n\t\t\twireframe: {\r\n\t\t\t\tshow: false\r\n\t\t\t},\r\n\t\t\tpieData: pieData[i],\r\n\t\t\tpieStatus: {\r\n\t\t\t\tselected: false,\r\n\t\t\t\thovered: false,\r\n\t\t\t\tk: k\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (typeof pieData[i].itemStyle != \"undefined\") {\r\n\t\t\tlet itemStyle = {};\r\n\r\n\t\t\ttypeof pieData[i].itemStyle.color != \"undefined\" ?\r\n\t\t\t\t(itemStyle.color = pieData[i].itemStyle.color) :\r\n\t\t\t\tnull;\r\n\t\t\ttypeof pieData[i].itemStyle.opacity != \"undefined\" ?\r\n\t\t\t\t(itemStyle.opacity = pieData[i].itemStyle.opacity) :\r\n\t\t\t\tnull;\r\n\r\n\t\t\tseriesItem.itemStyle = itemStyle;\r\n\t\t}\r\n\t\tseries.push(seriesItem);\r\n\t}\r\n\r\n\t// 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\r\n\t// 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\r\n\tfor (let i = 0; i < series.length; i++) {\r\n\t\tendValue = startValue + series[i].pieData.value;\r\n\r\n\t\tseries[i].pieData.startRatio = startValue / sumValue;\r\n\t\tseries[i].pieData.endRatio = endValue / sumValue;\r\n\t\tseries[i].parametricEquation = getParametricEquation(\r\n\t\t\tseries[i].pieData.startRatio,\r\n\t\t\tseries[i].pieData.endRatio,\r\n\t\t\ttrue,\r\n\t\t\tfalse,\r\n\t\t\t0.25\r\n\t\t);\r\n\r\n\t\tstartValue = endValue;\r\n\r\n\t\tlegendData.push(series[i].name);\r\n\t}\r\n\r\n\t// 补充一个透明的圆环，用于支撑高亮功能的近似实现。\r\n\tseries.push({\r\n\t\tname: \"mouseoutSeries\",\r\n\t\ttype: \"surface\",\r\n\t\tparametric: true,\r\n\t\twireframe: {\r\n\t\t\tshow: false\r\n\t\t},\r\n\t\tclockwise: false,\r\n\t\titemStyle: {\r\n\t\t\topacity: 0,\r\n\t\t\tcolor: \"rgba(18,236,252,.2)\"\r\n\t\t},\r\n\t\tparametricEquation: {\r\n\t\t\tu: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: Math.PI * 2,\r\n\t\t\t\tstep: Math.PI / 20\r\n\t\t\t},\r\n\t\t\tv: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: Math.PI,\r\n\t\t\t\tstep: Math.PI / 1.4\r\n\t\t\t},\r\n\t\t\tx: function(u, v) {\r\n\t\t\t\treturn Math.sin(v) * Math.sin(u) + Math.sin(u);\r\n\t\t\t},\r\n\t\t\ty: function(u, v) {\r\n\t\t\t\treturn Math.sin(v) * Math.cos(u) + Math.cos(u);\r\n\t\t\t},\r\n\t\t\tz: function(u, v) {\r\n\t\t\t\treturn Math.cos(v) > 0 ? 0.1 : -0.1;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// 准备待返回的配置项，把准备好的 legendData、series 传入。\r\n\toption = {\r\n\t\t//animation: false,\r\n\t\tlegend: {\r\n\t\t\tshow: true,\r\n\t\t\tdata: legendData\r\n\t\t},\r\n\t\t// tooltip: {\r\n\t\t//     formatter: params => {\r\n\t\t//         if (params.seriesName !== 'mouseoutSeries') {\r\n\t\t//             return `${params.seriesName}<br/><span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${params.color};\"></span>${option.series[params.seriesIndex].pieData.value}`;\r\n\t\t//         }\r\n\t\t//     }\r\n\t\t// },\r\n\t\txAxis3D: {\r\n\t\t\tmin: -1,\r\n\t\t\tmax: 1\r\n\t\t},\r\n\t\tyAxis3D: {\r\n\t\t\tmin: -1,\r\n\t\t\tmax: 1\r\n\t\t},\r\n\t\tzAxis3D: {\r\n\t\t\tmin: -1,\r\n\t\t\tmax: 1\r\n\t\t},\r\n\t\tgrid3D: {\r\n\t\t\tshow: false,\r\n\t\t\tboxHeight: 4,\r\n\t\t\t// top: '30%',\r\n\t\t\tleft: \"0\",\r\n\t\t\tbottom: \"50%\",\r\n\t\t\tviewControl: {\r\n\t\t\t\t//3d效果可以放大、旋转等，请自己去查看官方配置\r\n\t\t\t\talpha: 20,\r\n\t\t\t\t// beta: 40,\r\n\t\t\t\trotateSensitivity: 0,\r\n\t\t\t\tzoomSensitivity: 0,\r\n\t\t\t\tpanSensitivity: 0,\r\n\t\t\t\tautoRotate: true,\r\n\t\t\t\t//   autoRotateSpeed: 5,\r\n\t\t\t\t//   autoRotateAfterStill: 10\r\n\t\t\t},\r\n\t\t},\r\n\t\tseries: series\r\n\t};\r\n\treturn option;\r\n}\r\n\r\n// 传入数据生成 option\r\noption = getPie3D([\r\n\t{\r\n\tname: 'a',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF',\r\n\t}\r\n}, {\r\n\tname: 'b',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},\r\n{\r\n\tname: 'c',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},\r\n{\r\n\tname: 'd',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},\r\n{\r\n\tname: 'e',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},\r\n{\r\n\tname: 'f',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},\r\n{\r\n\tname: 'g',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: '#03E5FF'\r\n\t}\r\n},{\r\n\tname: 'h',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: 'rgba(3,55,129,1)'\r\n\t}\r\n}, {\r\n\tname: 'i',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: 'rgba(3,55,129,1)'\r\n\t}\r\n},{\r\n\tname: 'j',\r\n\tvalue: 1,\r\n\titemStyle: {\r\n\t\tcolor: 'rgba(3,55,129,1)'\r\n\t}\r\n}], 0.56);","html":"","externalScripts":"https://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js","updaterUID":"obd-oMhzRXtzeT8-hXyMStSZIJXaUYQkb27","theme":"","layout":"","viewCount":286,"userName":"墨***埃","commentCount":0,"starCount":24,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xJ06H1IYsw.png?v=1610960234208","isCustomThumbnail":1,"builtinTags":["category-work","grid3D","legend","series-surface"],"customTags":[],"updaterUserName":"墨***埃"}}