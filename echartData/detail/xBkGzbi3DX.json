{"status":0,"data":{"cid":"xBkGzbi3DX","authorUid":"bd-1560900257","authorUserName":"请***生","title":"折现区域说明","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2018-09-05T00:19:21.000Z","lastUpdateTime":"2018-09-05T00:19:21.000Z","auth":1,"uid":"bd-1560900257","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"4.2.0","versionCreateTime":"2018-09-21T09:29:50.000Z","code":"function profileDataGenerater() {\r\n    var data = [[], [], [], []];\r\n    while (data[0].length !== pointNumber) {\r\n        data[0].push('柱号00+' + (data[0].length + 1));\r\n        data[1].push(random(15, 20));\r\n        data[2].push(random(25, 30));\r\n        data[3].push(random(35, 40));\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n/**\r\n * 产生随机整数，包含下限值，但不包括上限值\r\n * @param {Number} lower 下限\r\n * @param {Number} upper 上限\r\n * @return {Number} 返回在下限到上限之间的一个随机整数\r\n */\r\nfunction random(lower, upper) {\r\n    return Math.floor(Math.random() * (upper - lower)) + lower;\r\n}\r\n\r\n/**\r\n * 在设定的长度中随机取两个值\r\n * @return {Number[]} 返回在设定范围内的一个区间\r\n */\r\nfunction randomSection() {\r\n    var secLower = 0;\r\n    var secUpper = 0;\r\n    while (secUpper - secLower < 15) {\r\n        secLower = Math.floor(Math.random() * pointNumber);\r\n        secUpper = Math.floor(Math.random() * pointNumber);\r\n        [secLower, secUpper] = secUpper < secLower ? [secUpper, secLower] : [secLower, secUpper]\r\n    }\r\n    return [secLower, secUpper];\r\n}\r\n\r\nfunction getSectionInfo(arrs) {\r\n    var sectionData = [];\r\n    var pointData = [];\r\n    var data = arrs.slice(1);\r\n    var cursor = arrs[0];\r\n    var yMax = Math.floor(Math.max(...data[0], ...data[1], ...data[2]));\r\n    var yLength = Math.floor(yMax * 0.25);\r\n    var baseDif = 2;\r\n    data.forEach((arr, idx) => {\r\n        var [secLower, secUpper] = randomSection();\r\n        var height = yMax + yLength * (idx + 1);\r\n\r\n        pointData.push({\r\n            name: cursor[secLower],\r\n            value: [cursor[secLower], arr[secLower]],\r\n        }, {\r\n                name: cursor[secUpper],\r\n                value: [cursor[secUpper], arr[secUpper]],\r\n        });\r\n\r\n        sectionData.push(\r\n            [\r\n                {\r\n                    symbol: 'arrow',\r\n                    name: `两个坐标之间的说明${idx + 1}`,\r\n                    coord: [cursor[secLower], height]\r\n                },\r\n                {\r\n                    symbol: 'arrow',\r\n                    coord: [cursor[secUpper], height]\r\n                }\r\n            ],\r\n            [\r\n                {\r\n\r\n                    symbol: 'none',\r\n                    coord: [cursor[secLower], height + baseDif]\r\n                },\r\n                {\r\n                    symbol: 'none',\r\n                    coord: [cursor[secLower], height - baseDif]\r\n                }\r\n            ],\r\n            [\r\n                {\r\n\r\n                    symbol: 'none',\r\n                    coord: [cursor[secUpper], height + baseDif]\r\n                },\r\n                {\r\n                    symbol: 'none',\r\n                    coord: [cursor[secUpper], height - baseDif]\r\n                }\r\n            ]\r\n        );\r\n\r\n\r\n    });\r\n\r\n    return [sectionData, pointData];\r\n}\r\n\r\n\r\nfunction profileOptionHandler({ data, sectionData, pointData }) {\r\n    var COMMONSTYLE = {\r\n        type: 'line',\r\n        silent: true,\r\n        animation: false,\r\n        symbolSize: 0,\r\n        hoverAnimation: false,\r\n        lineStyle: {\r\n            normal: {\r\n                width: 1\r\n            }\r\n        }\r\n    };\r\n    var yMax = Math.floor(Math.max(...data[1], ...data[2], ...data[3]) * 1.25);\r\n    var option = {\r\n        title: {\r\n            text: `黄河${data[0][0]}~${data[0][data.length - 1]}剖面图`,\r\n            left: 'center',\r\n            bottom: 20\r\n        },\r\n        grid: {\r\n            bottom: 150\r\n        },\r\n        xAxis: [{\r\n            axisLine: {\r\n                show: false\r\n            },\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLabel: {\r\n                rotate: 90\r\n            },\r\n            data: data[0]\r\n        }],\r\n        yAxis: [{\r\n            max: Math.floor(yMax * 1.5),\r\n            axisLabel: {\r\n                formatter: (value) => value.toFixed(2)\r\n            }\r\n        }],\r\n        series: [\r\n            Object.assign(\r\n                {\r\n                    markLine: {\r\n                        silent: true,\r\n                        animation: false,\r\n                        label: {\r\n                            normal: {\r\n                                position: 'middle'\r\n                            }\r\n                        },\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: \"#626c91\",\r\n                                type: 'solid',\r\n                                width: 1\r\n                            },\r\n                            emphasis: {\r\n                                color: \"#d9def7\"\r\n                            }\r\n                        },\r\n                        data: sectionData\r\n                    }\r\n                },\r\n                COMMONSTYLE\r\n            ),\r\n            Object.assign(\r\n                {},\r\n                COMMONSTYLE,\r\n                {\r\n                    type: 'scatter',\r\n                    data: pointData,\r\n                    symbolSize: 10,\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: function (params) {\r\n                                console.log(params)\r\n                                return params.data.name;\r\n                            }\r\n                        }\r\n                    },\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: 'red',\r\n                            opacity: 1\r\n                        }\r\n                    }\r\n                }\r\n            ),\r\n            Object.assign(\r\n                {\r\n                    data: data[1]\r\n                },\r\n                COMMONSTYLE\r\n            ),\r\n            Object.assign(\r\n                {\r\n                    data: data[2]\r\n                },\r\n                COMMONSTYLE\r\n            ),\r\n            Object.assign(\r\n                {\r\n                    data: data[3]\r\n                },\r\n                COMMONSTYLE\r\n            )\r\n        ]\r\n    }\r\n    return option;\r\n}\r\n\r\nvar pointNumber = 50;\r\n\r\nvar profileData = profileDataGenerater();\r\n\r\nvar [sectionData, pointData] = getSectionInfo(profileData);\r\n\r\nvar option = profileOptionHandler({\r\n    data: profileData,\r\n    sectionData: sectionData,\r\n    pointData: pointData\r\n});","html":"","externalScripts":"","updaterUID":"bd-1560900257","theme":"","layout":"","viewCount":996,"userName":"请***生","commentCount":0,"starCount":6,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xBkGzbi3DX.png?v=1536106762004","isCustomThumbnail":1,"builtinTags":["category-work","grid","markLine","series-line","series-scatter","title"],"customTags":[],"updaterUserName":"请***生"}}