{"status":0,"data":{"cid":"x8fVS_qpUV","authorUid":"bd-2603632873","authorUserName":"y***8","title":"项目进度","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2020-11-23T05:55:09.000Z","lastUpdateTime":"2020-11-23T05:55:09.000Z","auth":2,"uid":"bd-2603632873","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2020-11-23T05:55:09.000Z","code":"var categories = ['项目1', '项目2', '项目3', '项目4', '项目5', '项目6'];\r\n    var dayTime = 3600 * 24 * 1000;\r\n\r\n    var nowDate = new Date();//今日日期为2020年2月14日\r\n    var nowDateStr = formatDate(nowDate);\r\n    function formatDate(date) {\r\n        //将2020/2/3这种日期格式，转换为2020-02-03\r\n        var arr = date.toLocaleDateString().split(\"/\");\r\n        if (arr[1].length < 2) {//对月份进行处理：如果月份的长度为1，则拼接上字符串0\r\n            arr.splice(1, 1, \"0\" + arr[1]);\r\n        }\r\n        if (arr[2].length < 2) {//对天数进行处理：如果天数的长度为2，则拼接上字符串0\r\n            arr.splice(2, 1, \"0\" + arr[2]);\r\n        }\r\n        return arr.join(\"-\");\r\n    }\r\n    var data = [\r\n        {\r\n            name: \"项目1\",\r\n            //项目索引  计划开始日期   计划结束日期， 实际开始日期\r\n            value: [0, '2020-01-12', '2020-01-28', '2020-01-12']\r\n        },\r\n        {\r\n            name: \"项目2\",\r\n            value: [1, '2020-01-25', '2020-03-31', '2020-01-28']\r\n        },\r\n        {\r\n            name: \"项目3\",\r\n            value: [2, '2020-02-07', '2020-04-30', '2020-02-10']\r\n        },\r\n        {\r\n            name: \"项目4\",\r\n            value: [3, '2020-04-01', '2020-07-30', '']\r\n        },\r\n        {\r\n            name: \"项目5\",\r\n            value: [4, '2020-07-15', '2020-11-01', '']\r\n        },\r\n        {\r\n            name: \"项目6\",\r\n            value: [5, '2020-11-01', '2020-12-25', '']\r\n        }\r\n    ];\r\n\r\n    //在渲染时，data中的每个数据项都会调用这个方法\r\n    function renderItem(params, api) {//params为data中的数据项的信息对象    api中是一些开发者可调用的方法集合，可以对data中的数据项进行操作\r\n        var categoryIndex = api.value(0);//取出data中数据项的第一个维度的值\r\n\r\n\r\n        //===============计划工期进度条\r\n        //计划开始日期(在屏幕上的像素值)\r\n        var planStartDate = api.coord([api.value(1), categoryIndex]);//将数据项中的数值对应的坐标系上的点，转换为屏幕上的像素值\r\n                                                                    //坐标系上的点：是数据项映射到坐标系的x轴和y轴后，对应的位置\r\n                                                                    //屏幕上的像素值：是坐标系上的点，在屏幕上的位置\r\n        //计划结束日期(在屏幕上的像素值)\r\n        var planEndDate = api.coord([api.value(2), categoryIndex]);\r\n                                                                    //由于data.value中维度1和维度2的数据会被映射到x轴，而x轴的type为time，即时间轴，\r\n                                                                    //所以api.value(1)和api.value(2)获取到的值是将日期转换后的毫秒值\r\n        //设置图形的高度\r\n        var height = api.size([0, 1])[1] * 0.4;//获得Y轴上数值范围为1的一段所对应的像素长度；这是官方文档的注释，对于api.size()方法，目前我还不是很理解；先做个标记??? 以后再说\r\n\r\n        //使用graphic图形元素组件，绘制矩形\r\n        //clipRectByRect方法，在绘制矩形时，如果矩形大小超出了当前坐标系的包围盒，则裁剪这个矩形\r\n        var rectShape1 = echarts.graphic.clipRectByRect({\r\n            //矩形的位置\r\n            x: planStartDate[0],\r\n            y: planStartDate[1],\r\n            //矩形的宽高\r\n            width: planEndDate[0] - planStartDate[0],\r\n            height: height\r\n        }, {\r\n            //当前坐标系的包围盒\r\n            x: params.coordSys.x,\r\n            y: params.coordSys.y,\r\n            width: params.coordSys.width,\r\n            height: params.coordSys.height\r\n        });\r\n\r\n\r\n        //===============实际工期进度条\r\n        var rectShape2 = null;\r\n        //判断实际开始日期是否为空，如果为空，说明项目还没开始\r\n        if (api.value(3) !== '') {//如果实际开始日期不为空\r\n            //实际开始日期(在屏幕上的像素值)\r\n            var practiceStartDate = api.coord([api.value(3), categoryIndex]);\r\n            //当前日期或实际结束日期\r\n            var nowDate_or_practiceEndDate;\r\n            //项目周期(毫秒值)：计划结束日期(毫秒值) - 计划开始日期(毫秒值)\r\n            var projectCycle_millisecond = api.value(2) - api.value(1);\r\n            //实际开始日期(毫秒值)\r\n            var practiceStartDate_millisecond = +echarts.number.parseDate(api.value(3));\r\n            //当前日期(毫秒值)\r\n            var nowDate_millisecond = +echarts.number.parseDate(nowDateStr);\r\n            //如果项目进度未完成或刚好完成。\r\n            //比如计划开始时间1月10日，计划结束时间1月20日，项目周期10天，实际开始时间1月10日，当前日期1月18日，说明项目进度未完成\r\n            //那么在渲染实际工期的进度条时，进度条的范围为1月10日至1月18日(实际开始日期至当前日期)\r\n            //比如计划开始时间1月10日，计划结束时间1月20日，项目周期10天，实际开始时间1月10日，当前日期1月20日，说明项目进度刚好完成\r\n            //那么在渲染实际工期的进度条时，进度条的范围为1月10日至1月20日(实际开始日期至当前日期)\r\n            if ((nowDate_millisecond - practiceStartDate_millisecond) <= projectCycle_millisecond) {\r\n                //取当前日期(在屏幕上的像素值)\r\n                nowDate_or_practiceEndDate = api.coord([nowDate_millisecond, categoryIndex]);\r\n            } else {//比如计划开始时间1月10日，计划结束时间1月20日，项目周期10天，实际开始时间1月10日，当前日期1月22日，说明项目已结束\r\n                    //那么在渲染实际工期的进度条时，进度条的范围应该是1月10日至1月20日(实际开始日期至实际结束日期)，\r\n                    //而不是1月10日至1月22日(实际开始日期至当前日期)\r\n                //实际结束日期(毫秒值)：实际开始日期(毫秒值) + 项目周期(毫秒值)\r\n                var practiceEndDate_millisecond = practiceStartDate_millisecond + projectCycle_millisecond;\r\n                //取实际结束日期(在屏幕上的像素值)\r\n                nowDate_or_practiceEndDate = api.coord([practiceEndDate_millisecond, categoryIndex]);\r\n            }\r\n\r\n            //使用graphic图形元素组件，绘制矩形\r\n            //clipRectByRect方法，在绘制矩形时，如果矩形大小超出了当前坐标系的包围盒，则裁剪这个矩形\r\n            rectShape2 = echarts.graphic.clipRectByRect({\r\n                //矩形的位置\r\n                x: practiceStartDate[0],\r\n                y: practiceStartDate[1],\r\n                //矩形的宽高\r\n                width: nowDate_or_practiceEndDate[0] - practiceStartDate[0],\r\n                height: height\r\n            }, {\r\n                //当前坐标系的包围盒\r\n                x: params.coordSys.x,\r\n                y: params.coordSys.y,\r\n                width: params.coordSys.width,\r\n                height: params.coordSys.height\r\n            });\r\n        }\r\n\r\n        //如果项目还没开始，那么只渲染计划工期的进度条\r\n        if (rectShape2 === null) {\r\n            //设置绘制的矩形的元素定义\r\n            return rectShape1 && {\r\n                type: 'group',\r\n                children: [\r\n                    {\r\n                        //类型为矩形\r\n                        type: 'rect',\r\n                        //具体形状\r\n                        shape: rectShape1,\r\n                        //样式\r\n                        style: api.style({\r\n                            fill: '#AACCF9'\r\n                        })\r\n                    }\r\n                ]\r\n            };\r\n        } else {//渲染计划工期和实际工期\r\n            //设置绘制的矩形的元素定义\r\n            return rectShape1 && rectShape2 && {\r\n                type: 'group',\r\n                children: [\r\n                    {\r\n                        //类型为矩形\r\n                        type: 'rect',\r\n                        //具体形状\r\n                        shape: rectShape1,\r\n                        //样式\r\n                        style: api.style({\r\n                            fill: '#AACCF9'\r\n                        })\r\n                    },\r\n                    {\r\n                        //类型为矩形\r\n                        type: 'rect',\r\n                        //具体形状\r\n                        shape: rectShape2,\r\n                        //样式\r\n                        style: api.style({\r\n                            fill: '#2076ED'\r\n                        })\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n    }\r\n\r\n    myChart.setOption({\r\n        tooltip: {\r\n            //自定义提示信息\r\n            formatter: function (params) {//params为当前点击图形元素的数据信息的对象\r\n                //计划开始时间\r\n                var planStartDate = params.value[1];\r\n                //计划结束时间\r\n                var planEndDate = params.value[2];\r\n                //实际开始时间\r\n                var practiceStartDate = \"\";\r\n                var practiceStartDate_str = \"\";\r\n                if (params.value[3]) {\r\n                    practiceStartDate = params.value[3];\r\n                    practiceStartDate_str = '实际开始日期：' + practiceStartDate + '<br/>';\r\n\r\n                }\r\n\r\n                //项目周期(毫秒值)：计划结束日期 - 计划开始日期\r\n                var projectCycle_millisecond = +echarts.number.parseDate(params.value[2]) - +echarts.number.parseDate(params.value[1]);\r\n                //项目周期(天数)\r\n                var projectCycle_days = projectCycle_millisecond / dayTime;\r\n                //当前进度(百分比)\r\n                var currentProgress_percentage;\r\n                var currentProgress_percentage_str = \"\";\r\n                if (practiceStartDate !== '') {//如果实际开始日期不为空，说明项目已开始\r\n                    //当前进度(毫秒值)：当前日期(毫秒值) - 实际开始日期(毫秒值)\r\n                    var currentProgress_mill = +echarts.number.parseDate(nowDateStr) - +echarts.number.parseDate(params.value[3]);\r\n                    //当前进度(百分比)：当前进度(毫秒值) / 项目周期(毫秒值)\r\n                    currentProgress_percentage = ((currentProgress_mill / projectCycle_millisecond) * 100).toFixed(0);//注意，toFixed的返回值是字符串类型\r\n                    //如果项目已结束：比如计划开始时间1月10日，计划结束时间1月20日，项目周期10天，实际开始时间1月10日，当前日期1月22日，说明项目已结束\r\n                    //那么按照(当前日期-实际开始日期)/项目周期，计算出的百分比，就会大于100，所以需要将百分比置为100\r\n                    if (currentProgress_percentage > 100) {//项目已结束\r\n                        currentProgress_percentage = 100;\r\n                    }\r\n                    currentProgress_percentage_str = '当前进度：' + currentProgress_percentage + '%' + '<br/>';\r\n                }\r\n\r\n                //实际结束时间\r\n                var practiceEndDate = \"\";\r\n                var practiceEndDate_str = \"\";\r\n                if (currentProgress_percentage == 100) {//如果项目进度已完成或项目已结束\r\n                    //实际结束时间(毫秒值)：实际开始日期(毫秒值) + 项目周期(毫秒值)\r\n                    var practiceEndDate_millisecond = +echarts.number.parseDate(practiceStartDate) + projectCycle_millisecond;\r\n                    //实际结束时间(日期格式)\r\n                    practiceEndDate = echarts.format.formatTime('yyyy-MM-dd', practiceEndDate_millisecond);\r\n                    practiceEndDate_str = '实际结束日期：' + practiceEndDate + '<br/>';\r\n                }\r\n                return params.name + '<br/>'\r\n                    + '计划开始时间：' + planStartDate + '<br/>'\r\n                    + '计划结束时间：' + planEndDate + '<br/>'\r\n                    + '项目周期：' + projectCycle_days + '天<br/>'\r\n                    + currentProgress_percentage_str\r\n                    + practiceStartDate_str\r\n                    + practiceEndDate_str\r\n            }\r\n        },\r\n        title: {\r\n            text: '项目进度',\r\n            left: 'center'\r\n        },\r\n        dataZoom: [\r\n            {\r\n                //区域缩放组件的类型为滑块，默认作用在x轴上\r\n                type: 'slider',\r\n                //区域缩放组件的过滤模式，weakFilter：在进行区域缩放时，允许图形的一部分在坐标系上(可见)，另一部分在坐标系外(隐藏)\r\n                filterMode: 'weakFilter',\r\n                showDataShadow: false,\r\n                top: 400,\r\n                height: 10,\r\n                //区域缩放组件边框颜色\r\n                borderColor: 'transparent',\r\n                //区域缩放组件边框背景\r\n                backgroundColor: '#e2e2e2',\r\n                //区域缩放组件上的手柄的样式\r\n                handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\r\n                //手柄大小\r\n                handleSize:20,\r\n                //为手柄设置阴影效果\r\n                handleStyle: {\r\n                    shadowBlur: 6,\r\n                    shadowOffsetX: 1,\r\n                    shadowOffsetY: 2,\r\n                    shadowColor: '#aaa'\r\n                },\r\n                labelFormatter: ''\r\n            },\r\n            {\r\n                //区域缩放组件的类型为内置在坐标系中，默认作用在x轴的坐标系中\r\n                type: 'inside',\r\n                //区域缩放组件的过滤模式，weakFilter：在进行区域缩放时，允许图形的一部分在坐标系上(可见)，另一部分在坐标系外(隐藏)\r\n                filterMode: 'weakFilter'\r\n            }\r\n        ],\r\n        //图表底板\r\n        grid: {\r\n            height: 300\r\n        },\r\n        xAxis: {\r\n            type: \"time\",//x轴类型为时间轴\r\n            min: 1577808000000,//最小值为2020-01-01\r\n            max: 1609344000000,//最大值为2020-12-31\r\n            axisLabel: {\r\n                interval: 0,//强制显示所有标签\r\n            }\r\n\r\n        },\r\n        yAxis: {\r\n            data: categories,\r\n            axisTick: {\r\n                alignWithLabel: true//保证刻度线和标签对齐，当boundaryGap为true的时候有效，不过boundaryGap默认就是true\r\n            }\r\n        },\r\n        legend: {\r\n            left: '70%',\r\n            top: 10,\r\n            data: ['计划工期', '实际工期']\r\n        },\r\n        series: [\r\n            {\r\n                type: 'custom',\r\n                //使用自定义的图形元素\r\n                renderItem: renderItem,\r\n                name: '计划工期',\r\n                itemStyle: {\r\n                    //透明度\r\n                    opacity: 0.8,\r\n                    color: '#AACCF9'\r\n                },\r\n                encode: {\r\n                    //将维度1和维度2的数据映射到x轴\r\n                    x: [1, 2],\r\n                    //将维度0的数据映射到y轴\r\n                    y: 0\r\n                },\r\n                data: data\r\n            },\r\n            //这个系列并没有太大作用，也没有给它设置data，只是为了通过这个系列，显示图例(legend)而已\r\n            {\r\n                type: 'custom',\r\n                name: '实际工期',\r\n                itemStyle: {\r\n                    //透明度\r\n                    opacity: 0.8,\r\n                    color: '#2076ED'\r\n                }\r\n            }\r\n        ]\r\n    });","html":"","externalScripts":"","updaterUID":"bd-2603632873","theme":"","layout":"","viewCount":469,"userName":"y***8","commentCount":0,"starCount":4,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x8fVS_qpUV.png?v=1606110909647","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-custom","title","tooltip"],"customTags":["甘特图"],"updaterUserName":"y***8"}}