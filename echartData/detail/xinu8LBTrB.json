{"status":0,"data":{"cid":"xinu8LBTrB","authorUid":"obd-otrTmdlPtbfrzTNt5DDKQLVfvvtoa8t","authorUserName":"唧***楠","title":"显示单个指标tootip","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-10-09T12:38:46.000Z","lastUpdateTime":"2021-10-09T12:38:46.000Z","auth":2,"uid":"obd-otrTmdlPtbfrzTNt5DDKQLVfvvtoa8t","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.1","versionCreateTime":"2021-10-09T12:38:46.000Z","code":" var dataTime = ['杭州市',\n        '宁波市',\n        '温州市',\n        '嘉兴市',\n        '湖州市',\n        '绍兴市',\n        '金华市',\n        '衢州市',\n        '舟山市',\n        '台州市',\n        '丽水市',]\n\n    var dataname = ['工业固体废物产生强度',\n        '人均生活垃圾日产生量',\n        '建筑垃圾产生强度',\n        '工业固体废物综合利用率',\n        '秸秆综合利用率',\n        '畜禽粪污综合利用率',\n        '再生资源实际回收量',\n        '建筑垃圾资源化利用率',\n        '工业固体废物贮存处置强度',\n    ]\n    var datamax = [20, 20, 20, 20, 20, 20, 20, 20, 20]\n    var datavaule = [\n        {name:'工业固体废物产生强度',value:'20'},\n        {name:'人均生活垃圾日产生量',value:'16'},\n        {name:'建筑垃圾产生强度',value:'20'},\n        {name:'工业固体废物综合利用率',value:'15'},\n        {name:'秸秆综合利用率',value:'12'},\n        {name:'畜禽粪污综合利用率',value:'18'},\n        {name:'再生资源实际回收量',value:'15'},\n        {name:'建筑垃圾资源化利用率',value:'17'},\n        {name:'工业固体废物贮存处置强度',value:'16'},\n    ]\n    var datavaule2 = [\n        {name:'工业固体废物产生强度',value:'15'},\n        {name:'人均生活垃圾日产生量',value:'14'},\n        {name:'建筑垃圾产生强度',value:'13'},\n        {name:'工业固体废物综合利用率',value:'14'},\n        {name:'秸秆综合利用率',value:'14'},\n        {name:'畜禽粪污综合利用率',value:'18'},\n        {name:'再生资源实际回收量',value:'12'},\n        {name:'建筑垃圾资源化利用率',value:'13'},\n        {name:'工业固体废物贮存处置强度',value:'14'},\n    ]\n\n    let indicator = []\n    for (let i = 0; i < dataname.length; i++) {\n        indicator.push({\n            name: dataname[i],\n            max: datamax[i],\n        })\n    }\n    function contains(arrays, obj) {\n        let i = arrays.length;\n        while (i--) {\n            if (arrays[i] === obj) {\n                return i;\n            }\n        }\n        return false;\n    }\n\n\n    var buildSeries = function (data) {\n        var helper = data.map((item, index) => {\n            var arr = new Array(data.length);\n            arr.splice(index, 1, item);\n            return arr;\n        });\n    \n        return [data, ...helper].map((item, index) => {\n            return {\n                type: 'radar',\n                name:'分指数分析',\n                // 折线拐点标志样式\n                itemStyle: {\n                    opacity:index === 0 ? '#01B7D8' : 0,\n                    color: index === 0 ? '#01B7D8' : 'transparent'\n                },\n                // 线条样式\n                lineStyle: {\n                    color: index === 0 ? '#01B7D8' : 'transparent'\n                },\n                // 区域填充样式\n                // areaStyle: {\n                //     color: index === 0 ? '#01B7D8' : 'transparent',\n                //     opacity: 0.6\n                // },\n                // 提示框内容\n                tooltip: {\n                    backgroundColor: 'rgba(50,50,50,0.7)',\n                    borderWidth: 0,\n                    padding: [5, 10],\n                    textStyle: {\n                        color: '#FFFFFF',\n                        fontFamily: 'sans-serif'\n                    },\n                    confine: true, // 提示框显示在canvas以内\n                    show: index === 0 ? false : true,\n                    formatter: function () {\n                        return indicator[index - 1].name + \"<br/><span style='display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:#01B7D8'></span>\" + '分指数分析 : ' + data[index - 1]\n                    }\n                },\n                z: index === 0 ? 1 : 2,\n                data: [item]\n            }\n        })\n    }\n    \n    var buildSeries2 = function (data) {\n        var helper = data.map((item, index) => {\n            var arr = new Array(data.length);\n            arr.splice(index, 1, item);\n            return arr;\n        });\n    \n        return [data, ...helper].map((item, index) => {\n            return {\n                type: 'radar',\n                 name:'关联指数分析',\n                // 折线拐点标志样式\n                itemStyle: {\n                    opacity:index === 0 ? '#F7DA6D' : 0,\n                    color: index === 0 ? '#F7DA6D' : 'transparent'\n                },\n                // 线条样式\n                lineStyle: {\n                    color: index === 0 ? '#F7DA6D' : 'transparent'\n                },\n                // 区域填充样式\n                // areaStyle: {\n                //     color: index === 0 ? '#F7DA6D' : 'transparent',\n                //     opacity: 0.6\n                // },\n                // 提示框内容\n                tooltip: {\n                    backgroundColor: 'rgba(50,50,50,0.7)',\n                    borderWidth: 0,\n                    padding: [5, 10],\n                    textStyle: {\n                        color: '#FFFFFF',\n                        fontFamily: 'sans-serif'\n                    },\n                    confine: true, // 提示框显示在canvas以内\n                    show: index === 0 ? false : true,\n                    formatter: function () {\n                        return indicator[index - 1].name + \"<br/><span style='display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:#F7DA6D'></span>\" + '关联指数分析 : ' + data[index - 1]\n                    }\n                },\n                z: index === 0 ? 1 : 2,\n                data: [item]\n            }\n        })\n    }\n\n\noption = {\n        backgroundColor: '#0A0933',\n        tooltip: {\n            show: false,\n            trigger: \"item\",\n            // triggerOn: \"click\",\n            // confine: true,\n            // formatter: (params) => {\n            //     console.log(params);\n            //     // let i = contains(dataname, value);\n            //     // let percent = datavaule[i];\n            // }\n        },\n        // tooltip: {\n        //     trigger: 'item',\n        //     formatter:(params)=>{\n        //         console.log(params);\n        //         // let {data,name}=params.data\n        //         // return `${params.name}<br />当月销售 ${data[0]}<br />上月销售 ${data[1]}<br />`\n        //     }\n        // },\n        \n        radar: {\n            indicator: indicator,\n            center: [\"50%\", \"50%\"],\n            radius: \"65%\",\n            startAngle: 240,\n            splitNumber: 5,\n            splitArea: {\n                areaStyle: {\n                    color: [\n                        'rgba(1, 183, 216, 0.1)', 'rgba(1, 183, 216, 0.2)',\n                        'rgba(1, 183, 216, 0.4)', 'rgba(1, 183, 216, 0.6)',\n                        'rgba(1, 183, 216, 0.8)', 'rgba(1, 183, 216, 1)'\n                    ].reverse()\n                }\n            },\n            axisLabel: {\n                show: false,\n            },\n            axisLine: {\n                show: false,\n                lineStyle: {\n                    color: \"transparent\"\n                }\n            },\n            splitLine: {\n                show: false,\n                lineStyle: {\n                    color: \"transparent\"\n                }\n            },\n            name: {\n                formatter: function (value) {\n                    let i = contains(dataname, value);\n                    let percent = datavaule[i];\n                    let ret = \"\";//拼接加\\n返回的类目项  \n                    let maxLength = 6;//每项显示文字个数  \n                    let valLength = value.length;//X轴类目项的文字个数  \n                    let rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数  \n                    if (rowN > 1)//如果类目项的文字大于6,\n                    {\n                        let temp = \"\";//每次截取的字符串  \n                        let start = 0;//开始截取的位置  \n                        let end = maxLength;//结束截取的位置  \n                        temp = value.substring(start, end) + '\\n' + value.substring(end, valLength)\n                        ret += temp; //凭借最终的字符串  \n                        // return '{a|' + percent + '}\\n' + '{b|' + ret + '}'\n                        return '{b|' + ret + '}'\n                    }\n                    else {\n                        // return '{a|' + percent + '}\\n' + '{b|' + value + '}'\n                        return '{b|' + value + '}'\n                    }\n                },\n                textStyle: {\n                    rich: {\n                        a: {\n                            color: '#FFFFFF',\n                            fontSize: 10,\n                            padding: [0, 0],\n                            // lineHeight: 20,\n                        },\n                        b: {\n                            color: '#CAEEFF',\n                            fontSize: 10,\n                            padding: [0, 0],\n                            // lineHeight: 20,\n                        }\n                    },\n                },\n            },\n        },\n        series: [...buildSeries(datavaule.map(item=>item.value)),...buildSeries2(datavaule2.map(item=>item.value))]\n    };\n","html":"","externalScripts":"","updaterUID":"obd-otrTmdlPtbfrzTNt5DDKQLVfvvtoa8t","theme":"","layout":"","viewCount":0,"userName":"唧***楠","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xinu8LBTrB.png?v=1633783126443","isCustomThumbnail":0,"builtinTags":["category-work","radar","series-radar","tooltip"],"customTags":[],"updaterUserName":"唧***楠"}}