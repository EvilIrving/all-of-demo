{"status":0,"data":{"cid":"xYL6RXn0BF","authorUid":"obd-oj1TdsM_DNBP9syEyw_Nra3U7wgdDDP","authorUserName":"l***啊","title":"3D图1","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-10-19T08:43:58.000Z","lastUpdateTime":"2021-10-19T08:43:58.000Z","auth":2,"uid":"obd-oj1TdsM_DNBP9syEyw_Nra3U7wgdDDP","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.1","versionCreateTime":"2021-10-19T08:43:58.000Z","code":"const CubeLeft = echarts.graphic.extendShape({\r\n  shape: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  buildPath: function(ctx, shape) {\r\n    const xAxisPoint = shape.xAxisPoint;\r\n    const c0 = [shape.x, shape.y];\r\n    const c1 = [shape.x - 7, shape.y - 7];\r\n    const c2 = [xAxisPoint[0] - 7, xAxisPoint[1] - 7];\r\n    const c3 = [xAxisPoint[0], xAxisPoint[1]];\r\n    ctx\r\n      .moveTo(c0[0], c0[1])\r\n      .lineTo(c1[0], c1[1])\r\n      .lineTo(c2[0], c2[1])\r\n      .lineTo(c3[0], c3[1])\r\n      .closePath();\r\n  }\r\n});\r\nconst CubeRight = echarts.graphic.extendShape({\r\n  shape: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  buildPath: function(ctx, shape) {\r\n    const xAxisPoint = shape.xAxisPoint;\r\n    const c1 = [shape.x, shape.y];\r\n    const c2 = [xAxisPoint[0], xAxisPoint[1]];\r\n    const c3 = [xAxisPoint[0] + 7, xAxisPoint[1] - 5];\r\n    const c4 = [shape.x + 7, shape.y - 6];\r\n    ctx\r\n      .moveTo(c1[0], c1[1])\r\n      .lineTo(c2[0], c2[1])\r\n      .lineTo(c3[0], c3[1])\r\n      .lineTo(c4[0], c4[1])\r\n      .closePath();\r\n  }\r\n});\r\nconst CubeTop = echarts.graphic.extendShape({\r\n  shape: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  buildPath: function(ctx, shape) {\r\n    const c1 = [shape.x, shape.y];\r\n    const c2 = [shape.x + 7, shape.y - 6];\r\n    const c4 = [shape.x - 7, shape.y - 7];\r\n    ctx\r\n      .moveTo(c1[0], c1[1])\r\n      .lineTo(c2[0], c2[1])\r\n      .lineTo(c4[0], c4[1])\r\n      .closePath();\r\n  }\r\n});\r\nlet newData = [\r\n        ['2016', 30],\r\n        ['2017', 45],\r\n        ['2018', 55],\r\n        ['2019', 60],\r\n        ['2020', 65]\r\n      ]\r\necharts.graphic.registerShape('CubeLeft', CubeLeft);\r\necharts.graphic.registerShape('CubeRight', CubeRight);\r\necharts.graphic.registerShape('CubeTop', CubeTop);\r\nlet nameArr = newData.map(it => it[0]);\r\nlet values  = newData.map(it => it[1]);\r\nconst max = Math.max(...values);\r\nlet maxArr = Array.from({ length: newData.length }, () => Math.floor(max * 1.5));\r\nconst MAX = maxArr;\r\nconst VALUE = values;\r\nlet seriesOption = [\r\n        {\r\n          type: 'custom',\r\n          zlevel: 1,\r\n          legendHoverLink: false,\r\n          renderItem: function(params, api) {\r\n            const location = api.coord([api.value(0), api.value(1)]);\r\n            return {\r\n              type: 'group',\r\n              children: [\r\n                {\r\n                  type: 'CubeLeft',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: 'rgba(210, 210, 210, 1)'\r\n                  },\r\n                  silent: true\r\n                },\r\n                {\r\n                  type: 'CubeRight',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: 'rgba(174, 174, 174, 0.3)'\r\n                  },\r\n                  silent: true\r\n                },\r\n                {\r\n                  type: 'CubeTop',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: 'rgba(192, 192, 192, 0.3)'\r\n                  },\r\n                  silent: true\r\n                }\r\n              ]\r\n            };\r\n          },\r\n          data: MAX\r\n        },\r\n        {\r\n          type: 'custom',\r\n          renderItem: (params, api) => {\r\n            const location = api.coord([api.value(0), api.value(1)]);\r\n            return {\r\n              type: 'group',\r\n              children: [\r\n                {\r\n                  type: 'CubeLeft',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: 'rgba(41, 93, 173, 1)'\r\n                  },\r\n                  styleEmphasis: {\r\n                    fill: 'rgba(196, 73, 48, 1)'\r\n                  }\r\n                },\r\n                {\r\n                  type: 'CubeRight',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: 'rgba(123, 175, 255, 1)'\r\n                  },\r\n                  styleEmphasis: {\r\n                    fill: 'rgba(244, 98, 61, 1)'\r\n                  }\r\n                },\r\n                {\r\n                  type: 'CubeTop',\r\n                  shape: {\r\n                    api,\r\n                    xValue: api.value(0),\r\n                    yValue: api.value(1),\r\n                    x: location[0],\r\n                    y: location[1],\r\n                    xAxisPoint: api.coord([api.value(0), 0])\r\n                  },\r\n                  style: {\r\n                    fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(123, 175, 255, 1)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(255, 255, 255, 1)'\r\n                      }\r\n                    ])\r\n                  },\r\n                  styleEmphasis: {\r\n                    fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                      {\r\n                        offset: 0,\r\n                        color: 'rgba(244, 98, 61, 1)'\r\n                      },\r\n                      {\r\n                        offset: 1,\r\n                        color: 'rgba(255, 255, 255, 1)'\r\n                      }\r\n                    ])\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n          },\r\n          zlevel: 3,\r\n          tooltip: {\r\n            show: true\r\n          },\r\n          data: VALUE\r\n        },\r\n        {\r\n          type: 'bar',\r\n          zlevel: 2,\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'top',\r\n              fontSize: 20,\r\n              color: 'rgba(41, 93, 173, 1)',\r\n              offset: [2, -15]\r\n            },\r\n            emphasis: {\r\n              show: true,\r\n              position: 'top',\r\n              fontSize: 20,\r\n              color: 'rgba(203, 37, 1, 1)',\r\n              offset: [2, -15]\r\n            }\r\n          },\r\n          stack: true,\r\n          itemStyle: {\r\n            color: 'transparent'\r\n          },\r\n          tooltip: {},\r\n          data: VALUE\r\n        }\r\n      ];\r\n      \r\noption = {\r\n        grid: {\r\n          left: 50,\r\n          right: 20,\r\n          bottom: 50,\r\n          top: 90\r\n        },\r\n        xAxis: {\r\n          name: '',\r\n          nameGap: 8,\r\n          nameTextStyle: {\r\n            color: '#666666',\r\n            fontSize: 16,\r\n            padding: [75, 30, 15, 0]\r\n          },\r\n          type: 'category',\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#777777'\r\n            }\r\n          },\r\n\r\n          axisLabel: {\r\n            fontSize: 16,\r\n            color: '#666666',\r\n            fontWeight: 600,\r\n            margin: 18,\r\n            interval: 0,\r\n            formatter: function(params) {\r\n              let res = '';\r\n              if (params.length > 5) {\r\n                res = params.substring(0, 5) + '\\n' + params.substring(5);\r\n              } else {\r\n                res = params;\r\n              }\r\n              return res;\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          data: nameArr\r\n        },\r\n        yAxis: [\r\n          {\r\n            name: this.yTitle,\r\n            nameGap: 8,\r\n            nameTextStyle: {\r\n              fontSize: 14,\r\n              padding: [0, 40, 30, 0],\r\n              color: '#666666'\r\n            },\r\n            minInterval: 1,\r\n            type: 'value',\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              color: '#666666',\r\n              fontSize: 16\r\n            },\r\n            splitNumber: 4,\r\n            splitLine: {\r\n              lineStyle: {\r\n                type: 'dashed',\r\n                color: 'rgba(255, 255, 255, 0.15)'\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        series: seriesOption\r\n      };\r\n\r\n\r\n","html":"","externalScripts":"","updaterUID":"obd-oj1TdsM_DNBP9syEyw_Nra3U7wgdDDP","theme":"","layout":"","viewCount":0,"userName":"l***啊","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xYL6RXn0BF.png?v=1634633038797","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-custom"],"customTags":[],"updaterUserName":"l***啊"}}