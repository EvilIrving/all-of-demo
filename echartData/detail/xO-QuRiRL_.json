{"status":0,"data":{"cid":"xO-QuRiRL_","authorUid":"bd-3456958835","authorUserName":"蚜***族","title":"","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2019-08-23T03:18:58.000Z","lastUpdateTime":"2019-08-23T03:18:58.000Z","auth":2,"uid":"bd-3456958835","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.2.1","versionCreateTime":"2019-08-23T03:19:55.000Z","code":"var data = [\n    {name:\"三天\",value:10,his:20,type:\"红色\"},\n     {name:\"s天\",value:10,his:30},\n     {name:\"w天\",value:10,his:20,type:\"黄色\"},\n     {name:\"x天\",value:10,his:80},\n     {name:\"z天\",value:10,his:20}\n]\nvar warnColorSet = {\n    warn: [\n        {type:\"红色\",color:\"rgba(255,0,0,0.8)\"},\n        {type:\"橙色\",color:\"rgba(0,255,0,0.8)\"},\n        {type:\"黄色\",color:\"rgba(0,255,255,0.8)\"},\n        {type:\"蓝色\",color:\"rgba(0,0,255,0.8)\"}\n    ],\n    wanrKey: \"type\",\n    barColor: [\n        [\"rgb(255, 119, 15)\",\"rgb(192, 36, 0) \"],\n        [\"rgb(0, 233, 28)\",\"rgb(12, 169, 1) \"]\n    ],\n    bgSet: \"rgba(0,0,0,0)\",\n    seriesSet:[\n        {name:\"极值\",key:\"value\"},\n        {name:\"历史\",key:\"his\"}\n    ]\n}\n\n\nvar dataset = [];\n\nvar xdata = [];\nwarnColorSet.seriesSet.forEach(is => {\n    var d = [];\n    data.forEach(item => {\n        d.push(item[is.key])\n    })\n    dataset.push({name:is.name,data:d})\n})\ndata.forEach(item => {\n    xdata.push(item.name);\n})\n\n/*var dataset = [\n    {name:\"极值\",data:[20,50,80,90]},\n    {name:\"历史\",data:[30,20,30,70]} \n]*/\nvar serieBgConfig = {\n    name: \" \",\n    type: \"bar\",\n    barWidth: '100%',\n    xAxisIndex: 1,\n    yAxisIndex: 0,\n    label: {\n      show: true,\n        position: \"top\",\n        textStyle: {\n          color: \"#ffc72b\",\n          fontSize: 20\n        },\n        formatter:function(a,b,c){\n            return a.name;\n        }\n    },\n    itemStyle: {\n      normal: {\n        barBorderRadius: 0,\n        color: 'rgba(0,0,0,0)'\n      }\n    },\n    data: [],\n    zlevel: 10\n  }\n  var serieConfig = {\n    name: \"极值\",\n    type: \"bar\",\n    barGap:'10%',\n    //barWidth: \"30%\",\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    label: {\n      normal: {\n        show: false\n      }\n    },\n    itemStyle: {\n      normal: {\n        barBorderRadius: 0\n      }\n    },\n    data: [],\n    zlevel: 11\n  }\n  var colors = []\n  warnColorSet.barColor.forEach(item => {\n      if(warnColorSet.barColor &&\n      typeof item === \"string\"){\n          colors.push(item)\n      } else if (warnColorSet.barColor &&\n       item instanceof Array) {\n          colors.push(new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color:item[0]\n          },\n          {\n            offset: 1,\n            color: item[1]\n          }\n        ]))\n      } else {\n          colors.push(\"rgba(0,0,0,0)\")\n      }\n  });\n  if(warnColorSet.barColor && typeof warnColorSet.barColor === \"string\"){\n      fo\n      serieConfig.itemStyle.normal.color = warnColorSet.barColor;\n  } else if (warnColorSet.barColor && typeof warnColorSet.barColor instanceof Array){\n       /*serieConfig.itemStyle.normal.color = new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color:warnColorSet.barColor[0]\n          },\n          {\n            offset: 1,\n            color: warnColorSet.barColor[1]\n          }\n        ]);\n        */\n  }\nvar seriesData = [];\nvar legend = [];\nvar max = 0;\nvar len = 0;\nvar maxData = []\ndataset.forEach(item => {\n    legend.push(item.name);\n    const serieConfigset = JSON.parse(JSON.stringify(serieConfig))\n    serieConfigset.name = item.name\n    serieConfigset.data = item.data\n    seriesData.push(serieConfigset)\n    item.data.forEach(items => {\n        max = max<items ? items : max;\n    })\n    len = item.data.length;\n});\n\nvar bgData=[]\ndata.forEach(item => {\n    bgData.push({value: max,name:1,\n        label:{ color:'rgba(0,0,0,0)'},\n        itemStyle:{color:'rgba(0,0,0,0)'} \n    })\n    warnColorSet.warn.forEach(it => {\n        if(it.type===item[warnColorSet.wanrKey]){\n            bgData[bgData.length - 1] =  {value: max,name:item[warnColorSet.wanrKey],\n                label:{ color:it.color},\n                itemStyle:{color:it.color} \n            }\n        }\n    })\n   \n})\n\nserieBgConfig.data = bgData\nseriesData.push(serieBgConfig)\noption = {\n    tooltip:{show:true,formatter:function(params){\n        if(params.seriesName === \" \"){\n            return \"\";\n        }\n        return params.seriesName + \" : \" + params.value;\n    }},\n    grid:{\n        right: 80\n    },\n    legend: {\n          type: \"plain\",\n          right: 5,\n          top: 10,\n          orient: \"vertical\",\n          textStyle: {\n            color: \"red\"\n          },\n          itemWidth: 30,\n          width: 30,\n          itemGap: 20,\n          zlevel: 12\n    },\n    xAxis: [{\n        type: 'category',\n        data: xdata,\n        splitArea:{\n            show: true,\n            areaStyle:{\n                color:'rgba(0,0,0,0.1)'\n            }\n        },\n        splitLine:{\n            show:true,\n            lineStyle:{\n                width: 10\n            }\n        }\n    },{\n        type: 'category',\n        show:false,\n        data: xdata\n    }],\n    yAxis: {\n        max:max,\n        axisTick:{\n            show:false\n        },\n        axisLine:{\n            show:false\n        },\n        type: 'value',\n        axisLabel:{  \n            color:'#fff'\n        }\n    },\n    series: seriesData,\n    color: colors\n};","html":"","externalScripts":"","updaterUID":"bd-3456958835","theme":"","layout":"","viewCount":9,"userName":"蚜***族","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xO-QuRiRL_.png?v=1566530395872","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","tooltip"],"customTags":[],"updaterUserName":"蚜***族"}}