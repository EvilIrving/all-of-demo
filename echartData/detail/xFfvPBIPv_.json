{"status":0,"data":{"cid":"xFfvPBIPv_","authorUid":"bd-171648521","authorUserName":"绿***绿","title":"柱状图动态数据","description":"","latestVersion":3,"alwaysLatest":1,"createTime":"2019-05-14T09:36:59.000Z","lastUpdateTime":"2019-05-14T09:36:59.000Z","auth":2,"uid":"bd-171648521","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.2.1","versionCreateTime":"2019-05-24T03:13:04.000Z","code":"var dataAxis = ['空调', '温湿度', '配电', 'UPS', '温湿度', '烟感', '漏水', '空调', '配电', 'UPS', ];\r\nvar dataAP = [65, 104, 83, 83, 83, 78, 67, 83, 90, 76];\r\nvar yMax = 120;\r\nvar dataShadow = [];\r\n\r\nfor (var i = 0; i < dataAP.length; i++) {\r\n    dataShadow.push(yMax);\r\n}\r\n\r\noption = {\r\n    grid: {\r\n        bottom: \"30px\",\r\n        left: '30px',\r\n        right: '5%',\r\n        top: '5%',\r\n    },\r\n    xAxis: {\r\n        data: dataAxis,\r\n        axisLabel: {\r\n            interval: 0,\r\n            formatter: function(value) {\r\n                //debugger\r\n                var ret = \"\"; //拼接加\\n返回的类目项\r\n                var maxLength = 2; //每项显示文字个数\r\n                var valLength = value.length; //X轴类目项的文字个数\r\n                var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\r\n                if (rowN > 1) //如果类目项的文字大于3,\r\n                {\r\n                    for (var i = 0; i < rowN; i++) {\r\n                        var temp = \"\"; //每次截取的字符串\r\n                        var start = i * maxLength; //开始截取的位置\r\n                        var end = start + maxLength; //结束截取的位置\r\n                        //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\r\n                        temp = value.substring(start, end) + \"\\n\";\r\n                        ret += temp; //凭借最终的字符串\r\n                    }\r\n                    return ret;\r\n                } else {\r\n                    return value;\r\n                }\r\n            },\r\n            textStyle: {\r\n                color: '#4f9ccf'\r\n            }\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLine: {\r\n            show: false\r\n        },\r\n\r\n        /*z: 10*/\r\n    },\r\n    yAxis: {\r\n        axisLine: {\r\n            show: false\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            textStyle: {\r\n                color: '#4f9ccf'\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: ['#013168'],\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        }\r\n    },\r\n    series: [{ // For shadow\r\n            type: 'bar',\r\n            itemStyle: {\r\n                normal: {\r\n                    color: 'rgba(0,0,0,0.15)'\r\n                }\r\n            },\r\n            barGap: '-100%',\r\n            barCategoryGap: '40%',\r\n            data: dataShadow,\r\n            animation: false\r\n        },\r\n        {\r\n            type: 'bar',\r\n            label: {\r\n                normal: {\r\n                    show: true,//是否在柱状顶部显示数值\r\n                    position: \"top\",\r\n                    distance: 12,\r\n                    formatter: function(params) {\r\n                        return params.data.value;\r\n                    },\r\n                    textStyle: {\r\n                        color: \"#4f9ccf\",\r\n                        fontSize: 12\r\n                    }\r\n                }\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                   color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: '#00adff'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#047eff'\r\n                        }]),\r\n\r\n                },\r\n\r\n            },\r\n            data: dataAP\r\n        }\r\n    ]\r\n};\r\n\r\n//使用制定的配置项和数据显示图表\r\n\r\n\r\n\r\n//数据动态展现\r\n\r\nsetInterval(function() { //数据动态展现\r\n    for (var i = 0; i < dataAP.length; i++) {\r\n        if (dataAP[i] % 2 == 0) {\r\n            dataAP[i] -= Math.round(Math.random() * 10);\r\n        } else {\r\n            dataAP[i] += Math.round(Math.random() * 20);\r\n        }\r\n\r\n    }\r\n    /* var optionAP = {\r\n         grid: {\r\n             bottom:\"30px\",\r\n             left: '30px',\r\n             right: '5%',\r\n             top:'5%',\r\n         },\r\n         xAxis: {\r\n             data: dataAxis,\r\n             axisLabel: {\r\n                 interval: 0,\r\n                 formatter:function(value)\r\n                 {\r\n                     //debugger\r\n                     var ret = \"\";//拼接加\\n返回的类目项\r\n                     var maxLength = 2;//每项显示文字个数\r\n                     var valLength = value.length;//X轴类目项的文字个数\r\n                     var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\r\n                     if (rowN > 1)//如果类目项的文字大于3,\r\n                     {\r\n                         for (var i = 0; i < rowN; i++) {\r\n                             var temp = \"\";//每次截取的字符串\r\n                             var start = i * maxLength;//开始截取的位置\r\n                             var end = start + maxLength;//结束截取的位置\r\n                             //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\r\n                             temp = value.substring(start, end) + \"\\n\";\r\n                             ret += temp; //凭借最终的字符串\r\n                         }\r\n                         return ret;\r\n                     }\r\n                     else {\r\n                         return value;\r\n                     }\r\n                 },\r\n                 textStyle: {\r\n                     color: '#4f9ccf'\r\n                 }\r\n             },\r\n             axisTick: {\r\n                 show: false\r\n             },\r\n             axisLine: {\r\n                 show: false\r\n             },\r\n\r\n             /!*z: 10*!/\r\n         },\r\n         yAxis: {\r\n             axisLine: {\r\n                 show: false\r\n             },\r\n             axisTick: {\r\n                 show: false\r\n             },\r\n             axisLabel: {\r\n                 textStyle: {\r\n                     color: '#4f9ccf'\r\n                 }\r\n             },\r\n             splitLine: {\r\n                 show: true,\r\n                 lineStyle:{\r\n                     color: ['#013168'],\r\n                     width: 1,\r\n                     type: 'solid'\r\n                 }\r\n             }\r\n         },\r\n         series: [\r\n             { // For shadow\r\n                 type: 'bar',\r\n                 itemStyle: {\r\n                     normal: {color: 'rgba(0,0,0,0.15)'}\r\n                 },\r\n                 barGap:'-100%',\r\n                 barCategoryGap:'40%',\r\n                 data: dataShadow,\r\n                 animation: false\r\n             },\r\n             {\r\n                 type: 'bar',\r\n                 label: {\r\n                     normal: {\r\n                         show: true,\r\n                         position: \"top\",\r\n                         distance:12,\r\n                         formatter: function(params) {\r\n                             return params.data.value;\r\n                         },\r\n                         textStyle: {\r\n                             color: \"#4f9ccf\",\r\n                             fontSize: 12\r\n                         }\r\n                     }\r\n                 },\r\n                 itemStyle: {\r\n                     normal: {\r\n                         color: function(params) {\r\n                             var colorList = ['#139dad','#80c269','#f7ac47','#67e0e3','#ffdb5c', '#e062ae','#ff9f7f','#4171fa','#106fcf','#e75d6c',];\r\n                             return colorList[params.dataIndex]\r\n                         }\r\n                     },\r\n\r\n                 },\r\n                 data: dataAP\r\n             }\r\n         ]\r\n     };*/\r\n    \r\n    var Max = Math.max(...dataAP); // 取数组里最大值\r\n    var _yMax = Math.ceil(Max / 50); // 若有余数则加1\r\n\r\n    yMax = _yMax * 50; //生成阴影的值和y轴的最大值相同\r\n\r\n    dataShadow = []; //清空之前的数据\r\n    for (var i = 0; i < dataAP.length; i++) {\r\n        dataShadow.push(yMax);\r\n    }\r\n   // console.log(dataShadow);\r\n    myChart.setOption({\r\n        series: [{ // For shadow\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: 'rgba(0,0,0,0.15)'\r\n                    }\r\n                },\r\n                barGap: '-100%',\r\n                barCategoryGap: '40%',\r\n                data: dataShadow,\r\n                animation: false\r\n            },\r\n            {\r\n                type: 'bar',\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        position: \"top\",\r\n                        distance: 12,\r\n                        formatter: function(params) {\r\n                            return params.data.value;\r\n                        },\r\n                        textStyle: {\r\n                            color: \"#4f9ccf\",\r\n                            fontSize: 12\r\n                        }\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                   color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: '#00adff'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#047eff'\r\n                        }]),\r\n\r\n                },\r\n\r\n                },\r\n                data: dataAP\r\n            }\r\n        ]\r\n    });\r\n}, 1000);","html":"","externalScripts":"","updaterUID":"bd-171648521","theme":"","layout":"","viewCount":1347,"userName":"绿***绿","commentCount":0,"starCount":6,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xFfvPBIPv_.png?v=1558667584287","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar"],"customTags":[],"updaterUserName":"绿***绿"}}