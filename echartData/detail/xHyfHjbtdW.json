{"status":0,"data":{"cid":"xHyfHjbtdW","authorUid":"bd-2239932449","authorUserName":"137*****470","title":"Draggable Points with different types","description":"","latestVersion":3,"alwaysLatest":1,"createTime":"2017-08-22T01:39:06.000Z","lastUpdateTime":"2017-09-04T09:12:29.000Z","auth":2,"uid":"bd-2239932449","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"3.6.2","versionCreateTime":"2017-08-22T02:48:17.000Z","code":"var symbolSize = 20;\n\nvar coors1 = [\n    [100, 220],\n    [200, 182],\n    [300, 191],\n    [400, 234],\n    [500, 290],\n    [600, 330],\n    [700, 310]\n];\n\nvar coors2 = [\n    [100, 420],\n    [200, 382],\n    [300, 391],\n    [400, 434],\n    [500, 490],\n    [600, 530],\n    [700, 510],\n\n\n];\n\nvar coors3 = [\n    [100, 620],\n    [200, 582],\n    [300, 591],\n    [400, 634],\n    [500, 690],\n    [600, 730],\n    [700, 710]\n];\n\nvar data = [coors1, coors2, coors3];\nvar optionSeries = [];\n\n\nfor (var i = 0; i < data.length; i++) {\n    optionSeries.push({\n        id: 'a' + i,\n        type: 'scatter',\n        smooth: true,\n        symbolSize: symbolSize,\n        data: data[i]\n    });\n}\n\nif (!app.inNode) {\n    setTimeout(function() {\n        // Add shadow circles (which is not visible) to enable drag.\n        myChart.setOption({\n            graphic: echarts.util.map(data, function(element, index) {\n                //console.log('1st layer!');\n                return {\n                    type: 'group',\n                    id: 'group' + (index + 1),\n                    children: echarts.util.map(element, function(item, dataIndex) {\n\n                        var i = index;\n                        return {\n                            type: 'circle',\n                            position: myChart.convertToPixel('grid', item),\n                            shape: {\n                                cx: 0,\n                                cy: 0,\n                                r: symbolSize / 2\n                            },\n                            invisible: true,\n                            draggable: true,\n                            ondrag: echarts.util.curry(onPointDragging, dataIndex, index),\n                            onmousemove: echarts.util.curry(showTooltip, dataIndex),\n                            onmouseout: echarts.util.curry(hideTooltip, dataIndex),\n                            z: 100\n                        };\n                    })\n                };\n            })\n\n        });\n    }, 0);\n\nwindow.addEventListener('resize', function() {\n\n    myChart.resize();\n        \n        myChart.setOption({\n            graphic: echarts.util.map(data, function(element, index) {\n                //console.log('1st layer!');\n                return {\n                    type: 'group',\n                    id: 'group' + (index + 1),\n                    children: echarts.util.map(element, function(item, dataIndex) {\n\n                        var i = index;\n                        return {\n                            type: 'circle',\n                            position: myChart.convertToPixel('grid', item),\n                            shape: {\n                                cx: 0,\n                                cy: 0,\n                                r: symbolSize / 2\n                            },\n                            invisible: true,\n                            draggable: true,\n                            ondrag: echarts.util.curry(onPointDragging, dataIndex, index),\n                            onmousemove: echarts.util.curry(showTooltip, dataIndex),\n                            onmouseout: echarts.util.curry(hideTooltip, dataIndex),\n                            z: 100\n                        };\n                    })\n                };\n            })\n\n        });\n        \n});\n}\n\n\n\n\nfunction showTooltip(dataIndex) {\n    myChart.dispatchAction({\n        type: 'showTip',\n        seriesIndex: 0,\n        dataIndex: dataIndex\n    });\n}\n\nfunction hideTooltip(dataIndex) {\n    myChart.dispatchAction({\n        type: 'hideTip'\n    });\n}\n\nfunction onPointDragging(dataIndex, i) {\n    //console.log('Drag !' + i);\n    data[i][dataIndex] = myChart.convertFromPixel('grid', this.position);\n\n    // Update data\n    myChart.setOption({\n        series: optionSeries\n    });\n}\n\n\noption = {\n    title: {\n        text: 'Draggable Points with graph chart'\n    },\n    tooltip: {\n        triggerOn: 'none',\n        formatter: function(params) {\n            return 'X: ' + params.data[0].toFixed(2) + '<br>Y: ' + params.data[1].toFixed(2);\n        }\n    },\n    grid: {},\n    xAxis: {\n        min: 0,\n        max: 1000,\n        type: 'value',\n        axisLine: {\n            onZero: false\n        }\n    },\n    yAxis: {\n        min: 0,\n        max: 1000,\n        type: 'value',\n        axisLine: {\n            onZero: false\n        }\n    },\n\n    series: optionSeries\n};","html":"","externalScripts":"","updaterUID":"bd-2239932449","theme":"shine","layout":"","viewCount":383,"userName":"137*****470","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xHyfHjbtdW.png?v=1503370097814","isCustomThumbnail":0,"builtinTags":[],"customTags":[],"updaterUserName":"137*****470"}}