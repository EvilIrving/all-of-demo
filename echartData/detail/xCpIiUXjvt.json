{"status":0,"data":{"cid":"xCpIiUXjvt","authorUid":"obd-o2Tg8Soqp6tg8vOjMDDMhPYuf1QDABm","authorUserName":"Y***s","title":"分级桑基图","description":"","latestVersion":8,"alwaysLatest":1,"createTime":"2020-07-06T14:38:42.000Z","lastUpdateTime":"2020-07-06T14:38:42.000Z","auth":2,"uid":"obd-o2Tg8Soqp6tg8vOjMDDMhPYuf1QDABm","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":8,"parentVersion":7,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-07T13:15:00.000Z","code":"// 如果节点指向 end，则为叶节点\n// let data = [{\n//         \"0\": [\n//             [\"1\", 1],\n//             [\"2\", 1],\n//             [\"5\", 1]\n//         ]\n//     },\n//     {\n//         \"0\": [[\"3\", 1]],\n//         \"1\": [\n//             [\"end\", 0]\n//         ],\n//         \"2\": [\n//             [\"3\", 1],\n//             [\"4\", 1]\n//         ],\n//         \"5\": [\n//             [\"1\", 1],\n//             [\"2\", 2]\n//         ]\n//     }\n// ]\n\n// 如果数组最后一项全end则直接掠过不写入\nlet data = [{\n    \"亚洲\": [\n        [\"北京\", 2]\n    ]\n}, {\n    \"亚洲\": [\n        [\"北京\", 1]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"北京\": [\n        [\"广东\", 1]\n    ]\n}, {\n    \"亚洲\": [\n        [\"北京\", 2]\n    ],\n    \"北京\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"上海\": [\n        [\"广东\", 2]\n    ],\n    \"亚洲\": [\n        [\"北京\", 1],\n        [\"广东\", 4]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 4],\n        [\"上海\", 1]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ],\n    \"日本\": [\n        [\"上海\", 1]\n    ]\n}, {\n    \"上海\": [\n        [\"end\", 0]\n    ],\n    \"亚洲\": [\n        [\"北京\", 4],\n        [\"广东\", 5]\n    ],\n    \"北京\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ],\n    \"日本\": [\n        [\"北京\", 1]\n    ]\n}, {\n    \"亚洲\": [\n        [\"北京\", 3],\n        [\"广东\", 4]\n    ],\n    \"北京\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 5],\n        [\"上海\", 2]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ],\n    \"日本\": [\n        [\"广东\", 1]\n    ]\n}, {\n    \"上海\": [\n        [\"end\", 0]\n    ],\n    \"亚洲\": [\n        [\"北京\", 3],\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"北京\", 1],\n        [\"广东\", 8]\n    ],\n    \"北京\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"北京\", 3],\n        [\"广东\", 4],\n        [\"上海\", 1]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ],\n    \"日本\": [\n        [\"北京\", 1]\n    ]\n}, {\n    \"上海\": [\n        [\"广东\", 1]\n    ],\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"北京\": [\n        [\"end\", 0]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"上海\": [\n        [\"广东\", 1]\n    ],\n    \"亚洲\": [\n        [\"广东\", 2],\n        [\"上海\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ],\n    \"日本\": [\n        [\"上海\", 1]\n    ]\n}, {\n    \"上海\": [\n        [\"广东\", 2]\n    ],\n    \"亚洲\": [\n        [\"广东\", 2]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 2],\n        [\"上海\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"上海\": [\n        [\"end\", 0]\n    ],\n    \"亚洲\": [\n        [\"广东\", 5]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}, {\n    \"亚洲\": [\n        [\"广东\", 1]\n    ],\n    \"广东\": [\n        [\"end\", 0]\n    ]\n}]\n\nlet timeline = ['2020-03-16', '2020-03-17', '2020-03-19', '2020-03-20', '2020-03-21', '2020-03-22', '2020-03-24', '2020-03-26', '2020-03-27']\n\n\nfunction connect2fill(source, target) {\n    return {\n        source: source,\n        target: target,\n        value: 0,\n        lineStyle: {\n            opacity: 0\n        },\n        emphasis: {\n            opacity: 0\n        }\n    }\n}\n\nfunction connect(level, source, target, value) {\n    return {\n        \"source\": level + \"-\" + source,\n        \"target\": (level + 1) + \"-\" + target,\n        \"value\": value,\n        lineStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                    offset: 0,\n                    color: \"#4e8ebf\"\n                },\n                {\n                    offset: 0.5,\n                    color: \"#dddddd\"\n                },\n                {\n                    offset: 1,\n                    color: \"#c84641\"\n                }\n            ]),\n            curveness: 0.3\n        }\n    }\n}\n\nlet nodes = [{\n        name: \"level-0\",\n        itemStyle: {\n            normal: {\n                opacity: 0\n            }\n        }\n    } // 根占位符\n]\nlet links = [{\n    source: \"level-0\",\n    target: \"level-1\",\n    value: 0,\n    lineStyle: {\n        opacity: 0\n    },\n    emphasis: {\n        opacity: 0\n    }\n}]\nlet nodes_list = []\nlet last_temp = []\nlet last_list = []\n\n// 快速创建点连接到占位符\nfunction add_nodes(level, name) {\n    let n = level + \"-\" + name\n    if (nodes_list.indexOf(n) == -1) {\n        nodes.push({\n            name: n\n        })\n        nodes_list.push(n)\n    }\n\n}\n\n\nfor (let level = 0; level < data.length; level++) {\n    // 首先创建各级占位符\n    nodes.push({\n        name: \"level-\" + (level + 1),\n        itemStyle: {\n            normal: {\n                opacity: 0\n            }\n        },\n        label: {\n            show: false\n        }\n    })\n    // 占位符需要首尾相连\n    if (level > 0) {\n        links.push(connect2fill(\"level-\" + level, \"level-\" + (level + 1)))\n    }\n\n\n    // 插入各级节点及连接，命名为层级-名字，label为原名\n    let level_data = data[level]\n    for (let source in level_data) {\n        // 添加source节点\n        add_nodes(level, source)\n\n        if (level > 0) {\n\n            // 如果source节点是中间出现的，就需要连接到前置占位符\n            if (last_list.indexOf(level + \"-\" + source) == -1) {\n                console.log(level + \"----\" + source)\n                links.push(connect2fill(\"level-\" + (level - 1), level + \"-\" + source))\n            }\n        }\n\n        let val = level_data[source]\n        for (let i = 0; i < val.length; i++) {\n            let target = val[i][0]\n            let value = val[i][1]\n\n            // 为end\n            if (target == \"end\") {\n                // 连接到下一级占位符\n                links.push(connect2fill(level + \"-\" + source, \"level-\" + (level + 1)))\n            } else {\n                last_temp.push((level + 1) + \"-\" + target)\n                // 非最低级叶节点\n                if (level < data.length) {\n                    // 添加连接\n                    links.push(connect(level, source, target, value))\n                }\n                // 添加节点\n                // 如果节点存在就不寸\n                add_nodes(level + 1, target)\n\n            }\n        }\n    }\n    last_list = last_temp\n    last_temp = []\n}\n\n\n\noption = {\n    backgroundColor: \"#FFFFFF\",\n    grid: {\n        left: '15%',\n        right: '5%',\n        top: '1%',\n        bottom: '1%'\n    },\n    xAxis: {\n        type: 'category',\n        position: 'top',\n        boundaryGap: false,\n        splitLine: {\n            show: false\n        },\n        axisLine: {\n            show: false\n        },\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            color: '#293c55',\n            inside: false,\n            align: 'center',\n            margin: -30,\n            formatter: e => {\n                return e.substring(5, 10)\n            }\n        },\n        z: 10,\n\n        data: timeline\n    },\n    yAxis: {\n        show: false,\n        z: 10\n    },\n    series: [{\n        name: \"sankey\",\n        type: \"sankey\",\n        layout: 'none',\n        draggable: false,\n        left: '4.5%',\n        right: '4.5%',\n        top: '5%',\n        bottom: '5%',\n        // width: '100%',\n        // nodeWidth: '16',\n        data: nodes,\n        // layoutIterations: 0,\n        links: links,\n        itemStyle: {\n            color: \"#1f77b4\",\n            borderColor: \"#1f77b4\"\n        },\n        focusNodeAdjacency: true,\n        label: {\n            color: \"#fff\",\n            position: 'inside',\n            rotate: -90,\n            fontFamily: \"Arial\",\n            fontSize: 18,\n            formatter: e => {\n                return e.name.split(\"-\")[1]\n            }\n        }\n    }, ],\n    tooltip: {\n        trigger: \"item\"\n    }\n};\n\nmyChart.setOption(option)\nmyChart.on(\"click\", e => console.log(e))","html":"","externalScripts":"","updaterUID":"obd-o2Tg8Soqp6tg8vOjMDDMhPYuf1QDABm","theme":"","layout":"","viewCount":464,"userName":"Y***s","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xCpIiUXjvt.png?v=1594127700595","isCustomThumbnail":0,"builtinTags":["category-work","series-sankey","title","tooltip"],"customTags":[],"updaterUserName":"Y***s"}}