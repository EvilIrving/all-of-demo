{"status":0,"data":{"cid":"xrJXJYre7X","authorUid":"bd-2501078763","authorUserName":"格***s","title":"","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2018-07-09T02:30:51.000Z","lastUpdateTime":"2018-07-09T02:30:51.000Z","auth":2,"uid":"bd-2501078763","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.1.0","versionCreateTime":"2018-07-09T02:30:51.000Z","code":"var mlRing = function(options) {\r\n    let opts = Object.assign({\r\n        id: 'chart-panel',\r\n        data: 88.6,\r\n        background: '#0d1e30',\r\n        level: [\"极差\", '一般', '优秀'],\r\n        direction: [0, 0, 0, 1], //渐变的方向(此时是从上到下)\r\n        color: [ //渐变颜色(此时分三个级别)\r\n            [{\r\n                    offset: 0,\r\n                    color: '#c7465c'\r\n                },\r\n                {\r\n                    offset: 1,\r\n                    color: '#e68f02'\r\n                }\r\n            ],\r\n            [{\r\n                    offset: 0,\r\n                    color: '#a4be39'\r\n                },\r\n                {\r\n                    offset: 1,\r\n                    color: '#79cf60'\r\n                }\r\n            ],\r\n            [{\r\n                    offset: 0,\r\n                    color: '#03f1d7'\r\n                },\r\n                {\r\n                    offset: 1,\r\n                    color: '#01c0f7'\r\n                }\r\n            ]\r\n        ],\r\n        ringRadiusOut: 80, //外径\r\n        ringRadiusInner: 50, //内径\r\n        splitLineMargin: 5, //分割线边距\r\n        startAngle: -Math.PI / 2, //起始弧度\r\n        endAngle: Math.PI * 3 / 2, //结束角度\r\n        fontSize: {\r\n            data: 24,\r\n            level: 14\r\n        },\r\n        pointRadius: 5\r\n    }, options);\r\n\r\n    const zr = zrender.init(document.getElementById(opts.id));\r\n    const w = zr.getWidth();\r\n    const h = zr.getHeight();\r\n    const centerX = w / 2;\r\n    const centerY = h / 2;\r\n\r\n    const data = opts.data;\r\n    const startAngle = opts.startAngle;\r\n    const endAngle = opts.endAngle;\r\n\r\n    if (opts.background) {\r\n        document.getElementById(opts.id).style.background = opts.background;\r\n    }\r\n    //确定当前数值的所属级别\r\n    let level = 0;\r\n    if (data >= 66.66) {\r\n        level = 2\r\n    } else if (data >= 33.33 && data < 66.66) {\r\n        level = 1\r\n    }\r\n    //渐变颜色\r\n    const linearColor = new zrender.LinearGradient(opts.direction[0], opts.direction[1], opts.direction[2], opts.direction[3], opts.color[level]);\r\n    const currColor = opts.color[level][0].color;\r\n\r\n    //添加数值文字\r\n    const fontSizeData = opts.fontSize.data;\r\n    const dataText = new zrender.Text({\r\n        style: {\r\n            text: data + '%',\r\n            fontSize: fontSizeData,\r\n            textFill: currColor,\r\n            textAlign: 'center',\r\n            textVerticalAlign: 'middle',\r\n        },\r\n        position: [centerX, (centerY - fontSizeData / 2)]\r\n    });\r\n    zr.add(dataText);\r\n\r\n    //添加级别文字\r\n    const fontSizeLevel = opts.fontSize.level;\r\n    const levelText = new zrender.Text({\r\n        style: {\r\n            text: opts.level[level],\r\n            fontSize: fontSizeLevel,\r\n            textFill: currColor,\r\n            textAlign: 'center',\r\n            textVerticalAlign: 'middle',\r\n        },\r\n        position: [centerX, (centerY + fontSizeLevel)]\r\n    });\r\n    zr.add(levelText);\r\n\r\n    //初始化背景圆\r\n    const sector = new zrender.Sector({\r\n        shape: {\r\n            cx: centerX,\r\n            cy: centerY,\r\n            r: opts.ringRadiusOut,\r\n            r0: opts.ringRadiusInner,\r\n            startAngle: startAngle,\r\n            endAngle: endAngle,\r\n            clockwise: true\r\n        },\r\n        style: {\r\n            fill: linearColor\r\n        },\r\n    });\r\n    zr.add(sector);\r\n\r\n    const getPoint = function(options) {\r\n        var opts = Object.assign({\r\n            center: [0, 0], //圆的中心点\r\n            angle: 0,\r\n            r: 45,\r\n        }, options);\r\n        var point = [];\r\n        var lingLongX = Math.cos(opts.angle) * opts.r;\r\n        var lingLongY = Math.sin(opts.angle) * opts.r;\r\n        point[0] = opts.center[0] + lingLongX;\r\n        point[1] = opts.center[1] + lingLongY;\r\n        return point;\r\n    }\r\n\r\n    //计算分割线的位置\r\n    const getSplitLine = function(options) {\r\n        var opts = Object.assign({\r\n            splitSize: 0, //最多平分56个扇区 此数值需是4的整数倍\r\n            startAngle: 0,\r\n            endAngle: 0,\r\n            r: 0,\r\n            r0: 0,\r\n            data: 0, //百分比，100%等于2*Math.PI\r\n        }, options);\r\n\r\n        var unitAngle = (endAngle - startAngle) / opts.splitSize;\r\n        var splitLineSize = Math.floor(opts.splitSize * opts.data / 100);\r\n        var splitLineArr = [];\r\n\r\n        for (var i = 0; i < splitLineSize; i++) {\r\n            var startPoint = [];\r\n            var endPoint = [];\r\n            var angle = opts.startAngle + unitAngle * i;\r\n\r\n            startPoint = getPoint({\r\n                center: [centerX, centerY], //圆的中心点\r\n                angle: angle,\r\n                r: opts.r0\r\n            });\r\n\r\n            if (angle % (Math.PI / 2) === 0) { //刻度线加长特殊标记\r\n                endPoint = getPoint({\r\n                    center: [centerX, centerY], //圆的中心点\r\n                    angle: angle,\r\n                    r: opts.r + 3\r\n                });\r\n            } else {\r\n                endPoint = getPoint({\r\n                    center: [centerX, centerY], //圆的中心点\r\n                    angle: angle,\r\n                    r: opts.r\r\n                });\r\n            }\r\n            splitLineArr.push([startPoint, endPoint]);\r\n        }\r\n        return splitLineArr;\r\n    }\r\n\r\n    const splitLineData = getSplitLine({\r\n        splitSize: 56,\r\n        startAngle: startAngle, //从12点方向开始顺时针旋转\r\n        endAngle: endAngle,\r\n        r: opts.ringRadiusOut - opts.splitLineMargin,\r\n        r0: opts.ringRadiusInner + opts.splitLineMargin,\r\n        data: data\r\n    });\r\n\r\n    //初始化分割线\r\n    splitLineData.forEach(function(item) {\r\n        var Line = new zrender.Line({\r\n            shape: {\r\n                x1: item[0][0],\r\n                y1: item[0][1],\r\n                x2: item[1][0],\r\n                y2: item[1][1],\r\n            },\r\n            style: {\r\n                stroke: '#fff'\r\n            }\r\n        });\r\n        zr.add(Line);\r\n    });\r\n\r\n    //画点方法\r\n    const drawPoint = function(options) {\r\n        var opts = Object.assign({\r\n            cx: 0,\r\n            cy: 0,\r\n            r: 5,\r\n            style: {}\r\n        }, options);\r\n\r\n        var particle = new zrender.Circle({\r\n            shape: {\r\n                cx: opts.cx,\r\n                cy: opts.cy,\r\n                r: opts.r\r\n            },\r\n            style: opts.style,\r\n        });\r\n        zr.add(particle);\r\n    }\r\n\r\n    const startPoint = getPoint({\r\n        center: [centerX, centerY], //圆的中心点\r\n        angle: startAngle,\r\n        r: opts.ringRadiusOut + opts.splitLineMargin\r\n    });\r\n\r\n    //结束点的弧度\r\n    const endAnglePoint = startAngle + (endAngle - startAngle) * data / 100;\r\n    const endPointOuter = getPoint({\r\n        center: [centerX, centerY], //圆的中心点\r\n        angle: endAnglePoint,\r\n        r: opts.ringRadiusOut + opts.splitLineMargin\r\n    });\r\n    const endPointInner = getPoint({\r\n        center: [centerX, centerY], //圆的中心点\r\n        angle: endAnglePoint,\r\n        r: opts.ringRadiusInner + opts.splitLineMargin,\r\n    });\r\n\r\n    //结束点画刻度线\r\n    const Line = new zrender.Line({\r\n        shape: {\r\n            x1: endPointInner[0],\r\n            y1: endPointInner[1],\r\n            x2: endPointOuter[0],\r\n            y2: endPointOuter[1],\r\n        },\r\n        style: {\r\n            stroke: '#fff',\r\n            lineWidth: 3\r\n        }\r\n    });\r\n    zr.add(Line);\r\n\r\n    //开始点和结束点连线\r\n    const p2p = new zrender.Sector({\r\n        shape: {\r\n            cx: centerX,\r\n            cy: centerY,\r\n            r: opts.ringRadiusOut + opts.splitLineMargin,\r\n            r0: opts.ringRadiusOut + opts.splitLineMargin - 1,\r\n            startAngle: startAngle,\r\n            endAngle: endAnglePoint,\r\n            clockwise: true\r\n        },\r\n        style: {\r\n            fill: linearColor\r\n        },\r\n    });\r\n    zr.add(p2p);\r\n\r\n    //初始化起始点\r\n    drawPoint({\r\n        cx: startPoint[0],\r\n        cy: startPoint[1],\r\n        r: opts.pointRadius,\r\n        style: {\r\n            fill: currColor\r\n        }\r\n    });\r\n    //初始化结束点\r\n    drawPoint({\r\n        cx: endPointOuter[0],\r\n        cy: endPointOuter[1],\r\n        r: opts.pointRadius,\r\n        style: {\r\n            fill: currColor,\r\n            stroke: '#fff',\r\n            lineWidth: 3\r\n        }\r\n    });\r\n}\r\n\r\nconst option = {\r\n    id: 'chart-panel',\r\n    data: 88.6,\r\n    background: '#0d1e30',\r\n    level: [\"极差\", '一般', '优秀'],\r\n    direction: [0, 0, 0, 1], //渐变的方向(此时是从上到下)\r\n    color: [ //渐变颜色(此时分三个级别)\r\n        [{\r\n                offset: 0,\r\n                color: '#c7465c'\r\n            },\r\n            {\r\n                offset: 1,\r\n                color: '#e68f02'\r\n            }\r\n        ],\r\n        [{\r\n                offset: 0,\r\n                color: '#a4be39'\r\n            },\r\n            {\r\n                offset: 1,\r\n                color: '#79cf60'\r\n            }\r\n        ],\r\n        [{\r\n                offset: 0,\r\n                color: '#03f1d7'\r\n            },\r\n            {\r\n                offset: 1,\r\n                color: '#01c0f7'\r\n            }\r\n        ]\r\n    ],\r\n    ringRadiusOut: 75,\r\n    ringRadiusInner: 50,\r\n    splitLineMargin: 5,\r\n    startAngle: -Math.PI / 2,\r\n    endAngle: Math.PI * 3 / 2,\r\n    fontSize: {\r\n        data: 24,\r\n        level: 14\r\n    },\r\n    pointRadius: 3\r\n}\r\nmlRing(option);\r\nsetInterval(() => {\r\n    Object.assign(option, {\r\n        data: parseInt(Math.random() * 100)\r\n    })\r\n    mlRing(option);\r\n}, 3000)","html":"","externalScripts":"https://ecomfe.github.io/zrender-doc/public/lib/js/zrender.min.js","updaterUID":"bd-2501078763","theme":"","layout":"","viewCount":53,"userName":"格***s","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xrJXJYre7X.undefined?v=","isCustomThumbnail":0,"builtinTags":["category-work"],"customTags":[],"updaterUserName":"格***s"}}