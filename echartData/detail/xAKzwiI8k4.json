{"status":0,"data":{"cid":"xAKzwiI8k4","authorUid":"bd-729462903","authorUserName":"C***c","title":"Chart 3: China Special Economic Zone and Coastal Open City","description":"中国地图城市定点","latestVersion":3,"alwaysLatest":1,"createTime":"2019-06-13T09:33:58.000Z","lastUpdateTime":"2019-06-13T09:33:58.000Z","auth":2,"uid":"bd-729462903","publishedVersion":1,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-13T09:33:58.000Z","code":"let data = [\n    { name: 'Shenzhen', value: 20 },\n    { name: 'Xiamen', value: 20 },\n    { name: 'Shantou', value: 20 },\n    { name: 'Hainan', value: 20 }\n];\nlet data_2 = [\n    { name: 'Shanghai', value: 20 },\n    { name: 'Dalian', value: 20 },\n    { name: 'Qinhuangdao', value: 20 },\n    { name: 'Tianjin', value: 20 },\n    { name: 'Yantai', value: 20 },\n    { name: 'Qingdao', value: 20 },\n    { name: 'Lianyungang', value: 20 },\n    { name: 'Nantong', value: 20},\n    { name: 'Ningbo', value: 20 },\n    { name: 'Wenzhou', value: 20 },\n    { name: 'Fuzhou', value: 20 }\n];\n\nlet special_data_1 = [\n    { name: 'Zhuhai', value: 20 }\n];\nlet special_data_2 = [\n    { name: 'Zhanjiang', value: 20 }\n];\nlet special_data_3 = [\n    { name: 'Guangzhou', value: 20 },\n    { name: 'Beihai', value: 20 }\n];\n// let data = [\n//     { name: '深圳', value: 20 },\n//     { name: '厦门', value: 20 },\n//     { name: '汕头', value: 20 },\n//     { name: '海南', value: 20 }\n// ];\n// let data_2 = [\n//     { name: '上海', value: 20 },\n//     { name: '大连', value: 20 },\n//     { name: '秦皇岛', value: 20 },\n//     { name: '天津', value: 20 },\n//     { name: '烟台', value: 20 },\n//     { name: '青岛', value: 20 },\n//     { name: '连云港', value: 20 },\n//     { name: '南通', value: 20},\n//     { name: '宁波', value: 20 },\n//     { name: '温州', value: 20 },\n//     { name: '福州', value: 20 }\n// ];\n\n// let special_data_1 = [\n//     { name: '珠海', value: 20 }\n// ];\n// let special_data_2 = [\n//     { name: '湛江', value: 20 }\n// ];\n// let special_data_3 = [\n//     { name: '广州', value: 20 },\n//     { name: '北海', value: 20 }\n// ];\nlet geoCoordMap = {\n    'Qingdao':[120.33,36.07],\n    'Shanghai':[121.48,31.22],\n    'Xiamen':[118.1,24.46],\n    'Shantou':[116.69,23.39],\n    'Lianyungang':[119.16,34.59],\n    'Shenzhen':[114.07,22.62],\n    'Zhuhai':[113.52,22.3],\n    'Dalian':[121.62,38.92],\n    'Beihai':[109.12,21.49],\n    'Tianjin':[117.2,39.13],\n    'Yantai':[121.39,37.52],\n    'Nantong':[121.05,32.08],\n    'Ningbo':[121.56,29.86], \n    'Wenzhou':[120.65,28.01],\n    'Guangzhou':[113.23,23.16],\n    'Hainan':[110.37,19.10],\n    'Zhanjiang':[110.359377,21.270708],\n    'Qinhuangdao':[119.57,39.95]\n};\n// let geoCoordMap = {\n//     '海门':[121.15,31.89],\n//     '鄂尔多斯':[109.781327,39.608266],\n//     '招远':[120.38,37.35],\n//     '舟山':[122.207216,29.985295],\n//     '齐齐哈尔':[123.97,47.33],\n//     '盐城':[120.13,33.38],\n//     '赤峰':[118.87,42.28],\n//     '青岛':[120.33,36.07],\n//     '乳山':[121.52,36.89],\n//     '金昌':[102.188043,38.520089],\n//     '泉州':[118.58,24.93],\n//     '莱西':[120.53,36.86],\n//     '日照':[119.46,35.42],\n//     '胶南':[119.97,35.88],\n//     '南通':[121.05,32.08],\n//     '拉萨':[91.11,29.97],\n//     '云浮':[112.02,22.93],\n//     '梅州':[116.1,24.55],\n//     '文登':[122.05,37.2],\n//     '上海':[121.48,31.22],\n//     '攀枝花':[101.718637,26.582347],\n//     '威海':[122.1,37.5],\n//     '承德':[117.93,40.97],\n//     '厦门':[118.1,24.46],\n//     '汕尾':[115.375279,22.786211],\n//     '潮州':[116.63,23.68],\n//     '丹东':[124.37,40.13],\n//     '太仓':[121.1,31.45],\n//     '曲靖':[103.79,25.51],\n//     '烟台':[121.39,37.52],\n//     '福州':[119.3,26.08],\n//     '瓦房店':[121.979603,39.627114],\n//     '即墨':[120.45,36.38],\n//     '抚顺':[123.97,41.97],\n//     '玉溪':[102.52,24.35],\n//     '张家口':[114.87,40.82],\n//     '阳泉':[113.57,37.85],\n//     '莱州':[119.942327,37.177017],\n//     '湖州':[120.1,30.86],\n//     '汕头':[116.69,23.39],\n//     '昆山':[120.95,31.39],\n//     '宁波':[121.56,29.86],\n//     '湛江':[110.359377,21.270708],\n//     '揭阳':[116.35,23.55],\n//     '荣成':[122.41,37.16],\n//     '连云港':[119.16,34.59],\n//     '葫芦岛':[120.836932,40.711052],\n//     '常熟':[120.74,31.64],\n//     '东莞':[113.75,23.04],\n//     '河源':[114.68,23.73],\n//     '淮安':[119.15,33.5],\n//     '泰州':[119.9,32.49],\n//     '南宁':[108.33,22.84],\n//     '营口':[122.18,40.65],\n//     '惠州':[114.4,23.09],\n//     '江阴':[120.26,31.91],\n//     '蓬莱':[120.75,37.8],\n//     '韶关':[113.62,24.84],\n//     '嘉峪关':[98.289152,39.77313],\n//     '广州':[113.23,23.16],\n//     '延安':[109.47,36.6],\n//     '太原':[112.53,37.87],\n//     '清远':[113.01,23.7],\n//     '中山':[113.38,22.52],\n//     '昆明':[102.73,25.04],\n//     '寿光':[118.73,36.86],\n//     '海南':[110.37,19.10],\n//     '盘锦':[122.070714,41.119997],\n//     '长治':[113.08,36.18],\n//     '深圳':[114.07,22.62],\n//     '珠海':[113.52,22.3],\n//     '宿迁':[118.3,33.96],\n//     '咸阳':[108.72,34.36],\n//     '铜川':[109.11,35.09],\n//     '平度':[119.97,36.77],\n//     '佛山':[113.11,23.05],\n//     '海口':[110.35,20.02],\n//     '江门':[113.06,22.61],\n//     '章丘':[117.53,36.72],\n//     '肇庆':[112.44,23.05],\n//     '大连':[121.62,38.92],\n//     '临汾':[111.5,36.08],\n//     '吴江':[120.63,31.16],\n//     '石嘴山':[106.39,39.04],\n//     '沈阳':[123.38,41.8],\n//     '苏州':[120.62,31.32],\n//     '茂名':[110.88,21.68],\n//     '嘉兴':[120.76,30.77],\n//     '长春':[125.35,43.88],\n//     '胶州':[120.03336,36.264622],\n//     '银川':[106.27,38.47],\n//     '张家港':[120.555821,31.875428],\n//     '三门峡':[111.19,34.76],\n//     '锦州':[121.15,41.13],\n//     '南昌':[115.89,28.68],\n//     '柳州':[109.4,24.33],\n//     '三亚':[109.511909,18.252847],\n//     '自贡':[104.778442,29.33903],\n//     '吉林':[126.57,43.87],\n//     '阳江':[111.95,21.85],\n//     '泸州':[105.39,28.91],\n//     '西宁':[101.74,36.56],\n//     '宜宾':[104.56,29.77],\n//     '呼和浩特':[111.65,40.82],\n//     '成都':[104.06,30.67],\n//     '大同':[113.3,40.12],\n//     '镇江':[119.44,32.2],\n//     '桂林':[110.28,25.29],\n//     '张家界':[110.479191,29.117096],\n//     '宜兴':[119.82,31.36],\n//     '北海':[109.12,21.49],\n//     '西安':[108.95,34.27],\n//     '金坛':[119.56,31.74],\n//     '东营':[118.49,37.46],\n//     '牡丹江':[129.58,44.6],\n//     '遵义':[106.9,27.7],\n//     '绍兴':[120.58,30.01],\n//     '扬州':[119.42,32.39],\n//     '常州':[119.95,31.79],\n//     '潍坊':[119.1,36.62],\n//     '重庆':[106.54,29.59],\n//     '台州':[121.420757,28.656386],\n//     '南京':[118.78,32.04],\n//     '滨州':[118.03,37.36],\n//     '贵阳':[106.71,26.57],\n//     '无锡':[120.29,31.59],\n//     '本溪':[123.73,41.3],\n//     '克拉玛依':[84.77,45.59],\n//     '渭南':[109.5,34.52],\n//     '马鞍山':[118.48,31.56],\n//     '宝鸡':[107.15,34.38],\n//     '焦作':[113.21,35.24],\n//     '句容':[119.16,31.95],\n//     '北京':[116.46,39.92],\n//     '徐州':[117.2,34.26],\n//     '衡水':[115.72,37.72],\n//     '包头':[110,40.58],\n//     '绵阳':[104.73,31.48],\n//     '乌鲁木齐':[87.68,43.77],\n//     '枣庄':[117.57,34.86],\n//     '杭州':[120.19,30.26],\n//     '淄博':[118.05,36.78],\n//     '鞍山':[122.85,41.12],\n//     '溧阳':[119.48,31.43],\n//     '库尔勒':[86.06,41.68],\n//     '安阳':[114.35,36.1],\n//     '开封':[114.35,34.79],\n//     '济南':[117,36.65],\n//     '德阳':[104.37,31.13],\n//     '温州':[120.65,28.01],\n//     '九江':[115.97,29.71],\n//     '邯郸':[114.47,36.6],\n//     '临安':[119.72,30.23],\n//     '兰州':[103.73,36.03],\n//     '沧州':[116.83,38.33],\n//     '临沂':[118.35,35.05],\n//     '南充':[106.110698,30.837793],\n//     '天津':[117.2,39.13],\n//     '富阳':[119.95,30.07],\n//     '泰安':[117.13,36.18],\n//     '诸暨':[120.23,29.71],\n//     '郑州':[113.65,34.76],\n//     '哈尔滨':[126.63,45.75],\n//     '聊城':[115.97,36.45],\n//     '芜湖':[118.38,31.33],\n//     '唐山':[118.02,39.63],\n//     '平顶山':[113.29,33.75],\n//     '邢台':[114.48,37.05],\n//     '德州':[116.29,37.45],\n//     '济宁':[116.59,35.38],\n//     '荆州':[112.239741,30.335165],\n//     '宜昌':[111.3,30.7],\n//     '义乌':[120.06,29.32],\n//     '丽水':[119.92,28.45],\n//     '洛阳':[112.44,34.7],\n//     '秦皇岛':[119.57,39.95],\n//     '株洲':[113.16,27.83],\n//     '石家庄':[114.48,38.03],\n//     '莱芜':[117.67,36.19],\n//     '常德':[111.69,29.05],\n//     '保定':[115.48,38.85],\n//     '湘潭':[112.91,27.87],\n//     '金华':[119.64,29.12],\n//     '岳阳':[113.09,29.37],\n//     '长沙':[113,28.21],\n//     '衢州':[118.88,28.97],\n//     '廊坊':[116.7,39.53],\n//     '菏泽':[115.480656,35.23375],\n//     '合肥':[117.27,31.86],\n//     '武汉':[114.31,30.52],\n//     '大庆':[125.03,46.58]\n// };\n\nlet convertData = function (data) {\n    let res = [];\n    for (let i = 0; i < data.length; i++) {\n        let geoCoord = geoCoordMap[data[i].name];\n        if (geoCoord) {\n            res.push({\n                name: data[i].name,\n                value: geoCoord.concat(data[i].value)\n            });\n        }\n    }\n    return res;\n};\n\n/**\n* priority  tooltip朝向（top/bottom）\n* left, top 为默认值\n* 根据展示内容需要微调text的宽高\n*/\nlet left = false, top = false, priority = 'top'\n// 自定义tooltip配置属性\nlet config = {\n    ecBoxId: 'chart-panel',\n    lineColor: '#f4e925',\n    L1: {\n        time: 0.3,\n        long: 40\n    },\n    L2: {\n        time: 0.3,\n        long: 40\n    },\n    text: {\n        time: 0.5,\n        text: '',\n        font: '14px Arial',\n        color: '#f4e925',\n        padding: [10, 10],\n        width: 120,\n        height: 60,\n        lineHeight: 24,\n        backgroundColor: 'rgba(50, 50, 50, 0.9)'\n    }\n}\noption = {\n    title: {\n        text: 'Chart 3: China Special Economic Zone and Coastal Open City',\n        textStyle: {\n            fontWeight: 'bolder',\n            fontSize: 18,\n            textShadowBlur: 0\n        },\n        color: '#000000',\n        // textAlign: 'center',\n        // align: 'center',\n        padding: [\n            80,  // 上\n            240, // 左\n        ]\n    },\n    backgroundColor: '#FFFFFF',\n    tooltip : {\n        trigger: 'item',\n        triggerOn: 'click',\n        backgroundColor: 'transparent',\n        alwaysShowContent: true,\n        position (pos) {\n            let position = getPosOrSize('pos', pos)\n            return position\n        },\n        formatter (params,p,a) {\n            canvasAnimation(params)\n            let size = getPosOrSize('size')\n            let tooltipDom = `<canvas id=\"tCanvas\" width=\"${size.width}\" height=\"${size.height}\">123</canvas>`\n            return tooltipDom\n        }\n    },\n    legend: {\n        show: true,\n        top: 200,\n        orient: 'vertical',\n        z: 2\n    },\n    geo: {\n        map: 'china',\n        label: {\n            emphasis: {\n                show: false\n            }\n        },\n        roam: false,\n        itemStyle: {\n            normal: {\n                areaColor: '#CCCCCC',\n                borderColor: '#FFFFFF'\n            },\n            emphasis: {\n                areaColor: '#00CC33'\n            }\n        }\n    },\n    series : [\n        {\n            name: 'Special Economic Zone',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(data.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 50)),\n            symbolSize: function (val) {\n                return val[2] / 5;\n            },\n            // showEffectOn: 'render',\n            // rippleEffect: {\n            //     brushType: 'stroke'\n            // },\n            // legendHoverLink: false,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#003399',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        },\n        {\n            name: 'Special Economic Zone',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(special_data_1.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 50)),\n            symbolSize: function (val) {\n                return val[2] / 5;\n            },\n            // showEffectOn: 'render',\n            // rippleEffect: {\n            //     brushType: 'stroke'\n            // },\n            // hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'bottom',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#003399',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        },\n        {\n            name: 'Coastal Open City',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(data_2.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 50)),\n            symbolSize: function (val) {\n                return val[2] / 5;\n            },\n            // showEffectOn: 'render',\n            // rippleEffect: {\n            //     brushType: 'stroke'\n            // },\n            // hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#CC6666',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        },\n        {\n            name: 'Coastal Open City',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(special_data_2.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 50)),\n            symbolSize: function (val) {\n                return val[2] / 5;\n            },\n            // showEffectOn: 'render',\n            // rippleEffect: {\n            //     brushType: 'stroke'\n            // },\n            // hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'bottom',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#CC6666',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        },\n        {\n            name: 'Coastal Open City',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(special_data_3.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 50)),\n            symbolSize: function (val) {\n                return val[2] / 5;\n            },\n            // showEffectOn: 'render',\n            // rippleEffect: {\n            //     brushType: 'stroke'\n            // },\n            // hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'top',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#CC6666',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        }\n    ]\n};\n\n// const canvasAnimation = params => {\n//     setTimeout(function() {\n//         config.text.text = `地点：${params.name}\\n数量：${params.value[2]}`\n//         new myTooltip('tCanvas', config)\n//     }, 0);\n// }\n\n//计算tooltip位置\nconst getPosOrSize = (type, point) => {\n    let x1 = config.L1.long * Math.sin(Math.PI / 4)\n    let width = x1 + config.L2.long + config.text.width,\n        height = x1 + config.text.height / 2\n    if (type === 'size') {\n        config.width = width\n        config.height = height\n        return {\n            width,\n            height\n        }\n    } else {\n        let box = document.getElementById(config.ecBoxId),\n            bw = box.offsetWidth,\n            bh = box.offsetHeight,\n            x = point[0],\n            y = point[1]\n        left = false\n        if (x + width >= bw / 1.2) {\n            x = x - width - 5\n            left = true\n        }\n        if (priority === 'top') {\n            // L1向上\n            top = true\n            y = y - height - 5\n            if (y <= 0) {\n                y = point[1]\n                top = false\n            }\n            return [x, y]\n        } else {\n            top = false\n            if (y + height >= bh) {\n                y = y - height - 5\n                top = true\n            }\n            return [x, y]\n        }\n    }\n}\n\nclass myTooltip {\n    constructor (id, config) {\n        this.config = config\n        this.totalTime = 0\n        this.stage = new createjs.Stage(id)\n        this.timeline = new TimelineMax({repeat: 0})\n        this.g = new createjs.Graphics()\n        this.lineShape = new createjs.Shape(this.g)\n        this.textShape = new createjs.Shape()\n        this.stage.addChild(this.lineShape, this.textShape)\n        this.init()\n        this.begin()\n        this.update()\n    }\n    init () {\n        this.start = [0, 0]\n        if (left) {\n            this.start[0] = this.config.width \n        }\n        if (top) {\n            this.start[1] = this.config.height\n        }\n    }\n    begin () {\n        this.L1()\n        this.L2()\n        this.addText()\n    }\n    L1 () {\n        let me = this\n        let c = me.config\n        let tl = new TimelineMax()\n        let scale = {s: 0},\n        x = c.L1.long * Math.sin(Math.PI / 4)\n        if (left) {\n            if (top) {\n                this.L1End = [me.start[0] - x, me.start[1] - x]\n            } else {\n                this.L1End = [me.start[0] - x, me.start[1] + x]\n            }\n        } else {\n            if (top) {\n                this.L1End = [x, me.start[1] - x]\n            } else {\n                this.L1End = [x, x]\n            }\n        }\n        \n        tl.to(scale, c.L1.time, {\n            s: 1,\n            onUpdate () {\n                let s = scale.s\n                if (left) {\n                    if (top) {\n                        me.g.c().s(c.lineColor).mt(...me.start).lt(me.start[0] - x * s, me.start[1] - x * s)\n                    } else {\n                        me.g.c().s(c.lineColor).mt(...me.start).lt(me.start[0] - x * s, me.start[1] + x * s)\n                    }\n                } else {\n                    if (top) {\n                        me.g.c().s(c.lineColor).mt(...me.start).lt(x * s, me.start[1] - x * s)\n                    } else {\n                        me.g.c().s(c.lineColor).mt(...me.start).lt(x * s, x * s)\n                    }\n                }\n                me.update()\n            }\n        })\n        this.timeline.add(tl, this.totalTime)\n        this.totalTime += c.L1.time\n    }\n    L2 () {\n        // 只跟左右有关，只判断left\n        let me = this\n        let c = me.config\n        let tl = new TimelineMax()\n        let scale = {s: 0}\n        tl.to(scale, c.L2.time, {\n            s: 1,\n            onUpdate () {\n                let s = scale.s\n                if (left) {\n                    me.g.c().s(c.lineColor).mt(...me.start).lt(...me.L1End).lt(me.L1End[0] - c.L2.long * s, me.L1End[1])\n                } else {\n                    me.g.c().s(c.lineColor).mt(...me.start).lt(...me.L1End).lt(me.L1End[0] + c.L2.long * s, me.L1End[1])\n                }\n                me.update()\n            }\n        })\n        this.timeline.add(tl, this.totalTime)\n        this.totalTime += c.L2.time\n    }\n    addText () {\n        // text框只与L2end有关，只需判断left即可，top不影响\n        let me = this\n        let c = me.config\n        let tl = new TimelineMax()\n        let scale = {s: 0},\n            L2End = [me.L1End[0] + c.L2.long, me.L1End[1]]\n        if (left) {\n            L2End = [me.L1End[0] - c.L2.long, me.L1End[1]]\n        }\n        tl.to(scale, c.text.time, {\n            s: 1,\n            onStart () {\n                let x = 0, y = 0\n                if (left) {\n                    x = L2End[0] - c.text.width\n                } else {\n                    x = L2End[0]\n                }\n                me.g.c().s(c.lineColor).mt(...me.start).lt(...me.L1End).lt(...L2End)\n                me.text = new createjs.Text(c.text.text, c.text.font, c.text.color)\n                me.text.alpha = 0\n                me.text.lineHeight = c.text.lineHeight\n                me.text.x = x + c.text.padding[0]\n                me.text.y = L2End[1] - c.text.height / 2 + c.text.padding[1]\n                me.stage.addChild(me.text)\n                me.textShape.graphics.c().f(c.text.backgroundColor).rr(x, L2End[1] - c.text.height / 2, c.text.width, c.text.height, 5)\n                me.textShape.alpha = 0\n                me.update()\n            },\n            onUpdate () {\n                if (typeof me.text === 'string') return\n                me.text.alpha = scale.s\n                me.textShape.alpha = scale.s\n                me.update()\n            }\n        })\n        this.timeline.add(tl, this.totalTime)\n    }\n    update () {\n        this.stage.update()\n    }\n}\n\nlet EC = echarts.getInstanceByDom(document.getElementById(\"chart-panel\"))\n\nvar index = 0\nsetInterval(_ => {\n    EC.dispatchAction({\n        type: 'showTip',\n        seriesIndex: 0,\n        dataIndex: index\n    })\n    index++\n    if (index >= data.length + data_2.length) {\n        index = 0\n    }\n}, 3000)\nwindow.addEventListener('resize', e => {\n    let tCanvas = document.getElementById('tCanvas')\n    if (tCanvas) {\n        tCanvas.style.display = 'none'\n    }\n})\n","html":"","externalScripts":"/dep/echarts/map/js/china.js","updaterUID":"bd-729462903","theme":"","layout":"","viewCount":183,"userName":"C***c","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xAKzwiI8k4.png?v=1560418438657","isCustomThumbnail":0,"builtinTags":["category-work","geo","series-effectScatter","tooltip"],"customTags":[],"updaterUserName":"C***c"}}