{"status":0,"data":{"cid":"x3XkxnYytP","authorUid":"obd-oAV1MjlH0o2jxJOz4DO_gr7p_LMwF7S","authorUserName":"g***1","title":"bar1","description":"","latestVersion":2,"alwaysLatest":0,"createTime":"2021-06-01T06:30:28.000Z","lastUpdateTime":"2021-06-01T06:30:28.000Z","auth":2,"uid":"obd-oAV1MjlH0o2jxJOz4DO_gr7p_LMwF7S","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.1.1","versionCreateTime":"2021-06-01T06:52:09.000Z","code":"function dateFormat(fmt, date) {\n    let ret;\n    const opt = {\n        'Y+': date.getFullYear().toString(), // 年\n        'm+': (date.getMonth() + 1).toString(), // 月\n        'd+': date.getDate().toString(), // 日\n        'H+': date.getHours().toString(), // 时\n        'M+': date.getMinutes().toString(), // 分\n        'S+': date.getSeconds().toString(), // 秒\n        // 有其他格式化字符需求可以继续添加，必须转化成字符串\n    };\n    for (let k in opt) {\n        ret = new RegExp('(' + k + ')').exec(fmt);\n        if (ret) {\n            fmt = fmt.replace(ret[1], ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, '0'));\n        }\n    }\n    return fmt;\n}\n//生成从minNum到maxNum的随机数\nfunction randomNum(minNum, maxNum) {\n    switch (arguments.length) {\n        case 1:\n            return parseInt(Math.random() * minNum + 1, 10);\n            break;\n        case 2:\n            return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n            break;\n        default:\n            return 0;\n            break;\n    }\n}\nfunction getHour(hour) {\n    var today = new Date();\n    var targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * hour;\n    today.setTime(targetday_milliseconds);\n    var tHour = today.getHours();\n    return tHour;\n}\nvar time = [];\nfor (var i = dateFormat('HH', new Date()); i >= 0; i--) {\n    time.push(getHour(-1 * i) + ':00');\n}\n\nvar real_time = [];\nfor (var i = dateFormat('HH', new Date()); i >= 0; i--) {\n    real_time.push({\n        time: getHour(-1 * i),\n        value: randomNum(50, 100),\n    });\n}\nvar real_time_num = []; //实时人数\n\nfor (let index = 0; index < real_time.length; index++) {\n    const element = real_time[index];\n\n    real_time_num.push(element.value);\n}\n\noption = {\n    animationEasing: 'quarticOut',\n    animationDelay: function (idx) {\n        return 0;\n    },\n    title: {\n        text: '',\n        subtext: '',\n    },\n    tooltip: {\n        //提示框组件，鼠标悬浮在图表上，有相应提示框\n        show: true,\n        trigger: 'axis',\n        axisPointer: {\n            type: 'shadow', //可选line、shadow、none\n        },\n    },\n\n    grid: {\n        //直角坐标系，图表的位置参数\n        left: '5%',\n        right: '10%',\n        bottom: '5%',\n        top: '5%',\n        containLabel: true, //grid 区域是否包含坐标轴的刻度标签。\n        //这常用于『防止标签溢出』的场景，标签溢出指的是，标签长度动态变化时，可能会溢出容器或者覆盖其他组件。\n    },\n\n    xAxis: {\n        show: false, //是否显示x轴\n        position: 'bottom', //x轴显示在哪 只有top和bottom选项\n        offset: 0, //x轴相对默认位置的偏移\n\n        type: 'value', //1.value 数值轴 2.category类目轴 3.time 时间轴 4.log对数轴\n\n        // data:echartData,    //x轴数据放人数\n        data: real_time_num,\n\n        axisLine: {\n            //坐标轴线的相关设置 不用动 已经默认隐藏\n            lineStyle: {\n                color: '#a09fa3',\n            },\n            show: false, //是否显示坐标轴线\n            symbol: 'none', //坐标轴的箭头，默认不显示，可选rect、circle、pin、arrow\n            //symbolSize:[11,11]  箭头符号的尺寸\n        },\n\n        axisTick: {\n            //坐标轴的刻度相关设置 不用动 默认隐藏\n            show: false, //是否显示\n            alignWidthLabel: false, //刻度线和柱子是否对齐\n            inside: false, //刻度是否朝内，true为朝外\n            length: 5, //刻度线的长度\n            //lineStyle样式{ color , width , type , shadowBlur , shadowColor , shadowOffsetX , shadowOffsetY , opacity }\n        },\n\n        axisLabel: {\n            //刻度标签的设置（刻度下面的文字）\n            show: false,\n            interval: 0, //刻度标签显示的间隔\n            rotate: 0, //刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠。\n            margin: 10, //刻度与轴线之间的距离\n            //color: \"rgba(235, 172, 55, 1)\",//标签文字颜色\n            width: 10, //文字的宽度\n            clickable: false,\n            textStyle: {\n                //文字样式\n                color: '#a09fa3',\n                fontFamily: 'Arial, Verdana, sans-serif',\n                fontSize: 16,\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n            },\n        },\n        splitLine: {\n            //每根柱子的分隔线，默认不显示\n            show: false,\n            onGap: null,\n            lineStyle: {\n                color: '#a09fa3',\n                type: 'solid',\n                shadowColor: 'rgba(0,0,0,0)',\n                shadowBlur: 5,\n                shadowOffsetX: 3,\n                shadowOffsetY: 3,\n            },\n        },\n    },\n\n    yAxis: {\n        name: '',\n        type: 'category',\n        data: time, //////纵坐标放时间\n        nameTextStyle: {\n            fontSize: 16,\n        },\n        axisLine: {\n            //纵坐标轴线 不显示\n            lineStyle: {\n                color: '#a09fa3',\n            },\n            show: false,\n        },\n        axisTick: {\n            //纵坐标轴的刻度 不显示\n            show: false,\n        },\n        axisLabel: {\n            //纵坐标刻度标签文字\n            show: true,\n            interval: 'auto',\n            rotate: 0,\n            margin: 8,\n            clickable: false,\n            // formatter: '{value}',\n            textStyle: {\n                color: 'rgb(0,182,236)',\n                fontFamily: 'Arial, Verdana, sans-serif',\n                fontSize: 16,\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n            },\n        },\n        // splitNumber:6, //坐标轴分隔的段数，这只是个预估值，实际显示会以具体数据为准，可增加\n        splitLine: {\n            show: false,\n            onGap: null,\n            lineStyle: {\n                color: '#a09fa3',\n                type: 'solid',\n                shadowColor: 'rgba(0,0,0,0)',\n                shadowBlur: 5,\n                shadowOffsetX: 3,\n                shadowOffsetY: 3,\n            },\n        },\n    },\n\n    series: [\n        //这里放图表的数据\n        {\n            name: '人数',\n            type: 'bar', //图表类型\n            // data:echartData, //图表具体数据，这里通过echartData获取\n            data: real_time_num,\n            itemStyle: {\n                //图表样式\n                normal: {\n                    color: function (params) {\n                        console.log(params);\n                        var data = real_time_num;\n                        data.sort(function (a, b) {\n                            return a - b;\n                        });\n                        data.reverse();\n                        var statusIndex = 0;\n                        data.forEach(function (event, index) {\n                            if (event == params.data) {\n                                statusIndex = index;\n                            }\n                        });\n                       \n                        var colorList = [\n                            'rgba(223,65,56,1)',\n                            'rgba(229,115,63,1)',\n                            'rgba(240,189,108,1)',\n                            'rgba(237,214,102,1)',\n                            'rgba(77,168,222,1)',\n                            'rgba(25,168,164,1)',\n                        ];\n                        var colorList2 = [\n                            'rgba(223,65,56,0.2)',\n                            'rgba(229,115,63,0.2)',\n                            'rgba(240,189,108,0.2)',\n                            'rgba(237,214,102,0.2)',\n                            'rgba(77,168,222,0.2)',\n                            'rgba(25,168,164,0.2)',\n                        ];\n                        var color =  new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n                            {\n                                offset: 0,\n                                color: colorList[statusIndex % 6],\n                            },\n                            {\n                                offset: 1,\n                                color: colorList2[statusIndex% 6],\n                            },\n                        ])\n                        return color; //大概最新的柱子颜色始终一样的 不太理解\n                    },\n                    label: {\n                        //柱状图显示数字\n                        show: true, //开启显示\n                        position: 'right', //在上方显示\n                        textStyle: {\n                            //数值样式\n                            color: 'white',\n                            fontSize: 15,\n                        },\n                    },\n                    borderWidth: 2,\n                    barBorderRadius: 15,\n                },\n            },\n            barWidth: 10, //柱子宽度，根据不同屏幕判断柱子大小不同\n            barMaxWidth: 30,\n            animationEasing: 'quarticOut', //动画\n            animationDelay: function (idx) {\n                return 0;\n            },\n        },\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-oAV1MjlH0o2jxJOz4DO_gr7p_LMwF7S","theme":"","layout":"","viewCount":0,"userName":"g***1","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x3XkxnYytP.png?v=1622530329318","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","title","tooltip"],"customTags":[],"updaterUserName":"g***1"}}