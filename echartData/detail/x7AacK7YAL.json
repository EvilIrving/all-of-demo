{"status":0,"data":{"cid":"x7AacK7YAL","authorUid":"obd-ojqzcseu1JvwdiU9rUDiHeYlLCNyJEd","authorUserName":"正***5","title":"立体柱状图","description":"立体柱状图","latestVersion":1,"alwaysLatest":0,"createTime":"2021-11-02T06:05:34.000Z","lastUpdateTime":"2021-11-02T06:05:34.000Z","auth":2,"uid":"obd-ojqzcseu1JvwdiU9rUDiHeYlLCNyJEd","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-02T06:05:34.000Z","code":"var c = 9.5;\nconst CubeLeft = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x + c, shape.y];\n        const c1 = [shape.x - 5 + c, shape.y - 5];\n        const c2 = [xAxisPoint[0] - 5 + c, xAxisPoint[1] - 5];\n        const c3 = [xAxisPoint[0] + c, xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\nconst CubeRight = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c1 = [shape.x + c, shape.y];\n        const c2 = [xAxisPoint[0] + c, xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 18 + c, xAxisPoint[1] - 0];\n        const c4 = [shape.x + 18 + c, shape.y - 0];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\nconst CubeTop = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const c1 = [shape.x + c, shape.y];\n        const c2 = [shape.x + 18 + c, shape.y - 0];\n        const c3 = [shape.x + 15 + c, shape.y - 5];\n        const c4 = [shape.x - 5 + c, shape.y - 5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\necharts.graphic.registerShape('CubeLeft', CubeLeft);\necharts.graphic.registerShape('CubeRight', CubeRight);\necharts.graphic.registerShape('CubeTop', CubeTop);\nconst CubeLeft1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x - c, shape.y];\n        const c1 = [shape.x - 5 - c, shape.y - 5];\n        const c2 = [xAxisPoint[0] - 5 - c, xAxisPoint[1] - 5];\n        const c3 = [xAxisPoint[0] - c, xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\nconst CubeRight1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c1 = [shape.x - c, shape.y];\n        const c2 = [xAxisPoint[0] - c, xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 18 - c, xAxisPoint[1] - 0];\n        const c4 = [shape.x + 18 - c, shape.y - 0];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\nconst CubeTop1 = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const c1 = [shape.x - c, shape.y];\n        const c2 = [shape.x + 18 - c, shape.y - 0];\n        const c3 = [shape.x + 15 - c, shape.y - 5];\n        const c4 = [shape.x - 5 - c, shape.y - 5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\necharts.graphic.registerShape('CubeLeft1', CubeLeft1);\necharts.graphic.registerShape('CubeRight1', CubeRight1);\necharts.graphic.registerShape('CubeTop1', CubeTop1);\nconst VALUE = [20, 10, 30, 49, 54, 30, 30, 23, 14, 30, 49, 54];\nconst VALUE1 = [22, 10, 70, 29, 54, 10, 70, 39, 14, 90, 29, 14];\noption = {\n    backgroundColor: '#0f375f',\n    grid: {\n        left: 30,\n        right: 30,\n        bottom: 30,\n        top: 70,\n        containLabel: true,\n    },\n    tooltip: {\n        trigger: 'axis',\n        // 坐标轴指示器，坐标轴触发有效(axis)\n        axisPointer: {\n            type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n        },\n        formatter: function (params) {\n            // console.log(params, 'params');\n            let returnData = '';\n            for (let i = 0; i < params.length; i++) {\n                const indexColor = '#da953e';\n                returnData =\n                    '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background:' +\n                    indexColor +\n                    '\"></span>';\n                returnData += params[i].name + '<br/><span style=\"padding-left:13px\">' + params[i].value + '</span>';\n            }\n            return returnData;\n        },\n        extraCssText: 'font-size: 22px; line-height: 30px',\n    },\n    legend: {\n        data: ['应接种', '已完成第一次接种'],\n        textStyle: { fontSize: 14, color: '#fff' },\n        itemWidth: 25,\n        itemHeight: 15,\n        itemGap: 15,\n        bottom: '5%',\n    },\n    xAxis: {\n        type: 'category',\n        data: ['5/16', '5/17', '5/18', '5/19', '5/20', '5/21', '5/22', '5/23', '5/24', '5/25', '5/26', '5/27'],\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: '#0B384B',\n            },\n        },\n        offset: 10,\n        axisTick: {\n            show: false,\n            length: 9,\n            alignWithLabel: true,\n            lineStyle: {\n                color: '#748EAB',\n            },\n        },\n        axisLabel: {\n            fontSize: 14,\n            color: '#748EAB',\n        },\n    },\n    yAxis: {\n        name: '形象进度（%）',\n        nameTextStyle: {\n            color: '#748EAB',\n        },\n        type: 'value',\n        min: 0,\n        max: 100,\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: '#0B384B',\n            },\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n                color: '#0B384B',\n            },\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            fontSize: 14,\n            color: '#748EAB',\n        },\n    },\n    series: [\n        {\n            type: 'custom',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(37, 139, 253, 0.5)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(81, 255, 242, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color:\n                                            params.dataIndex === 2\n                                                ? 'rgba(253, 142, 37, 1)'\n                                                : 'rgba(37, 139, 253, 0.9)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(81, 255, 242, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(0, 146, 255, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 146, 255, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: VALUE,\n        },\n        {\n            type: 'custom',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(2, 137, 127, 0.6)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(81, 255, 242, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(81, 255, 242, 0.9)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(81, 255, 242, 0)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(68, 255, 236, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(68, 255, 236, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: VALUE1,\n        },\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-ojqzcseu1JvwdiU9rUDiHeYlLCNyJEd","theme":"","layout":"","viewCount":0,"userName":"正***5","commentCount":0,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x7AacK7YAL.png?v=1635833135052","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-custom","tooltip"],"customTags":["立体柱状图"],"updaterUserName":"正***5"}}