{"status":0,"data":{"cid":"xq4rLlZkH6","authorUid":"bd-1873793385","authorUserName":"w***3","title":"全国地图下钻到县","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2020-07-31T10:09:41.000Z","lastUpdateTime":"2020-07-31T10:09:41.000Z","auth":2,"uid":"bd-1873793385","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-31T10:09:41.000Z","code":"/**\n  描述:\n  \n  使用高德api获取地图行政区geoJson,再用echarts去加载这个地图实现点击下钻功能\n  \n  vue渲染地图热力图、块状图，实现方法: https://juejin.im/post/5db6a8ab5188251d5e755cdf\n  \n  github上有完整的代码：https://github.com/biubiubiu01/EchartsMap\n  \n  阿里云geoJson全国所有市县下载地址：\n  \n  http://datav.aliyun.com/tools/atlas/#&lat=31.840232667909365&lng=104.2822265625&zoom=4\n  \n  实现前提：你要先去高德api上去申请key值，免费的，然后引入进来\n  \n**/\n\n\n//存储市级的geoJson,因为高德无法获取区县级别的geoJosn数据，所以我们只能获取上一个级别的所有行政区\n//然后去遍历，通过名字去比对获取geoJson\n\n$('<div class=\"back\">返回</div>').appendTo(\n    $('#chart-panel')\n);\n\n$('.back').css({\n    'position': 'absolute',\n    'left': '17px',\n    'top': '25px',\n    'color': 'rgb(222,222,222)',\n    'font-size': '15px',\n    cursor: 'pointer',\n    'z-index': '100'\n})\n\n$('.back').click(function() {\n    if (parentCode.length === 1) return;\n    // //删除最后一位\n    parentCode.pop()\n    getGeoJson(parentCode[parentCode.length - 1])\n})\n\n\nvar parentJson = null\nvar cityName = '全国'\nvar parentCode = [100000]\n\ngetGeoJson(100000)\n\n/**\n *  利用高德api获取行政区边界geoJson   \n *   adcode 行政区code 编号\n **/\n\nfunction getGeoJson(adcode) {\n    var map = new AMap.Map('map', {\n        resizeEnable: true,\n        center: [116.30946, 39.937629],\n        zoom: 3\n    })\n    AMapUI.loadUI(['geo/DistrictExplorer'], DistrictExplorer => {\n        var districtExplorer = (window.districtExplorer = new DistrictExplorer({\n            eventSupport: true, //打开事件支持\n            map: map\n        }))\n        districtExplorer.loadAreaNode(adcode, function(error, areaNode) {\n            if (error) {\n                console.error(error);\n                return;\n            }\n\n            let Json = areaNode.getSubFeatures()\n            if (Json.length > 0 && Json[0].properties.level == 'district') {\n                parentJson = Json\n            }\n            //说明当前是区县\n            //这里还有个问题就是获取mapData数据，这里调用getMapData方法又会重新生成一次value值\n            //其实应该为之前的数据，不过这只是测试数据，用的随机数，实际项目肯定会调接口\n            else if (Json.length == 0) {\n                Json = parentJson.filter(item => {\n                    if (item.properties.adcode == adcode) {\n                        return item\n                    }\n\n                })\n            }\n\n            //去获取数据\n            getMapData(Json)\n        });\n    })\n}\n\n//获取数据，这里我们用随机数模拟数据\n\nfunction getMapData(Json) {\n    let mapData = Json.map(item => {\n        return ({\n            name: item.properties.name,\n            value: Math.random() * 1000,\n            level: item.properties.level,\n            cityCode: item.properties.adcode\n        })\n    })\n    let mapJson = {}\n    //geoJson必须这种格式\n    mapJson.features = Json\n\n    //去渲染echarts\n    initEcharts(mapData, mapJson)\n}\n\nfunction initEcharts(mapData, mapJson) {\n    //注册\n    echarts.registerMap('Map', mapJson);\n\n    //这里加true是为了让地图重新绘制，不然如果你有筛选的时候地图会飞出去\n    myChart.setOption({\n        backgroundColor: 'rgb(20,28,52)',\n        tooltip: {\n            trigger: \"item\",\n            formatter: p => {\n                let val = p.value;\n                if (window.isNaN(val)) {\n                    val = 0;\n                }\n                let txtCon =\n                    p.name + \"<br>\" + \"<hr>\" + \"数值 : \" + val.toFixed(2);\n                return txtCon;\n            }\n        },\n        title: {\n            show: true,\n            x: \"center\",\n            y: \"top\",\n            text: cityName + \"地图实现点击下钻\",\n            textStyle: {\n                color: \"#fff\",\n                fontSize: 16\n            }\n        },\n        //这里可以添加echarts内置的，例如下载图片等\n        toolbox: {\n            feature: {\n                dataView: {\n                    show: false,\n                    readOnly: true\n                },\n                magicType: {\n                    show: false,\n                    type: [\"line\", \"bar\"]\n                },\n                restore: {\n                    show: false\n                },\n                saveAsImage: {\n                    show: true,\n                    name: cityName + \"地图\",\n                    pixelRatio: 2\n                }\n            },\n            iconStyle: {\n                normal: {\n                    borderColor: \"#41A7DE\"\n                }\n            },\n            itemSize: 15,\n            top: 20,\n            right: 22\n        },\n        dataRange: {\n            right: \"2%\",\n            bottom: \"3%\",\n            icon: \"circle\",\n            align: \"left\",\n            splitList: [{\n                    start: 0,\n                    end: 0,\n                    label: '未发生',\n                    color: \"#6ead51\"\n                },\n                {\n                    start: 0,\n                    end: 250,\n                    label: '0-150',\n                    color: \"#92b733\"\n                },\n                {\n                    start: 250,\n                    end: 500,\n                    label: '250-500',\n                    color: \"#c4aa29\"\n                },\n                {\n                    start: 500,\n                    end: 750,\n                    label: '500-750',\n                    color: \"#ce6c2b\"\n                },\n                {\n                    start: 750,\n                    label: '750以上',\n                    color: \"#c92626\"\n                }\n            ],\n            textStyle: {\n                color: \"#0fccff\",\n                fontSize: 16\n            }\n        },\n        series: [{\n            name: \"地图\",\n            type: \"map\",\n            map: \"Map\",\n            roam: true, //是否可缩放\n            zoom: 1.1, //缩放比例\n            data: mapData,\n            itemStyle: {\n                normal: {\n                    show: true,\n                    areaColor: 'rgba(0,0,0,0)',\n                    borderColor: 'rgb(185, 220, 227)',\n                    borderWidth: '1',\n                },\n            },\n            label: {\n                normal: {\n                    show: true, //显示省份标签\n                    textStyle: {\n                        color: \"rgb(249, 249, 249)\", //省份标签字体颜色\n                        fontSize: 12\n                    }\n                },\n                emphasis: {\n                    //对应的鼠标悬浮效果\n                    show: true,\n                    textStyle: {\n                        color: \"#000\"\n                    }\n                }\n            }\n        }]\n\n    }, true)\n\n    myChart.on('click', echartsMapClick);\n}\n\n//echarts点击事件\n\nfunction echartsMapClick(params) {\n    let cityCode = params.data.cityCode\n    cityName = params.data.name\n    parentCode.push(cityCode)\n    getGeoJson(cityCode)\n\n}","html":"","externalScripts":"https://webapi.amap.com/maps?v=1.3&key=73cddabc2173e0166a622f4483d3592a&plugin=AMap.DistrictSearch,https://webapi.amap.com/maps?v=1.3&key=73cddabc2173e0166a622f4483d3592a,https://webapi.amap.com/ui/1.0/main.js","updaterUID":"bd-1873793385","theme":"","layout":"","viewCount":4219,"userName":"w***3","commentCount":0,"starCount":17,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xq4rLlZkH6.png?v=1596190181496","isCustomThumbnail":0,"builtinTags":["category-work","series-map","title","toolbox","tooltip","visualMap"],"customTags":[],"updaterUserName":"w***3"}}