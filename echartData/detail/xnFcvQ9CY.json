{"status":0,"data":{"cid":"xnFcvQ9CY","authorUid":"bd-101698999","authorUserName":"Z***8","title":"受到宿爽大神视频分享中 Message Center 的启发，图表交叉交互的解耦实现","description":"草稿","latestVersion":4,"alwaysLatest":1,"createTime":"2019-12-30T16:40:14.000Z","lastUpdateTime":"2019-12-31T15:24:39.000Z","auth":2,"uid":"bd-101698999","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"4.4.0","versionCreateTime":"2019-12-31T15:21:49.000Z","code":"srcData = [\n    //['纬度1', '纬度2', '纬度3', '度量'],\n    ['a1', 'b1', 'c1', 1],\n    ['a1', 'b1', 'c2', 1],\n    ['a1', 'b1', 'c3', 1],\n    ['a1', 'b2', 'c1', 1],\n    ['a1', 'b2', 'c2', 1],\n    ['a1', 'b2', 'c3', 1],\n    ['a1', 'b3', 'c1', 1],\n    ['a1', 'b3', 'c2', 1],\n    ['a1', 'b3', 'c3', 1],\n\n    ['a2', 'b1', 'c1', 2],\n    ['a2', 'b1', 'c2', 2],\n    ['a2', 'b1', 'c3', 2],\n    ['a2', 'b2', 'c1', 2],\n    ['a2', 'b2', 'c2', 2],\n    ['a2', 'b2', 'c3', 2],\n    ['a2', 'b3', 'c1', 2],\n    ['a2', 'b3', 'c2', 2],\n    ['a2', 'b3', 'c3', 2],\n\n    ['a3', 'b1', 'c1', 3],\n    ['a3', 'b1', 'c2', 3],\n    ['a3', 'b1', 'c3', 3],\n    ['a3', 'b2', 'c1', 3],\n    ['a3', 'b2', 'c2', 3],\n    ['a3', 'b2', 'c3', 3],\n    ['a3', 'b3', 'c1', 3],\n    ['a3', 'b3', 'c2', 3],\n    ['a3', 'b3', 'c3', 3],\n];\n\n\n\nvar ecCalc = new Object({});\n\n/**聚合计算\n*\t@alias\tmodule:ecCalc/groupCalc\n*\t@param\t{Array}\tsource\t输入,二维数组\n*\t@param\t{boolean}\thasColumnName\t第一行(source[0])是否是列名\n*\t@param\t{Array}\tdimensions\t纬度,一维数组,传入列id列表,例如[0,2,3],列表长度至少为1\n*\t@param\t{Object}\tmeasures\t度量,json数组,例如[{\t\"id\":\t2,\t\"method\":\t\"count\"\t},{\t\"id\":\t3,\t\"method\":\t\"count\"\t}],id用于\nsource[measures[id]],method用于聚合方法\n*\t@return\t{Array}\t输出,二维数组，新列与原列对应关系为dimensions.concat(measures)\t\n*/\necCalc.groupCalc = function(source, hasColumnName, dimensions, measures) {\n    var iBegin = hasColumnName ? 1 : 0;\n    var res = [];\n    var preRes = {};\n\n    if (hasColumnName) {\n        res[0] = [];\n        for (let i in dimensions) {\n            res[0].push(source[0][dimensions[i]]);\n        }\n        for (let i in measures) {\n            res[0].push(source[0][measures[i].id]);\n        }\n    }\n    for (let i = iBegin; i < source.length; i++) {\n        var dimensionData = [];\n        for (let k in dimensions) {\n            dimensionData.push(source[i][dimensions[k]]);\n        }\n        var dimensionKey = JSON.stringify(dimensionData);\n        if (preRes.hasOwnProperty(dimensionKey)) {\n            for (let j in measures) {\n                if (measures[j].method === 'sum' || measures[j].method === 'avg') {\n                    preRes[dimensionKey][j] += source[i][measures[j].id];\n                } else if (measures[j].method === 'count') {\n                    preRes[dimensionKey][j] += 1;\n                }\n            }\n            preRes[dimensionKey][measures.length] += 1;\n        } else {\n            preRes[dimensionKey] = [];\n            for (let j in measures) {\n                if (measures[j].method === 'sum' || measures[j].method === 'avg') {\n                    preRes[dimensionKey][j] = source[i][measures[j].id];\n                } else if (measures[j].method === 'count') {\n                    preRes[dimensionKey][j] = 1;\n                }\n            }\n            preRes[dimensionKey][measures.length] = 1;\n        }\n    }\n    for (var key in preRes) {\n        tmp = JSON.parse(key);\n        for (let j in measures) {\n            if (measures[j].method === 'sum' || measures[j].method === 'count') {\n                tmp.push(preRes[key][j]);\n            } else if (measures[j].method === 'avg') {\n                tmp.push(preRes[key][j] / preRes[key][measures.length]);\n            }\n        }\n        res.push(tmp);\n    }\n    return res;\n};\n\n/**条件筛选\n* @alias module:ecCalc/filter\n* @param {Array} source 输入,二维数组\n* @param {boolean} hasColumnName 第一行(source[0])是否是列名\n* @param {function} filterCondition\n  (@param {Array} source[i]作为输入;\n  @return {boolean}) 筛选(判断)函数 \n  {string} filterCondition 条件表达式，用item代表source[i]，\n  传入例如\"(item[0] - item[1] > 0) && (item[0] + item[1] > 0)\"的,\n  结果为boolean的表达式 \n* @return {Array} 输出,二维数组*/\necCalc.filter = function(source, hasColumnName, filterCondition) {\n    var iBegin = hasColumnName ? 1 : 0;\n    var res = hasColumnName ? [source[0]] : [];\n    if (typeof(filterCondition) === 'function') {\n        for (let i = iBegin; i < source.length; i++) {\n            if (filterCondition(source[i])) {\n                res.push(source[i]);\n            }\n        }\n    } else if (typeof(filterCondition) === 'string') {\n        for (let i = iBegin; i < source.length; i++) {\n            var item = source[i];\n            if (eval(filterCondition)) {\n                res.push(source[i]);\n            }\n        }\n    }\n    return res;\n};\n\nconvertConfig = [\n    {\n        dimensions: [0],\n        methods: [{id: 3, method: \"sum\"}],\n        filter: 'true',\n    },\n    {\n        dimensions: [1],\n        methods: [{id: 3, method: \"sum\"}],\n        filter: 'true',\n    },\n    {\n        dimensions: [2],\n        methods: [{id: 3, method: \"sum\"}],\n        filter: 'true',\n    },\n];\n\nfunction dataConvert(config){\n    let res = [];\n    \n    for (let obj of convertConfig){\n        let tmp = ecCalc.filter(srcData, false, obj.filter);\n        \n        res.push(ecCalc.groupCalc(tmp, false, obj.dimensions, obj.methods));\n        \n    }\n    return res;\n};\n\nconvertedData = dataConvert(convertConfig);\n\n\noption = {\n    title: {\n        text: '受到宿爽大神视频分享中 Message Center 的启发，图表联动的交叉实现'\n    },\n    tooltip:{},\n    grid: [{\n        bottom: '55%'\n    }, {\n        top: '55%',\n        right: '55%'\n    }],\n    xAxis: [{\n        type: 'category'\n    }, {\n        type: 'category',\n        gridIndex: 1\n    }],\n    yAxis: [{}, {\n        gridIndex: 1\n    }],\n    series: [{\n        id: 'line',\n        type: 'line',\n        label: {\n            show: true,\n            formatter: '{a}\\n{b}:{@1}'\n        },\n        name: convertConfig[0].filter,\n        data: convertedData[0]\n    }, {\n        id: 'bar',\n        type: 'bar',\n        xAxisIndex: 1,\n        yAxisIndex: 1,\n        label: {\n            show: true,\n            formatter: '{a}\\n{b}:{@1}'\n        },\n        name: convertConfig[1].filter,\n        data: convertedData[1]\n    }, {\n        id: 'pie',\n        type: 'pie',\n        center: ['75%', '75%'],\n        radius: '25%',\n        label: {\n            show: true,\n            formatter: '{a}\\n{b}:{c}'\n        },\n        name: convertConfig[2].filter,\n        data: convertedData[2].map(function(item){\n            return {name:item[0],value:item[1]};\n        })\n    }]\n};\n\nactionConfig = [{\n    //from: 0,\n    to: [1, 2]\n},{\n    to: [0, 2]\n},{\n    to: [0, 1]\n}];\n\nmyChart.on('click', function(params){\n    \n    let actionSeries = actionConfig[params.seriesIndex].to;\n    \n    for (let i of actionSeries){\n        \n        convertConfig[i].filter = convertConfig[params.seriesIndex].filter + ' && item[' + params.seriesIndex + '] == \"' + params.name + '\"';\n        \n    }\n\n    convertedData = dataConvert(convertConfig);\n    \n    myChart.setOption({\n        series:[{\n            id: 'line',\n            name: convertConfig[0].filter,\n            data: convertedData[0]\n        },{\n            id: 'bar',\n            name: convertConfig[1].filter,\n            data: convertedData[1]\n        },{\n            id: 'pie',\n            name: convertConfig[2].filter,\n            data: convertedData[2].map(function(item){\n                return {name:item[0],value:item[1]};\n            })\n        }]\n    });\n    \n    \n})","html":"","externalScripts":"","updaterUID":"bd-101698999","theme":"default","layout":"","viewCount":143,"userName":"Z***8","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xnFcvQ9CY.png?v=1577805709570","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-line","series-pie","title","tooltip"],"customTags":[],"updaterUserName":"Z***8"}}