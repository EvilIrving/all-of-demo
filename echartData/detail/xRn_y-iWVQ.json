{"status":0,"data":{"cid":"xRn_y-iWVQ","authorUid":"obd-oDAasHfUYiZpNjD8MzzWPMLMfKo4d1f","authorUserName":"198******70","title":"立体柱状图、梯形底","description":"立体柱状图、梯形底","latestVersion":2,"alwaysLatest":0,"createTime":"2021-10-21T19:22:07.000Z","lastUpdateTime":"2021-10-25T13:36:56.000Z","auth":1,"uid":"obd-oDAasHfUYiZpNjD8MzzWPMLMfKo4d1f","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.2.1","versionCreateTime":"2021-10-25T13:36:56.000Z","code":"var title = '渐变柱状图';\n//背景\nvar MAX = [100, 100, 100, 100, 100];\nvar VALUE = [34, 45, 44, 67, 45];\n//x轴数据\nvar xlabel = ['SD', 'SDD', 'WE', 'SDEQ', 'SDDDE'];\n// 绘制左侧面\nconst CubeLeft = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        // 会canvas的应该都能看得懂，shape是从custom传入的\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x, shape.y];\n        const c1 = [shape.x - 6.5, shape.y - 6.5];\n        const c2 = [xAxisPoint[0] - 6.5, xAxisPoint[1] - 6.5];\n        const c3 = [xAxisPoint[0], xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\n// 绘制右侧面\nconst CubeRight = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint;\n        const c1 = [shape.x, shape.y];\n        const c2 = [xAxisPoint[0], xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 9, xAxisPoint[1] - 4.5];\n        const c4 = [shape.x + 9, shape.y - 4.5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\n// 绘制顶面\nconst CubeTop = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        const c1 = [shape.x, shape.y];\n        const c2 = [shape.x + 9, shape.y - 4.5];\n        const c3 = [shape.x + 2.5, shape.y - 10];\n        const c4 = [shape.x - 6.5, shape.y - 6.5];\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n    },\n});\n// 绘制左侧面\nconst Cubebuttom = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0,\n    },\n    buildPath: function (ctx, shape) {\n        // 会canvas的应该都能看得懂，shape是从custom传入的\n        const xAxisPoint = shape.xAxisPoint;\n        const c0 = [shape.x + 900, shape.y];\n        const c1 = [shape.x -60, shape.y];\n        const c2 = [xAxisPoint[0] - 110, xAxisPoint[1]];\n        const c3 = [xAxisPoint[0] + 1000, xAxisPoint[1]];\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n    },\n});\necharts.graphic.registerShape('CubeLeft', CubeLeft);\necharts.graphic.registerShape('CubeRight', CubeRight);\necharts.graphic.registerShape('CubeTop', CubeTop);\necharts.graphic.registerShape('Cubebuttom', Cubebuttom);\noption = {\n    backgroundColor: '#081c47',\n    grid: [\n        {\n            top: '45%',\n            left: '4%',\n            right: '4%',\n            bottom: '15%',\n            containLabel: true,\n        },\n        {\n            top: '77%',\n            left: '4%',\n            right: '4%',\n            bottom: '20%',\n            containLabel: true,\n        },\n    ],\n    xAxis: [\n        {\n            type: 'category',\n            data: xlabel,\n            axisLine: {\n                show: true,\n                lineStyle: {\n                    color: 'rgba(36, 173, 254, 1)',\n                },\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                textStyle: {\n                    color: 'rgba(36, 173, 254, 1)',\n                },\n                fontSize: 20,\n                formatter: function (params) {\n                    var newParamsName = ''; // 最终拼接成的字符串\n                    var paramsNameNumber = params.length; // 实际标签的个数\n                    var provideNumber = 3; // 每行能显示的字的个数\n                    var rowNumber = Math.ceil(paramsNameNumber / provideNumber); // 换行的话，需要显示几行，向上取整\n                    /**\n                     * 判断标签的个数是否大于规定的个数， 如果大于，则进行换行处理 如果不大于，即等于或小于，就返回原标签\n                     */\n                    // 条件等同于rowNumber>1\n                    if (paramsNameNumber > provideNumber) {\n                        /** 循环每一行,p表示行 */\n                        for (var p = 0; p < rowNumber; p++) {\n                            var tempStr = ''; // 表示每一次截取的字符串\n                            var start = p * provideNumber; // 开始截取的位置\n                            var end = start + provideNumber; // 结束截取的位置\n                            // 此处特殊处理最后一行的索引值\n                            if (p == rowNumber - 1) {\n                                // 最后一次不换行\n                                tempStr = params.substring(start, paramsNameNumber);\n                            } else {\n                                // 每一次拼接字符串并换行\n                                tempStr = params.substring(start, end) + '\\n';\n                            }\n                            newParamsName += tempStr; // 最终拼成的字符串\n                        }\n                    } else {\n                        // 将旧标签的值赋给新标签\n                        newParamsName = params;\n                    }\n                    //将最终的字符串返回\n                    return newParamsName;\n                },\n            },\n        },\n        {\n            type: 'category',\n            data: xlabel,\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                show: false,\n            },\n            gridIndex: 1,\n        },\n        {\n            type: 'category',\n            data: VALUE,\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                show: true,\n                textStyle: {\n                    color: 'rgba(36, 173, 254, 1)',\n                },\n                fontSize: 20,\n            },\n            gridIndex: 0,\n        },\n    ],\n    yAxis: [\n        {\n            type: 'value',\n            axisLine: {\n                show: false,\n                lineStyle: {\n                    color: 'rgba(36, 173, 254, 1)',\n                },\n            },\n            splitLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                show: false,\n                textStyle: {\n                    color: 'rgba(36, 173, 254, 1)',\n                },\n                fontSize:20,\n            },\n        },\n        {\n            type: 'value',\n            axisLine: {\n                show: false,\n            },\n            splitLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            axisLabel: {\n                show: false,\n            },\n            gridIndex: 1,\n        },\n    ],\n    series: [\n        {\n            type: 'custom',\n            xAxisIndex: 1,\n            yAxisIndex: 1,\n            renderItem: function (params, api) {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'Cubebuttom',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: 'rgba(41, 95, 161, 0.86)',\n                            },\n                        },\n                    ],\n                };\n            },\n            data: [1],\n        },\n\n        {\n            xAxisIndex: 0,\n            yAxisIndex: 0,\n            type: 'custom',\n            renderItem: function (params, api) {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                // fill: 'rgba(0, 104, 183, 0.6)',\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(0, 104, 183, 0.6)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 155, 254, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(0, 104, 183, 0.6)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 155, 254, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(0, 104, 183, 0.6)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 155, 254, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: MAX,\n        },\n        {\n            xAxisIndex: 0,\n            yAxisIndex: 0,\n            name: '数量',\n            type: 'custom',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(126, 206, 244, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 155, 254, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(36, 173, 254, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(0, 183, 238, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0],\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: 'rgba(58, 213, 253, 1)',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: 'rgba(58, 213, 253, 1)',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: VALUE,\n        },\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-oDAasHfUYiZpNjD8MzzWPMLMfKo4d1f","theme":"","layout":"","viewCount":0,"userName":"198******70","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xRn_y-iWVQ.png?v=1635169016940","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-custom"],"customTags":[],"updaterUserName":"198******70"}}