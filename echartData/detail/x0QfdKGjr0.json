{"status":0,"data":{"cid":"x0QfdKGjr0","authorUid":"bd-732371637","authorUserName":"g***f","title":"基坑监测图","description":"重点在于如何对应 y 轴数据","latestVersion":3,"alwaysLatest":1,"createTime":"2020-12-30T08:04:36.000Z","lastUpdateTime":"2020-12-30T08:06:00.000Z","auth":2,"uid":"bd-732371637","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.8.0","versionCreateTime":"2021-01-07T06:43:10.000Z","code":"// 基坑观测数据\r\nconst observationData = [{\r\n        name: '第一次',\r\n        time: '2020-09-26',\r\n        floor: -3,\r\n        settlement: 0\r\n    },\r\n    {\r\n        name: '第二次',\r\n        time: '2020-10-23',\r\n        floor: 2,\r\n        settlement: -1.44\r\n    }, {\r\n        name: '第三次',\r\n        time: '2020-11-04',\r\n        floor: 6,\r\n        settlement: -2.28\r\n    },\r\n    {\r\n        name: '第四次',\r\n        time: '2020-11-28',\r\n        floor: 10,\r\n        settlement: -3.80\r\n    },\r\n    // {\r\n    //     name: '第五次',\r\n    //     time: '2020-12-15',\r\n    //     floor: 13,\r\n    //     settlement: -4.60\r\n    // }\r\n];\r\n\r\n// 拼接 echarts y 轴数据\r\n// 1. 取得数据中的最大沉降量(即沉降量最小值)\r\nlet maxSettlement = Math.min(...observationData.map(item => item.settlement));\r\n// 2. 根据最大沉降量 * 2 得到沉降量数组 同时定义 y轴 分割基准值\r\nlet settlementArr = [];\r\nlet yAxisDividNum = 0.5;\r\n\r\n// 2.1 判断最小值扩大之后的情况\r\nif (maxSettlement * 1.2 < -20) {\r\n    maxSettlement = -20;\r\n    yAxisDividNum = 1;\r\n} else maxSettlement *= 1.2;\r\n\r\n// 2.2 循环构造数组\r\ndo {\r\n    settlementArr.push(maxSettlement);\r\n    maxSettlement = Number((maxSettlement + yAxisDividNum).toFixed(1));\r\n} while (maxSettlement < 0);\r\n\r\n// 2.3 多push一个值，用来显示 y 轴负值区域的轴名称\r\nsettlementArr.unshift(settlementArr[0] - yAxisDividNum);\r\n\r\n// 3. 楼层高度\r\nconst buildingHeight = 19;\r\n\r\n// 3.1 根据楼层高度得到楼层数组\r\nlet buildingArr = [];\r\nfor (let i = 1; i <= buildingHeight; i++) {\r\n    buildingArr.push(i);\r\n}\r\n\r\n// 3.2 楼层数组需额外 + 地下两层 + 夹层\r\nbuildingArr = [0.1, 0.2, 0.3].concat(buildingArr);\r\n\r\n// 4. 拼接 y 轴数据（沉降量 + 楼层）\r\nconst temp = settlementArr.concat(buildingArr);\r\nlet fNum = 0; // y 轴负值\r\nlet zNum = 0; // y 轴正值\r\nfor (let i = 0; i < temp.length; i++) {\r\n    if (temp[i] < 0) fNum--;\r\n    if (temp[i] > 0) zNum++;\r\n}\r\nlet yAxisData = [];\r\nfor (let i = fNum; i <= zNum; i++) {\r\n    yAxisData.push(i); // y z轴真实数据\r\n}\r\n\r\n// 单独获取一下数据中的沉降量数据\r\nconst CJL = observationData.map(item => item.settlement);\r\n// echarts配置\r\noption = {\r\n    backgroundColor: \"#fff\",\r\n    tooltip: {\r\n        show: true,\r\n        trigger: 'axis',\r\n        // axisPointer: {\r\n        //     type: 'cross',\r\n        //     axis:'x',\r\n        //     label: {\r\n        //         show: false\r\n        //     },\r\n        //     crossStyle: {\r\n        //         type: 'solid',\r\n        //         color: 'red'\r\n        //     }\r\n        // },\r\n        formatter: (params) => {\r\n            return `<span>${params[0].axisValueLabel}</span><br>\r\n                <span><span>${params[0].marker}</span>楼层：${params[0].value === 0 ? 0:params[0].value - 3}</span><br>\r\n                <span><span>${params[1].marker}</span>沉降量：${CJL[params[1].dataIndex]}</span>`;\r\n        }\r\n    },\r\n    grid: {\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        splitLine: {\r\n            show: true\r\n        },\r\n        boundaryGap: false,\r\n        axisLabel: {\r\n            show: true,\r\n            align: 'left'\r\n        },\r\n        axisLine: {\r\n            symbol: ['none', 'arrow'],\r\n            lineStyle: {\r\n                width: 2\r\n            }\r\n        },\r\n        data: observationData.map(item => `${item.time}\\n${item.name}`)\r\n    },\r\n    yAxis: {\r\n        name: '载荷（楼层）',\r\n        nameTextStyle: {\r\n            align: 'right'\r\n        },\r\n        type: 'value',\r\n        max: yAxisData[yAxisData.length - 1],\r\n        min: yAxisData[0],\r\n        interval: 1,\r\n        splitLine: {\r\n            show: true\r\n        },\r\n        axisLabel: {\r\n            show: true,\r\n            formatter: (item, index) => {\r\n                // 改变y轴label\r\n                if (item === yAxisData[0]) return '累积沉降量（mm）'\r\n                if (item >= 0 && item < 4) {\r\n                    return item === 0 ? 0 : item === 1 ? 'B2' : item === 2 ? 'B1' : 'J'\r\n                } else {\r\n                    if (item < 0) return settlementArr[index];\r\n                    if (item === yAxisData[yAxisData.length - 1]) return '机房层';\r\n                    return item - 3;\r\n                }\r\n            }\r\n        },\r\n        axisLine: {\r\n            symbol: ['arrow', 'arrow'],\r\n            symbolOffset: [-12, 12],\r\n            lineStyle: {\r\n                width: 2\r\n            },\r\n        },\r\n        data: yAxisData\r\n    },\r\n    series: [{\r\n            name: '楼层',\r\n            type: 'line',\r\n            smooth: true,\r\n            label: {\r\n                show: true,\r\n                formatter: (value) => {\r\n                    switch (value.value) {\r\n                        case 0:\r\n                            return '';\r\n                        case 1:\r\n                            return 'B2';\r\n                        case 2:\r\n                            return 'B1';\r\n                        case 3:\r\n                            return 'J';\r\n                        default:\r\n                            return value.value - 3;\r\n                    }\r\n                }\r\n            },\r\n            data: observationData.map(item => {\r\n                // 每一层的数加上地下3成（+3）\r\n                return item.floor + 3;\r\n            })\r\n        },\r\n        {\r\n            name: '沉降量',\r\n            type: 'line',\r\n            smooth: true,\r\n            label: {\r\n                show: true,\r\n                position: 'bottom',\r\n                formatter: (params) => {\r\n                    if (params.value === 0) return '';\r\n                    return CJL[params.dataIndex];\r\n                }\r\n            },\r\n            data: CJL.map((item, index) => {\r\n                if (index === 0) return 0;\r\n                return item / yAxisDividNum - ((settlementArr[settlementArr.length - 1] / yAxisDividNum) + 1);\r\n            })\r\n        }\r\n    ]\r\n};","html":"","externalScripts":"","updaterUID":"bd-732371637","theme":"macarons","layout":"","viewCount":30,"userName":"g***f","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x0QfdKGjr0.png?v=1610001790297","isCustomThumbnail":0,"builtinTags":[],"customTags":[],"updaterUserName":"g***f"}}