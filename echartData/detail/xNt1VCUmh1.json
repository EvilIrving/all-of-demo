{"status":0,"data":{"cid":"xNt1VCUmh1","authorUid":"obd-oN7OQrfc4T57mcSC_m70cvg4_pbrEC6","authorUserName":"小***画","title":"饼图-今日进度-动态图","description":"","latestVersion":3,"alwaysLatest":0,"createTime":"2021-12-23T07:29:04.000Z","lastUpdateTime":"2021-12-23T10:41:25.000Z","auth":2,"uid":"obd-oN7OQrfc4T57mcSC_m70cvg4_pbrEC6","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"5.2.2","versionCreateTime":"2021-12-23T10:41:25.000Z","code":"//做环形图的本质是 radius: ['内半径', '外半径'] 内半径!=0\n//画渐变色的原理是：data里面可以设置itemStyle\nlet angle = 0; //角度，用来做简单的动画效果的\n\nlet timerId;\nconst value = 78; //今日完成78%\nconst backgroundColor = '#101736';\nconst title = {\n    text: '今日进度',\n    textStyle: {\n        color: '#fff',\n        fontSize: 16,\n    },\n    padding: 0,\n    top: 35,\n    left: 'center',\n};\nconst legend = {\n    show: false,\n};\nconst tooltip = {\n    show: false,\n};\nconst colors = ['#A098FC', '#4386FA','#4FADFD','#0CD3DB','#646CF9'];\nconst innerRingColor = {\n    type: 'linear',\n    x: 0,\n    y: 0,\n    x2: 0,\n    y2: 1,\n    colorStops: [0,.3,.6,.8,1].map((offset,index)=>({offset,color:colors[index]})),\n    global: false, // 缺省为 false\n};\noption = {\n    backgroundColor,\n    color:colors,\n    title,\n    tooltip,\n    legend,\n\n    series: [\n        {\n            name: '',\n            type: 'pie',\n            center: ['50%', '50%'], //圆心的位置\n            radius: ['32%', '35%'], //环形图的本质就在这里 [内半径!=0，外半径] 外半径越大，圆越大\n            avoidLabelOverlap: false, //做同心圆用到\n            clockwise: false, //顺时针排列\n            startAngle: 90, //起始角度 影响不大\n            label: {\n                show: true, //false不显示饼图上的标签\n                position: 'center', //inside（在饼图上显示）,outside(默认就会出现引导线) center\n                formatter: '{d}%',\n                fontSize: 50,\n                fontWeight: 'bold',\n            },\n\n            data: [\n                { value: value, name: '完成', itemStyle: { color: innerRingColor, opacity: 1 } },\n                { value: 100 - value, name: '未完成', itemStyle: { color: '#282c40' } },\n            ].sort((a, b) => b.value - a.value), //数组从大到小排序\n\n            emphasis: {\n                scale: false,\n               \n            },\n        },\n        {\n            name: '',\n            type: 'pie',\n            center: ['50%', '50%'], //圆心的位置\n            radius: ['40%', '50%'], //环形图的本质就在这里 [内半径!=0，外半径] 外半径越大，圆越大\n            avoidLabelOverlap: false, //做同心圆用到\n            clockwise: false, //顺时针排列\n            startAngle: 90, //起始角度 影响不大\n\n            label: {\n                show: false, //false不显示饼图上的标签\n               \n            },\n\n            data: [\n                { value: value, name: '完成',  itemStyle: { color: innerRingColor, opacity: 1 }},\n                { value: 100 - value, name: '未完成', itemStyle: { color: '#282c40' }  },\n            ].sort((a, b) => b.value - a.value), //数组从大到小排序\n\n            emphasis: {\n                scale: false,\n               \n            },\n        },\n        //colors[0]line\n        {\n            name: 'ring5',\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                return {\n                    type: 'arc',\n                    shape: {\n                        cx: api.getWidth() / 2,\n                        cy: api.getHeight() / 2,\n                        r: (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.6,\n                        startAngle: ((0 + angle) * Math.PI) / 180,\n                        endAngle: ((90 + angle) * Math.PI) / 180,\n                    },\n                    style: {\n                        stroke: colors[0],\n                        fill: 'transparent',\n                        lineWidth: 1.5,\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        {\n            name: 'ring5', //        //colors[0]dot\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                let x0 = api.getWidth() / 2;\n                let y0 = api.getHeight() / 2;\n                let r = (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.6;\n                let point = getCirlPoint(x0, y0, r, 90 + angle);\n                return {\n                    type: 'circle',\n                    shape: {\n                        cx: point.x,\n                        cy: point.y,\n                        r: 4,\n                    },\n                    style: {\n                        stroke: colors[0], \n                        fill: colors[0],\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        // 蓝色\n\n        {\n            name: 'ring5',\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                return {\n                    type: 'arc',\n                    shape: {\n                        cx: api.getWidth() / 2,\n                        cy: api.getHeight() / 2,\n                        r: (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.6,\n                        startAngle: ((180 + angle) * Math.PI) / 180,\n                        endAngle: ((270 + angle) * Math.PI) / 180,\n                    },\n                    style: {\n                        stroke: colors[1],\n                        fill: 'transparent',\n                        lineWidth: 1.5,\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        {\n            name: 'ring5', // 蓝色\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                let x0 = api.getWidth() / 2;\n                let y0 = api.getHeight() / 2;\n                let r = (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.6;\n                let point = getCirlPoint(x0, y0, r, 180 + angle);\n                return {\n                    type: 'circle',\n                    shape: {\n                        cx: point.x,\n                        cy: point.y,\n                        r: 4,\n                    },\n                    style: {\n                        stroke: colors[1], //绿\n                        fill: colors[1],\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n\n        {\n            name: 'ring5',\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                return {\n                    type: 'arc',\n                    shape: {\n                        cx: api.getWidth() / 2,\n                        cy: api.getHeight() / 2,\n                        r: (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.65,\n                        startAngle: ((270 + -angle) * Math.PI) / 180,\n                        endAngle: ((40 + -angle) * Math.PI) / 180,\n                    },\n                    style: {\n                        stroke: colors[2],\n                        fill: 'transparent',\n                        lineWidth: 1.5,\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        // 橘色\n\n        {\n            name: 'ring5',\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                return {\n                    type: 'arc',\n                    shape: {\n                        cx: api.getWidth() / 2,\n                        cy: api.getHeight() / 2,\n                        r: (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.65,\n                        startAngle: ((90 + -angle) * Math.PI) / 180,\n                        endAngle: ((220 + -angle) * Math.PI) / 180,\n                    },\n                    style: {\n                        stroke: colors[2],\n                        fill: 'transparent',\n                        lineWidth: 1.5,\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        {\n            name: 'ring5',\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                let x0 = api.getWidth() / 2;\n                let y0 = api.getHeight() / 2;\n                let r = (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.65;\n                let point = getCirlPoint(x0, y0, r, 90 + -angle);\n                return {\n                    type: 'circle',\n                    shape: {\n                        cx: point.x,\n                        cy: point.y,\n                        r: 4,\n                    },\n                    style: {\n                        stroke: colors[3], //粉\n                        fill: colors[3],\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n        {\n            name: 'ring5', //绿点\n            type: 'custom',\n            coordinateSystem: 'none',\n            renderItem: function (params, api) {\n                let x0 = api.getWidth() / 2;\n                let y0 = api.getHeight() / 2;\n                let r = (Math.min(api.getWidth(), api.getHeight()) / 2) * 0.65;\n                let point = getCirlPoint(x0, y0, r, 270 + -angle);\n                return {\n                    type: 'circle',\n                    shape: {\n                        cx: point.x,\n                        cy: point.y,\n                        r: 4,\n                    },\n                    style: {\n                        stroke: colors[3], //绿\n                        fill: colors[3],\n                    },\n                    silent: true,\n                };\n            },\n            data: [0],\n        },\n    ],\n};\n\n//获取圆上面某点的坐标(x0,y0表示坐标，r半径，angle角度)\nfunction getCirlPoint(x0, y0, r, angle) {\n    let x1 = x0 + r * Math.cos((angle * Math.PI) / 180);\n    let y1 = y0 + r * Math.sin((angle * Math.PI) / 180);\n    return {\n        x: x1,\n        y: y1,\n    };\n}\n\nfunction draw() {\n    angle = angle + 3;\n    myChart.setOption(option, true);\n    //window.requestAnimationFrame(draw);\n}\ndraw();\nsetTimeout(function () {\n    if (timerId) {\n        clearInterval(timerId);\n    }\n    timerId = setInterval(function () {\n        //用setInterval做动画感觉有问题\n        draw();\n    }, 100);\n}, 500);\n","html":"","externalScripts":"","updaterUID":"obd-oN7OQrfc4T57mcSC_m70cvg4_pbrEC6","theme":"","layout":"","viewCount":0,"userName":"小***画","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xNt1VCUmh1.png?v=1640256085412","isCustomThumbnail":0,"builtinTags":["category-work","legend","series-pie","title","tooltip"],"customTags":[],"updaterUserName":"小***画"}}