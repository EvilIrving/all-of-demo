{"status":0,"data":{"cid":"xRA1buSxOn","authorUid":"obd-olmlYTYEq4xD1YnWpIt2_tIMGAmD10p","authorUserName":"我***仕","title":"立体圆柱融合","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2021-01-21T01:41:49.000Z","lastUpdateTime":"2021-01-21T01:41:49.000Z","auth":2,"uid":"obd-olmlYTYEq4xD1YnWpIt2_tIMGAmD10p","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.8.0","versionCreateTime":"2021-01-21T01:41:49.000Z","code":"// 综合阴影\n// 绘制左侧面\nconst CubeLeftAll = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        // 该方法官方文档有详细的介绍，先看官网再看此此demo有助于理解\n        // 绘画路径是canves中的路径绘制方法\n        // shape参数是下面series里面的shap，\n        //外边的参数shape是默认值，即如果低下的shap中没有会采用默认值x:0，y:0\n        // 换算后的值跟canvas上一致，往下往右为正\n        const xAxisPoint = shape.xAxisPoint\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x - 7, shape.y - 3);\n        ctx.lineTo(xAxisPoint[0] - 7, xAxisPoint[1] - 3);\n        ctx.lineTo(xAxisPoint[0], xAxisPoint[1]);\n        ctx.closePath()\n    }\n})\n// 绘制右侧面\nconst CubeRightAll = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + 7, shape.y - 3);\n        ctx.lineTo(xAxisPoint[0] + 7, xAxisPoint[1] - 3);\n        ctx.lineTo(xAxisPoint[0], xAxisPoint[1]);\n        ctx.closePath()\n    }\n})\n// 绘制顶面\nconst CubeTopAll = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + 7, shape.y - 3);\n        ctx.lineTo(shape.x, shape.y - 6);\n        ctx.lineTo(shape.x - 7, shape.y - 3);\n        ctx.closePath()\n    }\n})\n// 注册三个面图形\necharts.graphic.registerShape('CubeLeftAll', CubeLeftAll)\necharts.graphic.registerShape('CubeRightAll', CubeRightAll)\necharts.graphic.registerShape('CubeTopAll', CubeTopAll)\n\n// 运营\n// 绘制左侧面\nconst CubeLeftOperate = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        // 该方法官方文档有详细的介绍，先看官网再看此此demo有助于理解\n        // 绘画路径是canves中的路径绘制方法\n        // shape参数是下面series里面的shap，\n        //外边的参数shape是默认值，即如果低下的shap中没有会采用默认值x:0，y:0\n        // 换算后的值跟canvas上一致，往下往右为正\n        const xAxisPoint = shape.xAxisPoint\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x - 5, shape.y - 3);\n        ctx.lineTo(xAxisPoint[0] - 5, xAxisPoint[1] - 3);\n        ctx.lineTo(xAxisPoint[0], xAxisPoint[1]);\n        ctx.closePath()\n    }\n})\n// 绘制右侧面\nconst CubeRightOperate = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        const xAxisPoint = shape.xAxisPoint\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + 5, shape.y - 3);\n        ctx.lineTo(xAxisPoint[0] + 5, xAxisPoint[1] - 3);\n        ctx.lineTo(xAxisPoint[0], xAxisPoint[1]);\n        ctx.closePath()\n    }\n})\n// 绘制顶面\nconst CubeTopOperate = echarts.graphic.extendShape({\n    shape: {\n        x: 0,\n        y: 0\n    },\n    buildPath: function(ctx, shape) {\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + 5, shape.y - 3);\n        ctx.lineTo(shape.x, shape.y - 6);\n        ctx.lineTo(shape.x - 5, shape.y - 3);\n        ctx.closePath()\n    }\n})\n// 注册三个面图形\necharts.graphic.registerShape('CubeLeftOperate', CubeLeftOperate)\necharts.graphic.registerShape('CubeRightOperate', CubeRightOperate)\necharts.graphic.registerShape('CubeTopOperate', CubeTopOperate)\n\nconst MAX = [15, 15, 15, 15, 15, 15, 15]\nconst VALUE = [7, 6, 4, 2, 2, 5, 6]\nconst otherValue = [2, 3, 3, 1, 1, 2, 3]\noption = {\n    color: ['#dd6241', '#569be0'],\n    backgroundColor: \"#152c60\",\n    title: {\n        text: '吨成本(元)',\n        top: 10,\n        right: 20,\n        textStyle: {\n            color: '#69e5fc',\n            fontSize: 12\n        }\n    },\n    legend: [{\n            selectedMode: false,\n            itemWidth: 15,\n            itemHeight: 15,\n            right: 100,\n            top: 10,\n            textStyle: {\n                color: '#fff',\n            },\n            data: [{\n                name: '综合'\n            }]\n        },\n        {\n            selectedMode: false,\n            itemWidth: 15,\n            itemHeight: 15,\n            right: 160,\n            top: 10,\n            textStyle: {\n                color: '#fff',\n            },\n            data: [{\n                name: '运营'\n            }]\n        }\n    ],\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: { // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' //指示器类型。\n        },\n        formatter: function(params, ticket, callback) {\n            let arr = params.filter(v => v.seriesName != 'custom')\n            arr.map(v => {\n                console.log(v)\n                if (v.seriesName == \"综合\") {\n                    v.marker = '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#569be0;\"></span>'\n                } else if (v.seriesName == \"运营\") {\n                    v.marker = '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#dd6241;\"></span>'\n                }\n            })\n            console.log(arr)\n            let axisValueLabel = params[0].axisValueLabel\n            let sumVal = 0;\n            let src = axisValueLabel + '<br>';\n            for (let x in arr) {\n                sumVal += Number(arr[x].value)\n                src += arr[x].marker + arr[x].seriesName + \": \" + arr[x].value + '<br>';\n            }\n            return src\n        }\n    },\n    grid: {\n        left: 40,\n        right: 40,\n        bottom: 40,\n        top: 40,\n        containLabel: true\n    },\n    xAxis: {\n        type: 'category',\n        data: ['华北', '西北', '中南', '华南', '上海', '江苏', '浙江'],\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: '#586473'\n            }\n        },\n        offset: 10,\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            color: '#F5F5F5'\n        }\n    },\n    yAxis: {\n        type: 'value',\n        axisLine: {\n            show: false,\n            // axisLabel未定义color时采用此color\n            lineStyle: {\n                color: 'white'\n            }\n        },\n        splitLine: {\n            lineStyle: {\n                color: '#3b4c7c'\n            }\n        },\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            formatter: function(val) {\n                console.log(val)\n                return val\n                // console.log(val)\n                // return parseInt(val/MAX_VALUE * 100)  + '%' ;\n            }\n        },\n    },\n    series: [{\n        type: 'custom',\n        name: 'custom',\n        renderItem: function(params, api) {\n            // coord 是将数值转换成坐标系上的点\n            // x轴与y轴上的值转化为坐标点,也可以理解为维度0,1\n            // 如 data:[['沪A0731',7]]，api.value(0)为沪A0731，api.value(1)]为7\n            const location = api.coord([api.value(0), api.value(1)])\n            return {\n                type: 'group',\n                children: [{\n                    type: 'CubeLeftAll',\n                    shape: {\n                        x: location[0],\n                        y: location[1] + 7,\n                        // x轴上的坐标点此时y轴value为0\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: '#2e4479'\n                    }\n                }, {\n                    type: 'CubeRightAll',\n                    shape: {\n                        x: location[0],\n                        y: location[1] + 7,\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: '#2e4479'\n                    }\n                }, {\n                    type: 'CubeTopAll',\n                    shape: {\n                        x: location[0],\n                        y: location[1] + 7,\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: '#2e4479'\n                    }\n                }]\n            }\n        },\n        data: MAX,\n        silent: true\n    }, {\n        type: 'custom',\n        name: '综合',\n        renderItem: (params, api) => {\n            const location = api.coord([api.value(0), api.value(1)])\n            return {\n                type: 'group',\n                children: [{\n                    type: 'CubeLeftAll',\n                    shape: {\n                        xValue: api.value(0),\n                        yValue: api.value(1),\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: '#76c8e2'\n                            },\n                            {\n                                offset: 1,\n                                color: '#4e8fde'\n                            }\n                        ])\n                    }\n                }, {\n                    type: 'CubeRightAll',\n                    shape: {\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: '#76c8e2'\n                            },\n                            {\n                                offset: 1,\n                                color: '#4e8fde'\n                            }\n                        ])\n                    }\n                }, {\n                    type: 'CubeTopAll',\n                    shape: {\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: '#76c8e2'\n                    }\n                }]\n            }\n        },\n        data: VALUE\n    }, {\n        type: 'custom',\n        name: '运营',\n        renderItem: (params, api) => {\n            const location = api.coord([api.value(0), api.value(1)])\n            console.log(location)\n            return {\n                type: 'group',\n                stack: '成本',\n                children: [{\n                    type: 'CubeLeftOperate',\n                    shape: {\n                        xValue: api.value(0),\n                        yValue: api.value(1),\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: '#db9256'\n                            },\n                            {\n                                offset: 1,\n                                color: '#de5b3f'\n                            }\n                        ])\n                    }\n                }, {\n                    type: 'CubeRightOperate',\n                    shape: {\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                offset: 0,\n                                color: '#db9256'\n                            },\n                            {\n                                offset: 1,\n                                color: '#de5b3f'\n                            }\n                        ])\n                    }\n                }, {\n                    type: 'CubeTopOperate',\n                    shape: {\n                        x: location[0],\n                        y: location[1],\n                        xAxisPoint: api.coord([api.value(0), 0])\n                    },\n                    style: {\n                        fill: '#e88b6c'\n                    }\n                }]\n            }\n        },\n        data: otherValue\n    }]\n}","html":"","externalScripts":"","updaterUID":"obd-olmlYTYEq4xD1YnWpIt2_tIMGAmD10p","theme":"","layout":"","viewCount":31,"userName":"我***仕","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xRA1buSxOn.png?v=1611193310090","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-custom","title","tooltip"],"customTags":[],"updaterUserName":"我***仕"}}