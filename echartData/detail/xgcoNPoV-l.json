{"status":0,"data":{"cid":"xgcoNPoV-l","authorUid":"bd-171648521","authorUserName":"绿***绿","title":"中国3D地图","description":"3d地图\n","latestVersion":13,"alwaysLatest":1,"createTime":"2020-08-06T09:32:12.000Z","lastUpdateTime":"2020-08-06T09:32:12.000Z","auth":2,"uid":"bd-171648521","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":13,"parentVersion":12,"echartsVersion":"4.8.0","versionCreateTime":"2020-08-13T01:36:27.000Z","code":"let data = [{\r\n        name: \"北京\",\r\n        value: [116.24, 39.55, 3],\r\n\r\n    },\r\n    {\r\n        name: \"深圳\",\r\n        value: [114.271522, 22.753644,3]\r\n    },\r\n\r\n    {\r\n        name: \"重庆\",\r\n        value: [106.54, 29.59,3]\r\n    },\r\n    {\r\n        name: \"南京\",\r\n        value: [118.78, 32.04,3]\r\n    },\r\n\r\n]\r\nlet dataMap = [{\r\n        name: '安徽',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '重庆',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '广东',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '北京',\r\n        value: 1,\r\n\r\n\r\n    },\r\n    {\r\n        name: '新疆',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '西藏',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '青海',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '甘肃',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '内蒙古',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '黑龙江',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '宁夏',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '四川',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '云南',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '广西',\r\n        value: 1\r\n    },\r\n\r\n    {\r\n        name: '湖南',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '贵州',\r\n        value: 1\r\n    },\r\n\r\n    {\r\n        name: '陕西',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '湖北',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '河南',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '山西',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '河北',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '山东',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '江西',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '福建',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '香港',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '台湾',\r\n        value: 1\r\n    },\r\n   \r\n    {\r\n        name: '浙江',\r\n        value: 1\r\n    },\r\n\r\n    {\r\n        name: '江苏',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '天津',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '辽宁',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '吉林',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '上海',\r\n        value: 1\r\n    },\r\n     {\r\n        name: '海南',\r\n        value: 1\r\n    },\r\n    {\r\n        name: '南海诸岛',\r\n        value: 1\r\n    },\r\n]\r\n\r\n/*for (var i = 0; i < dataMap.length; i++) {\r\n    dataMap[i].height = 20\r\n}\r\n*/\r\n\r\noption = {\r\n    geo3D: {\r\n        map: 'china',\r\n        show: false,\r\n        zlevel: -20,\r\n        boxWidth: 200,\r\n        boxHeight: 5,\r\n        \r\n        viewControl: { // 用于鼠标的旋转，缩放等视角控制。\r\n            projection: 'perspective', // 投影方式，默认为透视投影'perspective'，也支持设置为正交投影'orthographic'。\r\n            autoRotate: false, // 是否开启视角绕物体的自动旋转查看。[ default: false ] \r\n            autoRotateDirection: 'cw', // 物体自传的方向。默认是 'cw' 也就是从上往下看是顺时针方向，也可以取 'ccw'，既从上往下看为逆时针方向。\r\n            autoRotateSpeed: 10, // 物体自传的速度。单位为角度 / 秒，默认为10 ，也就是36秒转一圈。\r\n            autoRotateAfterStill: 3, // 在鼠标静止操作后恢复自动旋转的时间间隔。在开启 autoRotate 后有效。[ default: 3 ]\r\n            damping: 0, // 鼠标进行旋转，缩放等操作时的迟滞因子，在大于等于 1 的时候鼠标在停止操作后，视角仍会因为一定的惯性继续运动（旋转和缩放）。[ default: 0.8 ]\r\n            rotateSensitivity: 1, // 旋转操作的灵敏度，值越大越灵敏。支持使用数组分别设置横向和纵向的旋转灵敏度。默认为1, 设置为0后无法旋转。\trotateSensitivity: [1, 0]——只能横向旋转； rotateSensitivity: [0, 1]——只能纵向旋转。\r\n            zoomSensitivity: 2, // 缩放操作的灵敏度，值越大越灵敏。默认为1,设置为0后无法缩放。\r\n            panSensitivity: 1, // 平移操作的灵敏度，值越大越灵敏。默认为1,设置为0后无法平移。支持使用数组分别设置横向和纵向的平移灵敏度\r\n            panMouseButton: 'left', // 平移操作使用的鼠标按键，支持：'left' 鼠标左键（默认）;'middle' 鼠标中键 ;'right' 鼠标右键(注意：如果设置为鼠标右键则会阻止默认的右键菜单。)\r\n            rotateMouseButton: 'left', // 旋转操作使用的鼠标按键，支持：'left' 鼠标左键;'middle' 鼠标中键（默认）;'right' 鼠标右键(注意：如果设置为鼠标右键则会阻止默认的右键菜单。)\r\n            distance: 200, // [ default: 100 ] 默认视角距离主体的距离，对于 grid3D 和 geo3D 等其它组件来说是距离中心原点的距离,对于 globe 来说是距离地球表面的距离。在 projection 为'perspective'的时候有效。\r\n            minDistance: 40, // [ default: 40 ] 视角通过鼠标控制能拉近到主体的最小距离。在 projection 为'perspective'的时候有效。\r\n            maxDistance: 400, // [ default: 400 ] 视角通过鼠标控制能拉远到主体的最大距离。在 projection 为'perspective'的时候有效。\r\n            alpha: 40, // 视角绕 x 轴，即上下旋转的角度。配合 beta 可以控制视角的方向。[ default: 40 ]\r\n            beta: 15, // 视角绕 y 轴，即左右旋转的角度。[ default: 0 ]\r\n            minAlpha: -360, // 上下旋转的最小 alpha 值。即视角能旋转到达最上面的角度。[ default: 5 ]\r\n            maxAlpha: 360, // 上下旋转的最大 alpha 值。即视角能旋转到达最下面的角度。[ default: 90 ]\r\n            minBeta: -360, // 左右旋转的最小 beta 值。即视角能旋转到达最左的角度。[ default: -80 ]\r\n            maxBeta: 360, // 左右旋转的最大 beta 值。即视角能旋转到达最右的角度。[ default: 80 ]\r\n            center: [0, 0, 0], // 视角中心点，旋转也会围绕这个中心点旋转，默认为[0,0,0]。\r\n            animation: true, // 是否开启动画。[ default: true ]\r\n            animationDurationUpdate: 1000, // 过渡动画的时长。[ default: 1000 ]\r\n            animationEasingUpdate: 'cubicInOut' // 过渡动画的缓动效果。[ default: cubicInOut ]\r\n        },\r\n\r\n\r\n    },\r\n    visualMap: [{\r\n        show: true,\r\n        min: 1,\r\n        max: 3,\r\n        inRange: {\r\n            color: ['#0c274b', '#69edc0', 'rgba(136,133,133 ,0.5)','red'] //,\r\n        }\r\n    }, ],\r\n    series: [\r\n        {\r\n            type: 'map3D', // 系列类型\r\n            name: 'map3D', // 系列名称\r\n            map: 'china', // 地图类型。echarts-gl 中使用的地图类型同 geo 组件相同(ECharts 中提供了两种格式的地图数据，一种是可以直接 script 标签引入的 js 文件，引入后会自动注册地图名字和数据。还有一种是 JSON 文件，需要通过 AJAX 异步加载后手动注册。)\r\n            // 环境贴图，支持純颜色值，渐变色，全景贴图的 url。默认为 'auto'，在配置有 light.ambientCubemap.texture 的时候会使用该纹理作为环境贴图。否则则不显示环境贴图。\r\n            /*  environment: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{ // 配置为垂直渐变的背景\r\n                  offset: 0,\r\n                  color: '#00aaff' // 天空颜色           \r\n              }, {\r\n                  offset: 0.7,\r\n                  color: '#998866' // 地面颜色\r\n              }, {\r\n                  offset: 1,\r\n                  color: '#998866' // 地面颜色\r\n              }], false),*/\r\n            boxWidth: 200,\r\n            boxHeight: 10,\r\n            zlevel: -10,\r\n            label: { // 标签的相关设置\r\n                show: false, // (地图上的城市名称)是否显示标签 [ default: false ]\r\n                //distance: 50,               // 标签距离图形的距离，在三维的散点图中这个距离是屏幕空间的像素值，其它图中这个距离是相对的三维距离\r\n                //formatter:,               // 标签内容格式器\r\n                textStyle: { // 标签的字体样式\r\n                    color: '#000', // 地图初始化区域字体颜色\r\n                    fontSize: 12, // 字体大小\r\n                    opacity: 1, // 字体透明度\r\n                    backgroundColor: 'rgba(0,23,11,0)' // 字体背景色\r\n                },\r\n            },\r\n\r\n            itemStyle: { // 三维地理坐标系组件 中三维图形的视觉属性，包括颜色，透明度，描边等。\r\n                color: '#0c294d', // 地图板块的颜色\r\n                opacity: 1, // 图形的不透明度 [ default: 1 ]\r\n                borderWidth: 0.5, // (地图板块间的分隔线)图形描边的宽度。加上描边后可以更清晰的区分每个区域   [ default: 0 ]\r\n                borderColor: '#1cccff' // 图形描边的颜色。[ default: #333 ]\r\n            },\r\n\r\n            emphasis: { // 鼠标 hover 高亮时图形和标签的样式 (当鼠标放上去时  label和itemStyle 的样式) \r\n                label: { // label高亮时的配置\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#fff', // 高亮时标签颜色变为 白色\r\n                        fontSize: 15, // 高亮时标签字体 变大\r\n                    }\r\n                },\r\n                itemStyle: { // itemStyle高亮时的配置\r\n                    areaColor: '#d9b74f', // 高亮时地图板块颜色改变\r\n                }\r\n            },\r\n\r\n            groundPlane: { // 地面可以让整个组件有个“摆放”的地方，从而使整个场景看起来更真实，更有模型感。\r\n                show: false, // 是否显示地面。[ default: false ]\r\n                color: '#aaa' // 地面颜色。[ default: '#aaa' ]\r\n            },\r\n            light: { // 光照相关的设置。在 shading 为 'color' 的时候无效。  光照的设置会影响到组件以及组件所在坐标系上的所有图表。合理的光照设置能够让整个场景的明暗变得更丰富，更有层次。\r\n                main: { // 场景主光源的设置，在 globe 组件中就是太阳光。\r\n                    // color: '#0c294d', //主光源的颜色。[ default: #fff ] \r\n                    intensity: 1, //主光源的强度。[ default: 1 ]\r\n                    shadow: true, //主光源是否投射阴影。默认关闭。    开启阴影可以给场景带来更真实和有层次的光照效果。但是同时也会增加程序的运行开销。\r\n                    //shadowQuality: 'high',      // 阴影的质量。可选'low', 'medium', 'high', 'ultra' [ default: 'medium' ]\r\n                    alpha: 70, // 主光源绕 x 轴，即上下旋转的角度。配合 beta 控制光源的方向。[ default: 40 ]\r\n                    beta: 10 // 主光源绕 y 轴，即左右旋转的角度。[ default: 40 ]\r\n                },\r\n                ambient: { // 全局的环境光设置。\r\n                    // color: '#fff', // 环境光的颜色。[ default: #fff ]\r\n                    intensity: 0 // 环境光的强度。[ default: 0.2 ]\r\n                }\r\n            },\r\n\r\n            viewControl: { // 用于鼠标的旋转，缩放等视角控制。\r\n                projection: 'perspective', // 投影方式，默认为透视投影'perspective'，也支持设置为正交投影'orthographic'。\r\n                autoRotate: false, // 是否开启视角绕物体的自动旋转查看。[ default: false ] \r\n                autoRotateDirection: 'cw', // 物体自传的方向。默认是 'cw' 也就是从上往下看是顺时针方向，也可以取 'ccw'，既从上往下看为逆时针方向。\r\n                autoRotateSpeed: 10, // 物体自传的速度。单位为角度 / 秒，默认为10 ，也就是36秒转一圈。\r\n                autoRotateAfterStill: 3, // 在鼠标静止操作后恢复自动旋转的时间间隔。在开启 autoRotate 后有效。[ default: 3 ]\r\n                damping: 0, // 鼠标进行旋转，缩放等操作时的迟滞因子，在大于等于 1 的时候鼠标在停止操作后，视角仍会因为一定的惯性继续运动（旋转和缩放）。[ default: 0.8 ]\r\n                rotateSensitivity: 1, // 旋转操作的灵敏度，值越大越灵敏。支持使用数组分别设置横向和纵向的旋转灵敏度。默认为1, 设置为0后无法旋转。\trotateSensitivity: [1, 0]——只能横向旋转； rotateSensitivity: [0, 1]——只能纵向旋转。\r\n                zoomSensitivity: 2, // 缩放操作的灵敏度，值越大越灵敏。默认为1,设置为0后无法缩放。\r\n                panSensitivity: 1, // 平移操作的灵敏度，值越大越灵敏。默认为1,设置为0后无法平移。支持使用数组分别设置横向和纵向的平移灵敏度\r\n                panMouseButton: 'left', // 平移操作使用的鼠标按键，支持：'left' 鼠标左键（默认）;'middle' 鼠标中键 ;'right' 鼠标右键(注意：如果设置为鼠标右键则会阻止默认的右键菜单。)\r\n                rotateMouseButton: 'left', // 旋转操作使用的鼠标按键，支持：'left' 鼠标左键;'middle' 鼠标中键（默认）;'right' 鼠标右键(注意：如果设置为鼠标右键则会阻止默认的右键菜单。)\r\n                distance: 200, // [ default: 100 ] 默认视角距离主体的距离，对于 grid3D 和 geo3D 等其它组件来说是距离中心原点的距离,对于 globe 来说是距离地球表面的距离。在 projection 为'perspective'的时候有效。\r\n                minDistance: 40, // [ default: 40 ] 视角通过鼠标控制能拉近到主体的最小距离。在 projection 为'perspective'的时候有效。\r\n                maxDistance: 400, // [ default: 400 ] 视角通过鼠标控制能拉远到主体的最大距离。在 projection 为'perspective'的时候有效。\r\n                alpha: 40, // 视角绕 x 轴，即上下旋转的角度。配合 beta 可以控制视角的方向。[ default: 40 ]\r\n                beta: 15, // 视角绕 y 轴，即左右旋转的角度。[ default: 0 ]\r\n                minAlpha: -360, // 上下旋转的最小 alpha 值。即视角能旋转到达最上面的角度。[ default: 5 ]\r\n                maxAlpha: 360, // 上下旋转的最大 alpha 值。即视角能旋转到达最下面的角度。[ default: 90 ]\r\n                minBeta: -360, // 左右旋转的最小 beta 值。即视角能旋转到达最左的角度。[ default: -80 ]\r\n                maxBeta: 360, // 左右旋转的最大 beta 值。即视角能旋转到达最右的角度。[ default: 80 ]\r\n                center: [0, 0, 0], // 视角中心点，旋转也会围绕这个中心点旋转，默认为[0,0,0]。\r\n                animation: true, // 是否开启动画。[ default: true ]\r\n                animationDurationUpdate: 1000, // 过渡动画的时长。[ default: 1000 ]\r\n                animationEasingUpdate: 'cubicInOut' // 过渡动画的缓动效果。[ default: cubicInOut ]\r\n            },\r\n            // boxWidth: '200px',\r\n            // boxHeight: '300px',\r\n            regionHeight: 5,\r\n            data: dataMap\r\n        },\r\n\r\n        // 区域散点图\r\n        {\r\n            type: 'scatter3D',\r\n            coordinateSystem: 'geo3D',\r\n            zlevel: 2,\r\n            symbolSize: 8,\r\n            rippleEffect: { //坐标点动画\r\n                period: 3,\r\n                scale: 5,\r\n                brushType: 'fill'\r\n            },\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    position: 'right',\r\n                    formatter: '{b}',\r\n                    backgroundColor:'#fff',\r\n                    textStyle:{\r\n                        color: '#2676df',\r\n                        borderWidth:1,\r\n                        borderColor:'red',\r\n                        fontWeight: \"bold\",\r\n                        fontSize: 16\r\n                    },\r\n                    \r\n                }\r\n            },\r\n\r\n            data: data,\r\n            itemStyle: { //坐标点颜色\r\n                normal: {\r\n                    show: true,\r\n                    color: '#c0e6f2',\r\n                    shadowBlur: 20,\r\n                    shadowColor: '#fff'\r\n                },\r\n                emphasis: {\r\n                    areaColor: '#f00'\r\n                }\r\n            },\r\n\r\n        },\r\n        // 线 和 点\r\n        {\r\n            type: 'lines3D',\r\n            coordinateSystem:'geo3D',\r\n            zlevel:2, //设置这个才会有轨迹线的小尾巴\r\n            polyline: false,\r\n            effect: {\r\n                show: true,\r\n                period: 10,\r\n                trailLength: 0.1,\r\n                trailColor:'red',\r\n                color: '#fff', //流动点颜色\r\n                symbol: 'arrow',\r\n                symbolSize: 6\r\n            },\r\n            lineStyle: {\r\n                normal: {\r\n                    color: '#fff', //线条颜色\r\n                    width: 1.5,\r\n                    curveness: 0.2,\r\n                    shadowColor: '#fff',\r\n                }\r\n            },\r\n            blendMode:'lighter', \r\n            data: [{\r\n\r\n                    fromName: \"深圳\",\r\n                    toName: \"北京\",\r\n                    coords: [\r\n                        [114.271522, 22.753644,3],\r\n                        [116.24, 39.55,3],\r\n                       \r\n\r\n\r\n                    ]\r\n                },\r\n                {\r\n\r\n                    fromName: \"深圳\",\r\n                    toName: \"浙江\",\r\n                    coords: [\r\n                        [114.271522, 22.753644,3],\r\n                        [118.78, 32.04,3],\r\n                       \r\n\r\n                    ]\r\n                },\r\n                {\r\n                    fromName: \"深圳\",\r\n                    toName: \"重庆\",\r\n                    coords: [\r\n                        [114.271522, 22.753644,3],\r\n                        [106.54, 29.59,3],\r\n\r\n                    ]\r\n                }\r\n            ],\r\n\r\n        },\r\n    ]\r\n};\r\nmyChart.on('mouseover', function(params) {\r\n    let option = myChart.getOption();\r\n    if (params.name == '北京') {\r\n        option.series[0].data[3].height = 10;\r\n        option.series[0].data[3].value = 2;\r\n\r\n        // option.series[0].data[3].itemStyle.color = '#ddb314'\r\n        myChart.setOption(option)\r\n\r\n\r\n    } else if (params.name == '安徽') {\r\n        option.series[0].data[0].height = 10;\r\n        option.series[0].data[0].value = 2;\r\n        myChart.setOption(option)\r\n\r\n\r\n    } else if (params.name == '重庆') {\r\n        // console.log(params.name)\r\n        option.series[0].data[1].height = 10;\r\n        option.series[0].data[1].value = 2;\r\n        myChart.setOption(option)\r\n\r\n\r\n    } else if (params.name == '广东') {\r\n        option.series[0].data[2].height = 10;\r\n        option.series[0].data[2].value = 2;\r\n        myChart.setOption(option)\r\n\r\n    } else {\r\n        if (option.series[0].data[3].height == 10) {\r\n            option.series[0].data[3].height = 5;\r\n            option.series[0].data[3].value = 1;\r\n            myChart.setOption(option)\r\n        } else if (option.series[0].data[0].height == 10) {\r\n            option.series[0].data[0].height = 5;\r\n            option.series[0].data[0].value = 1;\r\n            myChart.setOption(option)\r\n        } else if (option.series[0].data[1].height == 10) {\r\n            option.series[0].data[1].height = 5;\r\n            option.series[0].data[1].value = 1;\r\n            myChart.setOption(option)\r\n        } else if (option.series[0].data[2].height == 10) {\r\n            option.series[0].data[2].height = 5;\r\n            option.series[0].data[2].value = 1;\r\n            myChart.setOption(option)\r\n        }\r\n\r\n\r\n    }\r\n    /* let option = myChart.getOption();\r\n     if (params.name == '深圳') {\r\n         option.series[0].itemStyle.opacity = 0.5;\r\n         myChart.setOption(option)\r\n\r\n         myChart.dispatchAction({\r\n             type: 'highlight',\r\n             name: '广东'\r\n         });\r\n\r\n\r\n\r\n     } else {\r\n         myChart.dispatchAction({\r\n             type: 'downplay',\r\n             name: params.name\r\n         });\r\n     }*/\r\n});\r\n\r\n\r\n\r\nmyChart.on('click', function(params) {\r\n    let option = myChart.getOption(); //option.series[0].data.length\r\n    if (params.name == '广东') {\r\n        // console.log()   option.visualMap[0].inRange.color[0] = 'rgba(136,133,133 ,0.5)';\r\n\r\n\r\n        for (var i = 0; i < option.series[0].data.length; i++) {\r\n            if (option.series[0].data[i].name !== '广东') {\r\n                option.series[0].data[i].value = 3;\r\n                console.log(option.series[0].data[i].value)\r\n                myChart.setOption(option)\r\n            }\r\n        }\r\n    }\r\n});","html":"","externalScripts":"/dep/echarts/map/js/china.js,https://echarts.baidu.com/resource/echarts-gl-latest/dist/echarts-gl.min.js","updaterUID":"bd-171648521","theme":"","layout":"","viewCount":53,"userName":"绿***绿","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xgcoNPoV-l.png?v=1597282587393","isCustomThumbnail":0,"builtinTags":["category-work","series-map3D","title","tooltip"],"customTags":[],"updaterUserName":"绿***绿"}}