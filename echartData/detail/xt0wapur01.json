{"status":0,"data":{"cid":"xt0wapur01","authorUid":"obd-o2pLp-mjfOYKu7p_y_CppZ-gZ5YLe6S","authorUserName":"s***0","title":"动态可视化","description":"Echarts数据可视化入门、实战与进阶第六章","latestVersion":5,"alwaysLatest":1,"createTime":"2021-02-08T11:35:45.000Z","lastUpdateTime":"2021-12-16T02:59:15.000Z","auth":1,"uid":"obd-o2pLp-mjfOYKu7p_y_CppZ-gZ5YLe6S","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.9.0","versionCreateTime":"2021-12-16T02:59:15.000Z","code":"var rankData = [\n    {\n        date: 'Flandre',\n        category: 'Flandre',\n        data: [\n            {\n                name: '迷失之牙',\n                value: 65,\n            },\n            {\n                name: '扭曲树精',\n                value: 48,\n            },\n            {\n                name: '未来守护者',\n                value: 35,\n            },\n            {\n                name: '猩红收割者',\n                value: 34,\n            },\n            {\n                name: '海洋之灾',\n                value: 31,\n            },\n        ],\n    },\n    {\n        date: 'Flandre 上单',\n        category: 'Flandre 上单',\n        data: [\n            {\n                name: '迷失之牙',\n                value: 65,\n            },\n            {\n                name: '扭曲树精',\n                value: 48,\n            },\n            {\n                name: '未来守护者',\n                value: 35,\n            },\n            {\n                name: '猩红收割者',\n                value: 34,\n            },\n            {\n                name: '海洋之灾',\n                value: 31,\n            },\n        ],\n    },\n    {\n        date: 'Jiejie 打野',\n        category: 'Jiejie 打野',\n        data: [\n            {\n                name: '盲僧',\n                value: 36,\n            },\n            {\n                name: '德玛西亚皇子',\n                value: 23,\n            },\n            {\n                name: '德邦总管',\n                value: 20,\n            },\n            {\n                name: '狂战士',\n                value: 19,\n            },\n            {\n                name: '兽灵行者',\n                value: 17,\n            },\n        ],\n    },\n    {\n        date: 'Scout 中单',\n        category: 'Scout 中单',\n        data: [\n            {\n                name: '沙漠皇帝',\n                value: 67,\n            },\n            {\n                name: '符文法师',\n                value: 53,\n            },\n            {\n                name: '暗黑元首',\n                value: 52,\n            },\n            {\n                name: '诡术妖姬',\n                value: 45,\n            },\n            {\n                name: '发条魔灵',\n                value: 40,\n            },\n        ],\n    },\n    {\n        date: 'Viper ADC',\n        category: 'Viper ADC',\n        data: [\n            {\n                name: '虚空之女',\n                value: 64,\n            },\n            {\n                name: '探险家',\n                value: 56,\n            },\n            {\n                name: '残月之肃',\n                value: 31,\n            },\n            {\n                name: '圣枪游侠',\n                value: 25,\n            },\n            {\n                name: '复仇之矛',\n                value: 22,\n            },\n        ],\n    },\n    {\n        date: 'Meiko 辅助',\n        category: 'Meiko 辅助',\n        data: [\n            {\n                name: '牛头酋长',\n                value: 112,\n            },\n            {\n                name: '弗雷尔卓德之心',\n                value: 109,\n            },\n            {\n                name: '魂锁典狱长',\n                value: 91,\n            },\n            {\n                name: '河流之王',\n                value: 67,\n            },\n            {\n                name: '洛',\n                value: 63,\n            },\n        ],\n    },\n];\nvar title = '成员常用英雄和场次';\nvar playInterval = 2000; //时间间隔\n// 排行颜色\nvar colorListS1 = [];\nvar colors = [];\nfor (var i = 0; i < rankData.length; i++) {\n    var colorListF1 = {};\n    for (var n = 0; n < rankData[i].data.length; n++) {\n        // 每阶段内部循环\n        var name = rankData[i].data[n].name; //排行榜上项目的名称\n        colorListF1[name] = colors[n]; //排行榜上项目名称和对应的颜色，其中每个排名位置的颜色不变\n    }\n    colorListS1[i] = colorListF1; //每次排行榜的数据字典放入总体的列表中\n}\n// 基础设置\nvar option = {\n    baseOption: {\n        animationDurationUpdate: playInterval * 1.5, //数据更新动画的时长\n        animationEasingUpdate: 'quinticInOut', //数据更新动画的缓动效果\n        timeline: {\n            //时间轴相关参数\n            show: false, //隐藏时间轴\n            axisType: 'category', //轴的类型：类别型\n            orient: 'vertical', //摆放方式：竖直放置\n            autoPlay: true, //自动播放\n            loop: false, //表示是否循环播放\n            playInterval: playInterval, //表示播放的速度（跳动的间隔），单位毫秒（ms）\n            left: null, //timeline组件离容器左侧的距离\n            right: 30, //timeline组件离容器右侧的距离\n            top: 330, //timeline组件离容器上侧的距离\n            bottom: 100, //timeline组件离容器下侧的距离\n            height: null,\n            label: {\n                normal: {\n                    show: true, //不显示轴线\n                    color: '#ccc', //时间线的颜色\n                },\n            },\n            checkpointStyle: {\n                //当前项的图形样式，时间轴上显示\n                symbol: 'none', //标记的图形样式\n                color: '#bbb', //颜色\n                borderColor: '#777', //边框颜色\n                show: false, //不显示\n                borderWidth: 1, //边框宽度\n            },\n            controlStyle: {\n                //『控制按钮』的样式。『控制按钮』包括：『播放按钮』、『前进按钮』、『后退按钮』。\n                showNextBtn: false, //是否显示『前进按钮』\n                showPrevBtn: false, //是否显示『后退按钮』\n                normal: {\n                    color: '#666',\n                    show: false,\n                    borderColor: '#666',\n                },\n                emphasis: {\n                    //高亮状态相关设置\n                    color: '#aaa',\n                    borderColor: '#aaa',\n                },\n            },\n            data: rankData.map(function (ele) {\n                //对列表中每个元素拿data部分\n                return ele.date;\n            }),\n        },\n        title: [\n            {\n                //标题相关设置\n                left: 'center',\n                top: '3%',\n                textStyle: {\n                    fontSize: 25,\n                    color: 'rgba(121,121,121, 0.9)',\n                },\n            },\n            {\n                left: 'center',\n                top: '5%',\n            },\n        ],\n        grid: [\n            {\n                //网格相关设置\n                left: '20%',\n                right: '20%',\n                top: '12%',\n                height: 'auto',\n                bottom: '25%',\n            },\n        ],\n        xAxis: [{}],\n        yAxis: [{}],\n        series: [\n            {\n                //图表相关设置\n                id: 'bar',\n                type: 'bar', //条形图\n                barWidth: '80',\n                tooltip: {\n                    show: false,\n                },\n                label: {\n                    normal: {\n                        show: true,\n                        position: 'right',\n                    },\n                },\n                data: [],\n            },\n        ],\n    },\n    options: [],\n};\nvar xMaxInterval = 5;\nfor (var i = rankData.length - 1; i > 0; i--) {\n    //外循环\n    var xMax = 20;\n    if (rankData[i].data[0].value > 20) {\n        // 当此排行中第一个数据是否大于20\n        xMax = 'dataMax'; //此时取数据在该轴上的最大值作为最大刻度\n    }\n    if (rankData[i].data[0].value / xMaxInterval >= 10) {\n        xMaxInterval = rankData[i].data[0].value / 5; //减小最大间隔\n    }\n    option.options.push({\n        // 数据压入options，每次循环有一个option\n        backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [\n            {\n                //背景的径向渐变\n                offset: 0,\n                color: '#f7f8fa',\n            },\n            {\n                offset: 1,\n                color: '#cdd0d5',\n            },\n        ]),\n        title: {\n            text: title + ' ' + rankData[i].category, //构造标题\n            color: '#bfbfbf',\n        },\n        xAxis: [\n            {\n                //x轴相关设置\n                show: true,\n                type: 'value',\n                interval: xMaxInterval, //强制设置坐标轴分割间隔\n                max: xMax,\n                axisTick: {\n                    show: false, //不显示坐标轴刻度\n                },\n                axisLabel: {\n                    //坐标轴刻度标签的相关设置\n                    show: true,\n                    color: 'rgba(121,121,121,0.9)',\n                    textStyle: {\n                        color: 'rgba(121,121,121,0.9)',\n                    },\n                },\n                axisLine: {\n                    //坐标轴线相关设置\n                    show: false,\n                    lineStyle: {\n                        color: 'rgba(121,121,121,0.3)',\n                    },\n                },\n                splitLine: {\n                    //坐标轴在 grid 区域中的分隔线\n                    show: true,\n                    lineStyle: {\n                        color: ['rgba(121,121,121,0.3)', 'rgba(121,121,121,0)'],\n                    },\n                },\n            },\n        ],\n        yAxis: [\n            {\n                type: 'category',\n                axisTick: {\n                    show: false,\n                },\n                axisLine: {\n                    show: true,\n                    lineStyle: {\n                        color: 'rgba(121,121,121,0.3)',\n                    },\n                },\n                axisLabel: {\n                    show: false,\n                    textStyle: {},\n                },\n                data: rankData[i].data.map(function (ele) {\n                    //拿到每个项目元素的名称\n                    return ele.name;\n                }),\n            },\n        ],\n        series: [\n            {\n                id: 'bar', //组件 ID。默认不指定。指定则可用于在 option 或者 API 中引用组件\n                itemStyle: {\n                    normal: {\n                        color: function (params) {\n                            //设置一个颜色数组，最好比序列内的数据点个数要大或者相等\n                            //根据当前数据点在当前序列内所处的顺序序号去颜色数组内自动匹配颜色\n                            var colorListr = ['#0f4471', '#00adb5', '#ff5722', '#5628b4', '#20BF55', '#f23557'];\n                            return colorListr[params.dataIndex];\n                        },\n                        label: {\n                            show: true,\n                            fontSize: 18,\n                            position: 'top',\n                            formatter: '{c}%',\n                        },\n                        shadowBlur: 20,\n                        shadowColor: 'rgba(40, 40, 40, 0.5)',\n                    },\n                },\n                label: {\n                    //条形图的标签\n                    normal: {\n                        position: 'right', //标签显示位置\n                        formatter: function (p) {\n                            return p.name + ': ' + p.value; //标签显示 元素名称和具体值\n                        },\n                    },\n                },\n                data: rankData[i].data\n                    .map(function (ele) {\n                        return ele.value;\n                    })\n                    .sort(function (a, b) {\n                        return a > b;\n                    }),\n            },\n        ],\n    });\n}\n","html":"","externalScripts":"","updaterUID":"ec-gallery-anonymous","theme":"","layout":"","viewCount":78,"userName":"s***0","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xt0wapur01.png?v=1639623555944","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","timeline","title"],"customTags":[]}}