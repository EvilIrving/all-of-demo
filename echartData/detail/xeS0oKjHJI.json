{"status":0,"data":{"cid":"xeS0oKjHJI","authorUid":"bd-1561129713","authorUserName":"mark_ycj","title":"流程可视化跟踪","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2019-03-13T14:07:29.000Z","lastUpdateTime":"2019-03-13T14:07:29.000Z","auth":2,"uid":"bd-1561129713","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.2.1","versionCreateTime":"2019-03-13T14:36:08.000Z","code":"// 环节信息\r\nvar nodes = [{\r\n        name: '节点信息看看看看1',\r\n        code: 'node1000000001',\r\n        x: 0 + 64,\r\n        y: -60 - 20,\r\n        width: 138,\r\n        height: 40,\r\n        status: 2,\r\n        ext: {\r\n            finishTime: '2019-01-01'\r\n        }\r\n    },\r\n    {\r\n        name: '节点信息看看看看2',\r\n        code: 'node1000000002',\r\n        x: 228 + 64,\r\n        y: -108 - 20,\r\n        width: 138,\r\n        height: 40,\r\n        status: 0,\r\n        ext: {}\r\n    },\r\n    {\r\n        name: '节点信息看看看看3',\r\n        code: 'node1000000003',\r\n        x: 228 + 64,\r\n        y: 0 - 20,\r\n        width: 138,\r\n        height: 40,\r\n        status: 1,\r\n        ext: {}\r\n    },\r\n    {\r\n        name: '节点信息看看看看4',\r\n        code: 'node1000000004',\r\n        x: 492 + 64,\r\n        y: -48 - 20,\r\n        width: 138,\r\n        height: 40,\r\n        status: 0,\r\n        ext: {}\r\n    }\r\n];\r\n\r\n// 连接信息\r\nvar links = [{\r\n        source: 'node1000000001',\r\n        target: 'node1000000002',\r\n        status: 0\r\n    },\r\n    {\r\n        source: 'node1000000001',\r\n        target: 'node1000000003',\r\n        status: 1\r\n    },\r\n    {\r\n        source: 'node1000000003',\r\n        target: 'node1000000004',\r\n        status: 0\r\n    }\r\n];\r\n\r\nfunction getScatterData() {\r\n    var scatterData = [];\r\n\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        scatterData.push({\r\n            name: nodes[i].name,\r\n            value: [nodes[i].x, nodes[i].y],\r\n            type: 'title',\r\n            w: 30,\r\n            h: 30,\r\n            ext: nodes[i].ext,\r\n            node_status: nodes[i].status,\r\n            label: {\r\n                normal: {\r\n                    textStyle: {\r\n                        color: '#000',\r\n                        fontSize: 14\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return scatterData;\r\n}\r\n\r\nfunction getLinesData() {\r\n    var linesData = [];\r\n    var map = {};\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        map[nodes[i].code] = nodes[i];\r\n    }\r\n\r\n    for (var i = 0; i < links.length; i++) {\r\n        var source = map[links[i].source];\r\n        var target = map[links[i].target];\r\n\r\n        // 计算信息框的四个边中点的位置\r\n        source.top = {\r\n            x: source.x,\r\n            y: (source.y + (1 / 2 * 30))\r\n        };\r\n        source.right = {\r\n            x: (source.x + (1 / 2 * 30)),\r\n            y: source.y\r\n        };\r\n        source.bottom = {\r\n            x: source.x,\r\n            y: (source.y - (1 / 2 * 30))\r\n        };\r\n        source.left = {\r\n            x: (source.x - (1 / 2 * 30)),\r\n            y: source.y\r\n        };\r\n\r\n        target.top = {\r\n            x: target.x,\r\n            y: (target.y + (1 / 2 * 30))\r\n        };\r\n        target.right = {\r\n            x: (target.x + (1 / 2 * 30)),\r\n            y: target.y\r\n        };\r\n        target.bottom = {\r\n            x: target.x,\r\n            y: (target.y - (1 / 2 * 30))\r\n        };\r\n        target.left = {\r\n            x: (target.x - (1 / 2 * 30)),\r\n            y: target.y\r\n        };\r\n\r\n        //s->t：s左：t右\r\n        if (source.right.x < target.left.x) {\r\n            linesData.push(getLine([\r\n                [source.right.x, source.right.y],\r\n                [target.left.x, target.left.y]\r\n            ], links[i].status));\r\n        }\r\n        //t<-s：s右：t左\r\n        else if (source.left.x > target.right.x) {\r\n            linesData.push(getLine([\r\n                [source.left.x, source.left.y],\r\n                [target.right.x, target.right.y]\r\n            ], links[i].status));\r\n        }\r\n        //s\r\n        //|\r\n        //t\r\n        else if (source.bottom.y > target.top.y) {\r\n            linesData.push(getLine([\r\n                [source.bottom.x, source.bottom.y],\r\n                [target.top.x, target.top.y]\r\n            ], links[i].status));\r\n        }\r\n        //t\r\n        //|\r\n        //s\r\n        else if (source.top.y < target.bottom.y) {\r\n            linesData.push(getLine([\r\n                [source.top.x, source.top.y],\r\n                [target.bottom.x, target.bottom.y]\r\n            ], links[i].status));\r\n        }\r\n    }\r\n    return linesData;\r\n}\r\n\r\nfunction getLine(coords, status) {\r\n    var lineColor = '#e1e1e1';\r\n    var lineSymbol = 'none';\r\n    if (status == 2) {\r\n        lineColor = '#41a51e';\r\n    } else if (status == 1) {\r\n        lineSymbol = 'arrow';\r\n        lineColor = '#ff9f1d';\r\n    }\r\n    return {\r\n        name: '',\r\n        type: 'lines',\r\n        coordinateSystem: 'cartesian2d',\r\n        symbol: ['none', 'arrow'],\r\n        symbolSize: 10,\r\n        zlevel: 4,\r\n        lineStyle: {\r\n            normal: {\r\n                type: 'solid',\r\n                color: lineColor,\r\n                width: 2,\r\n                curveness: 0\r\n            }\r\n        },\r\n        data: [{\r\n            coords: coords\r\n        }]\r\n    };\r\n}\r\n\r\nfunction getSeries() {\r\n    var series = [];\r\n    series.push({\r\n        type: 'scatter',\r\n        symbol: 'circle',\r\n        zlevel: 333,\r\n        silent: true,\r\n        symbolSize: function(value, params) {\r\n            return [30, 30];\r\n        },\r\n        itemStyle: {\r\n            normal: {\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(120, 36, 50, 0.5)',\r\n                shadowOffsetY: 5,\r\n                color: function(params) {\r\n                    if (params.data.type == 'title') {\r\n                        if (params.data.node_status == 2) {\r\n                            return '#41a51e';\r\n                        } else if (params.data.node_status == 1) {\r\n                            return '#ff9f1d';\r\n                        } else {\r\n                            return '#e1e1e1';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        label: {\r\n            normal: {\r\n                show: true,\r\n                position: 'bottom',\r\n                formatter: function(params) {\r\n                    var ext = params.data.ext;\r\n                    var finishTime = \"\";\r\n                    if (\"undefined\" != typeof ext && \"undefined\" != typeof ext.finishTime) {\r\n                        finishTime = ext.finishTime;\r\n                    }\r\n                    if (params.data.type == 'title') {\r\n                        return params.data.name + \"\\n\\n\" + finishTime;\r\n                    }\r\n\r\n                },\r\n                textStyle: {\r\n                    color: '#000'\r\n                }\r\n            }\r\n        },\r\n        data: getScatterData(),\r\n    });\r\n    return series; //.concat(getLinesData());\r\n}\r\n\r\n// 指定图表的配置项和数据\r\nvar option = {\r\n    backgroundColor: '#fff',\r\n    title: [{\r\n        // text: \"流程跟踪图\",\r\n        x: '5%',\r\n        y: 0,\r\n        textStyle: {\r\n            color: '#fff',\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fontFamily: 'sans-serif',\r\n            fontSize: 14\r\n        }\r\n    }],\r\n    tooltip: {\r\n    },\r\n    grid: {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        show: false,\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisLabel: {\r\n            show: false\r\n        },\r\n        max: 900,\r\n        min: 0\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        show: false,\r\n        splitLine: {\r\n            show: false,\r\n        },\r\n        axisLabel: {\r\n            show: false\r\n        },\r\n        max: 0,\r\n        min: -900\r\n    },\r\n    series: getSeries()\r\n};\r\n\r\n// 使用刚指定的配置项和数据显示图表。\r\nmyChart.setOption(option);\r\n\r\nmyChart.on(\"click\", function(param){\r\n    console.log(param);\r\n    alert();\r\n});","html":"","externalScripts":"/dep/echarts/map/js/china.js","updaterUID":"bd-1561129713","theme":"","layout":"","viewCount":344,"userName":"mark_ycj","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xeS0oKjHJI.png?v=1552487768846","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-scatter","title","tooltip"],"customTags":[],"updaterUserName":"mark_ycj"}}