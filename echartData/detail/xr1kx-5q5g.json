{"status":0,"data":{"cid":"xr1kx-5q5g","authorUid":"bd-3892615926","authorUserName":"笑***","title":"随便练习中","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2017-03-06T07:33:59.000Z","lastUpdateTime":"2017-03-06T07:33:59.000Z","auth":1,"uid":"bd-3892615926","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"3.4.0","versionCreateTime":"2017-03-06T10:19:14.000Z","code":"//按梯度进行折扣，人数越多，折扣越大\n//默认参数为 0，表示未初始化\nvar price = null, //商家设定，商品的零售价。\n    orderMaxLimit = null, //商家设定，最大允许合买量。(库存)\n    floorPrice = null, //商家设定，最大允许合买量最低售价。\n    stepSize = 1, //商家设定，台阶设定值。每阶长度。\n    //----------------------------------------------------\n    maxStepNumber = null, //最大台阶数，【公式计算】\n    setpRate = null, //台阶价格级差。【公式计算】\n    orderAmount = null, //定单总量。【后台实时统计】\n    currentPrice = null, //当前适用动态售价，当前成交价。【公式计算】\n    currenStep = null, //当前合买量所属台阶数。【公式计算】\n    unitName = '件', //商品单位\n    //----------------------------------------------------\n    priceList = [],\n    orderList = [],\n    currentPriceList = [],\n    currentOrderList = [];\n\n//初始化参数：商定设定数据\nprice = 200;\norderMaxLimit = 60;\nfloorPrice = 120.00;\nstepSize = 6;\norderAmount = 20;\n\ntopLable = false;\nbottomLable = false;\n//将当前价格数组，细分成每一阶的值，用于表现进度\nfunction getProgress(amount, dataList, step) {\n    var arr = [];\n    for (var i = 0; i <= amount; i++) {\n        arr.push([i, dataList[Math.floor(i / step)]]);\n    }\n    return arr;\n}\n\n//\nfunction getBg(amount, dataList, step) {\n    var arr = [];\n    for (var i = 0; i <= amount; i += (stepSize + stepSize / 2)) {\n        arr.push([i, dataList[Math.floor(i / step)]]);\n    }\n    return arr;\n}\n//console.debug(getBgMarkPoint(orderAmount, priceList, stepSize));\n//\nfunction getBgMarkPoint(amount, dataList, step) {\n    var arr = [];\n    for (var i = 0; i <= amount; i += stepSize) {\n        arr.push([i + stepSize / 2, dataList[Math.floor(i / step)]]);\n    }\n    return arr;\n}\n/**\n * 计算当前价格\n * price    单个商品售价\n * orderCount   订单总量\n * floorPrice   最低价售价\n * stepSize     台阶设定值。每 stepSize 件为一级\n **/\nfunction getCurrentPrice(price, orderCount, floorPrice, stepSize) {\n    //如果订单量大于上限，按上限算\n    orderCount = orderCount > orderMaxLimit ? orderMaxLimit : orderCount;\n    //最大台阶数 ＝ （最大允许合买量 ÷ 台阶设定值）- 1\n    var maxStepNumber = Math.ceil(orderMaxLimit / stepSize - 1);\n    //台阶价格级差＝（单个商品售价－最大允许合买量最低售价）÷（最大台阶数）\n    var setpRate = (price - floorPrice) / maxStepNumber; //.toFixed(4);\n    //当前合买所属台阶 = 当前合买量 ÷ 台阶设定值\n    var currenStep = Math.floor(orderCount / stepSize);\n    //当前适用动态售价＝单个售价－（实际合买台阶数×台阶适应极差）\n    var currentPrice = (price - (currenStep * setpRate)).toFixed(2);\n    //不得低于最低价。\n    currentPrice = currentPrice < floorPrice ? floorPrice : currentPrice;\n    return currentPrice;\n}\n/**\n * 生成价格梯度表\n * price    单个商品售价\n * orderCount   订单总量\n * floorPrice   最低价售价\n * stepSize     台阶设定值。每 stepSize 件为一级\n **/\nfunction getPriceList(price, orderCount, floorPrice, stepSize) {\n    //如果订单量大于上限，按上限算\n    orderCount = orderCount > orderMaxLimit ? orderMaxLimit : orderCount;\n\n    var arr = [];\n    var maxStepNumber = Math.floor(orderCount / stepSize - 1);\n    for (var i = 0; i <= maxStepNumber; i++) {\n        arr.push(getCurrentPrice(price, i * stepSize, floorPrice, stepSize));\n        orderCount -= stepSize;\n    }\n    if (orderCount > 0) {\n        arr.push(getCurrentPrice(price, maxStepNumber + 1, floorPrice, stepSize) / orderCount);\n    }\n    return arr;\n}\n/**\n * 生成订单梯度表\n * orderCount   订单总量\n * stepSize     台阶设定值。每 stepSize 件为一级\n **/\nfunction getOrderList(orderCount, stepSize) {\n    var arr = [];\n    var maxStepNumber = Math.ceil(orderCount / stepSize - 1);\n    for (var i = 0; i <= maxStepNumber; i++) {\n        arr.push(i * stepSize + stepSize);\n    }\n    return arr;\n}\n\n/**\n * 生成当前订单人数列表\n * orderCount   订单总量\n * stepSize     台阶设定值。每 stepSize 件为一级\n **/\nfunction getCurrentOrderList(orderCount, orderList, stepSize) {\n    var arr = [];\n    var maxStepNumber = Math.ceil(orderCount / stepSize - 1);\n    for (var i = 0; i <= maxStepNumber; i++) {\n        // orderCount -= orderList[i];\n        if (orderCount - orderList[i] >= 0) {\n            arr.push(i * stepSize + stepSize);\n        } else {\n            arr.push(orderCount % orderList[i]);\n        }\n    }\n    return arr;\n}\n\nfunction getCurrentPriceList(priceList, orderList, currentOrderList, stepSize) {\n    var arr = [],\n        len = currentOrderList.length;\n    for (var i = 0; i < len; i++) {\n        if (orderList[i] == currentOrderList[i]) {\n            arr.push(priceList[i]);\n        } else {\n            arr.push(priceList[i] - priceList[i] * (orderList[i] - currentOrderList[i]) / stepSize);\n        }\n    }\n    return arr;\n}\n\n//价格数据 [下单人数，对应价格]\n// var priceList = [50, 44, 38, 25, 20, 12, 7],\n//     currentPriceList = [50, 44, 38, 25, 15, null, null],\n\n//当前价格\ncurrentPrice = getCurrentPrice(price, orderAmount, floorPrice, stepSize);\n\nvar priceList = getPriceList(price, orderMaxLimit, floorPrice, stepSize),\n    orderList = getOrderList(orderMaxLimit, stepSize),\n    currentOrderList = getCurrentOrderList(orderAmount, orderList, stepSize),\n    currentPriceList = getCurrentPriceList(priceList, orderList, currentOrderList, stepSize),\n    currentProgress = getProgress(orderAmount, priceList, stepSize),\n    markPointList = getBgMarkPoint(orderMaxLimit, priceList, stepSize);\n// currentPriceList = [6, 12, 18, 24, 5];\n\noption = {\n    title: {\n        text: '当前成交价：' + currentPrice + '￥',\n        left: 'center',\n        textStyle: {\n            color: 'red',\n            fontWeight: 'bolder',\n            fontSize: 20\n        },\n        subtext: '人数越多，价格越低'\n    },\n    tooltip: {\n        trigger: 'axis',\n        enterable: true, //可进入tips\n        axisPointer: { // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n        },\n        // formatter: function(params, ticket, callback) {\n        //     if (params[0].value[1] === undefined) {\n        //         return '';\n        //     }\n        //     // console.debug(params);\n        //     var str = '';\n        //     var num = orderList[Math.floor(params[0].dataIndex / stepSize)];\n        //     var maxStepNumber = Math.ceil(orderMaxLimit / stepSize - 1);\n        //     if (num <= stepSize) {\n        //         str = (num - 1) + unitName + '以内</br>原价'; //+ params[0].value[1] + '￥';\n        //     } else if (num / stepSize > maxStepNumber) {\n        //         str = '超过' + (num - stepSize) + unitName + '</br>统统' + params[0].value[1] + '￥';\n        //         //str = 'maxStepNumberum '+ maxStepNumber + ' num '+num + '单' + params[0].value[1] + '￥';\n        //     } else {\n        //         str = '满' + (num - stepSize) + unitName + '</br>每' + unitName + params[0].value[1] + '￥'\n        //     }\n        //     //str = '满' + orderList[Math.floor(params[0].dataIndex / stepSize)] + '单</br>' + params[0].value[1] + '￥'\n        //     return str;\n        // }\n    },\n    backgroundColor:'rgba(255,255,60,0.5)',\n    xAxis: {\n        data: orderList,\n        boundaryGap: false,\n    },\n    yAxis: {\n        type: 'value'\n    },\n\n    series: [{\n        type: 'line',\n        step: 'end',\n        data: orderList,\n        // stack: 'x',\n        areaStyle: {\n            normal: {}\n        },\n    }, {\n        type: 'line',\n        step: 'end',\n        data: priceList,\n        z:1,\n        // stack: 'x',\n        areaStyle: {\n            normal: {}\n        },\n    }, ]\n};\n\nvar obj = document.getElementById('chart-panel');\nobj.style.cssText = \"border-radius: 10px;\"\nconsole.debug(document.getElementById('chart-panel'));\n\n\n","html":"","externalScripts":"","updaterUID":"bd-3892615926","theme":"","layout":"","viewCount":70,"userName":"笑***","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xr1kx-5q5g.png?v=1488795555061","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-line","title","tooltip"],"customTags":[],"updaterUserName":"笑***"}}