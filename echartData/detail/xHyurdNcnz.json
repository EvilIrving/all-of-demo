{"status":0,"data":{"cid":"xHyurdNcnz","authorUid":"bd-3920344716","authorUserName":"liyu201712","title":"北京市","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2018-04-22T16:28:48.000Z","lastUpdateTime":"2018-04-22T16:28:48.000Z","auth":2,"uid":"bd-3920344716","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.0.4","versionCreateTime":"2018-04-22T16:28:48.000Z","code":"var beijing =\"/asset/get/s/data-1499156198404-H1AJkAOEZ.json\";\r\nvar chaoyang = \"/asset/get/s/data-1518338860057-By447tpLf.json\";\r\nvar haidian = \"/asset/get/s/data-1518338852969-Hy677KTIf.json\";\r\nvar xicheng = \"/asset/get/s/data-1518338838010-SyAzQYTIf.json\";\r\nvar dongcheng = \"/asset/get/s/data-1518338829670-H1UfQYa8G.json\";\r\nvar fengtai = \"/asset/get/s/data-1518338823093-HkyMQtpUf.json\";\r\nvar daxing = \"/asset/get/s/data-1518338805373-S1Temta8G.json\";\r\nvar mentougou = \"/asset/get/s/data-1518338799987-S1deQFTLz.json\";\r\nvar changping = \"/asset/get/s/data-1518338783915-HJOJXtaLf.json\";\r\nvar shijingshan = \"/asset/get/s/data-1518338772507-BJnAMKTIz.json\";\r\nvar tongzhou = \"/asset/get/s/data-1518338763250-S17RfKpLM.json\";\r\nvar yanqing = \"/asset/get/s/data-1518338684239-S1EFGtp8f.json\";\r\necharts.extendsMap = function(id, opt){\r\n    // 实例\r\n    var chart = this.init(document.getElementById(id));\r\n\r\n    var curGeoJson = {};\r\n    var cityMap = {\r\n        \"大兴区\": daxing,\r\n        \"昌平区\": changping,\r\n        \"丰台区\": fengtai,\r\n        \"门头沟\": mentougou,\r\n        \"西城区\": xicheng,\r\n        \"朝阳区\": chaoyang,\r\n        \"通州区\": tongzhou,\r\n        \"石景山区\": shijingshan,\r\n        \"海淀区\": haidian,\r\n        \"延庆区\": yanqing,\r\n        \"东城区\": dongcheng\r\n    };\r\n    var geoCoordMap = {\r\n        '大兴': [116.344144,39.736553],\r\n        '昌平': [116.23606,40.228372],\r\n        '丰台': [116.294702,39.867817],\r\n        '门头沟': [116.108429,39.947516],\r\n        '西城': [116.37174,39.917861],\r\n        '朝阳': [116.448204,39.927157],\r\n        '通州': [116.663222,39.916533],\r\n        '石景山': [116.223412,39.913434],\r\n        '海淀': [116.3039,39.967869],\r\n        '延庆': [115.981373,40.464599],\r\n        '东城': [116.422908,39.936452]\r\n    };\r\n    var levelColorMap = {\r\n        '1': 'rgba(241, 109, 115, .8)',\r\n        '2': 'rgba(255, 235, 59, .7)',\r\n        '3': 'rgba(147, 235, 248, 1)'\r\n    };\r\n\r\n\tvar defaultOpt = {\r\n\t\tmapName: 'china',     // 地图展示\r\n\t\tgoDown: false,        // 是否下钻\r\n\t\tbgColor: '#404a59',   // 画布背景色\r\n        activeArea: [],       // 区域高亮,同echarts配置项\r\n        data: [],\r\n        // 下钻回调(点击的地图名、实例对象option、实例对象)\r\n        callback: function(name, option, instance){}\r\n\t};\r\n\tif(opt) opt = this.util.extend(defaultOpt, opt);\r\n\t\r\n\t// 层级索引\r\n\tvar name = [opt.mapName];\r\n\tvar idx = 0;\r\n\tvar pos = {\r\n\t\tleftPlus: 115,\r\n\t\tleftCur: 150,\r\n\t\tleft: 198,\r\n\t\ttop: 50\r\n\t};\r\n    \r\n\tvar line = [[0, 0], [8, 11], [0, 22]];\r\n    // style\r\n\tvar style = {\r\n\t\tfont: '18px \"Microsoft YaHei\", sans-serif',\r\n\t\ttextColor: '#eee',\r\n\t\tlineColor: 'rgba(147, 235, 248, .8)'\r\n\t};\r\n\r\n    var handleEvents = {\r\n        /**\r\n         * i 实例对象\r\n         * o option\r\n         * n 地图名\r\n        **/\r\n        resetOption: function(i, o, n){\r\n            var breadcrumb = this.createBreadcrumb(n);\r\n            \r\n            var j = name.indexOf(n);\r\n            var l = o.graphic.length;\r\n            if(j < 0){\r\n                o.graphic.push(breadcrumb);\r\n                o.graphic[0].children[0].shape.x2 = 145;\r\n                o.graphic[0].children[1].shape.x2 = 145;\r\n                if(o.graphic.length > 2){\r\n                    for(var x = 0; x < opt.data.length; x++){\r\n                        if(n === opt.data[x].name + '区'){\r\n                            o.series[0].data = handleEvents.initSeriesData([opt.data[x]]);\r\n                            break;\r\n                        }else o.series[0].data = [];\r\n                    }\r\n                };\r\n                name.push(n);\r\n                idx++;\r\n            }else{\r\n                o.graphic.splice(j + 2, l);\r\n                if(o.graphic.length <= 2){\r\n                    o.graphic[0].children[0].shape.x2 = 60;\r\n                    o.graphic[0].children[1].shape.x2 = 60;\r\n                    o.series[0].data = handleEvents.initSeriesData(opt.data);\r\n                };\r\n                name.splice(j + 1, l);\r\n                idx = j;\r\n                pos.leftCur -= pos.leftPlus * (l - j - 1);\r\n            };\r\n\r\n            o.geo.map = n;\r\n            o.geo.zoom = 0.4;\r\n            i.clear();\r\n            i.setOption(o);\r\n            this.zoomAnimation();\r\n            opt.callback(n, o, i);\r\n        },\r\n\r\n        /**\r\n         * name 地图名\r\n        **/\r\n        \r\n\r\n        // 设置effectscatter\r\n        initSeriesData: function(data){\r\n            var temp = [];\r\n            for(var i = 0;i < data.length;i++){\r\n                var geoCoord = geoCoordMap[data[i].name];\r\n                if(geoCoord){\r\n                    temp.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value, data[i].level)\r\n                    });\r\n                }\r\n            };\r\n            return temp;\r\n        },\r\n\r\n        zoomAnimation: function(){\r\n            var count = null;\r\n            var zoom = function(per){\r\n                if(!count) count = per;\r\n                count = count + per;\r\n                // console.log(per,count);\r\n                chart.setOption({\r\n                    geo: {\r\n                        zoom: count\r\n                    }\r\n                });\r\n                if(count < 1) window.requestAnimationFrame(function(){\r\n                    zoom(0.2);\r\n                });\r\n            };\r\n            window.requestAnimationFrame(function(){\r\n                zoom(0.2);\r\n            });\r\n        }\r\n    };\r\n    \r\n    var option = {\r\n    \tbackgroundColor: opt.bgColor,\r\n    \tgraphic: [{\r\n    \t\ttype: 'group',\r\n    \t\tleft: pos.left,\r\n\t        top: pos.top - 4,\r\n    \t\tchildren: [{\r\n    \t\t\ttype: 'line',\r\n    \t\t\tleft: 0,\r\n        \t\ttop: -20,\r\n        \t\tshape: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 60,\r\n                    y2: 0\r\n                },\r\n        \t\tstyle: {\r\n        \t\t\tstroke: style.lineColor,\r\n        \t\t}\r\n\t\t\t}, {\r\n    \t\t\ttype: 'line',\r\n    \t\t\tleft: 0,\r\n        \t\ttop: 20,\r\n\t\t        shape: {\r\n                    x1: 0,\r\n                    y1: 0,\r\n                    x2: 60,\r\n                    y2: 0\r\n                },\r\n                style: {\r\n                    stroke: style.lineColor,\r\n                }\r\n    \t\t}]\r\n    \t}, {\r\n        \tid: name[idx],\r\n        \ttype: 'group',\r\n        \tleft: pos.left + 2,\r\n        \ttop: pos.top,\r\n        \tchildren: [{\r\n        \t\ttype: 'polyline',\r\n        \t\tleft: 90,\r\n        \t\ttop: -12,\r\n        \t\tshape: {\r\n                    points: line\r\n                },\r\n        \t\tstyle: {\r\n                    stroke: 'transparent',\r\n        \t\t\tkey: name[0]\r\n        \t\t},\r\n        \t\tonclick: function(){\r\n        \t\t\tvar name = this.style.key;\r\n\t        \t\thandleEvents.resetOption(chart, option, name);\r\n\t        \t}\r\n        \t}, {\r\n        \t\ttype: 'text',\r\n        \t\tleft: 0,\r\n                top: 'middle',\r\n        \t\tstyle: {\r\n\t        \t\ttext: name[0] === '北京' ? '北京市' : name[0],\r\n\t        \t\ttextAlign: 'center',\r\n\t        \t\tfill: style.textColor,\r\n\t        \t\tfont: style.font\r\n\t        \t},\r\n\t        \tonclick: function(){\r\n\t        \t\thandleEvents.resetOption(chart, option, '北京');\r\n\t        \t}\r\n        \t}, {\r\n                type: 'text',\r\n                left: 0,\r\n                top: 10,\r\n                style: {\r\n                    text: 'BEIJING',\r\n                    textAlign: 'center',\r\n                    fill: style.textColor,\r\n                    font: '12px \"Microsoft YaHei\", sans-serif',\r\n                },\r\n                onclick: function(){\r\n                    handleEvents.resetOption(chart, option, '北京');\r\n                }\r\n            }]\r\n        }],\r\n        geo: {\r\n        \tmap: opt.mapName,\r\n            // roam: true,\r\n            zoom: 1,\r\n        \tlabel: {\r\n                normal: {\r\n                    show: true,\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                },\r\n                emphasis: {\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                }\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    borderColor: 'rgba(147, 235, 248, 1)',\r\n                    borderWidth: 1,\r\n                    areaColor: {\r\n                        type: 'radial',\r\n                        x: 0.5,\r\n                        y: 0.5,\r\n                        r: 0.8,\r\n                        colorStops: [{\r\n                            offset: 0, \r\n                            color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\r\n                        }, {\r\n                            offset: 1, \r\n                            color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\r\n                        }],\r\n                        globalCoord: false // 缺省为 false\r\n                    },\r\n                    shadowColor: 'rgba(128, 217, 248, 1)',\r\n                    // shadowColor: 'rgba(255, 255, 255, 1)',\r\n                    shadowOffsetX: -2,\r\n                    shadowOffsetY: 2,\r\n                    shadowBlur: 10\r\n                },\r\n                emphasis: {\r\n                    areaColor: '#389BB7',\r\n                    borderWidth: 0\r\n                }\r\n            },\r\n            regions: opt.activeArea.map(function(item){\r\n                if(typeof item !== 'string'){\r\n                    return {\r\n                        name: item.name,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                areaColor: item.areaColor || '#389BB7'\r\n                            }\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                show: item.showLabel,\r\n                                textStyle: {\r\n                                    color: '#fff'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    return {\r\n                        name: item,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                borderColor: '#91e6ff',\r\n                                areaColor: '#389BB7'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        series: [{\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            // symbol: 'diamond',\r\n            showEffectOn: 'render',\r\n            rippleEffect: {\r\n                period: 15,\r\n                scale: 6,\r\n                brushType: 'fill'\r\n            },\r\n            hoverAnimation: true,\r\n            itemStyle: {\r\n                normal: {\r\n                    color: function(params){\r\n                        return levelColorMap[params.value[3]];\r\n                    },\r\n                    shadowBlur: 10,\r\n                    shadowColor: '#333'\r\n                }\r\n            },\r\n            data: handleEvents.initSeriesData(opt.data)\r\n        }]\r\n    };\r\n\r\n    chart.setOption(option);\r\n    // 添加事件\r\n    chart.on('click', function(params){\r\n        var _self = this;\r\n    \tif(opt.goDown && params.name !== name[idx]){\r\n            if(cityMap[params.name]){\r\n                var url = cityMap[params.name];\r\n                $.get(url, function(response){\r\n                    // console.log(response);\r\n                    curGeoJson = response;\r\n                    echarts.registerMap(params.name, response);\r\n                    handleEvents.resetOption(_self, option, params.name);\r\n                });\r\n            }\r\n    \t}\r\n    });\r\n\r\n    chart.setMap = function(mapName){\r\n        var _self = this;\r\n        if(mapName.indexOf('区') < 0) mapName = mapName + '区';\r\n        var citySource = cityMap[mapName];\r\n        if(citySource){\r\n            var url = './map/' + citySource + '.json';\r\n            $.get(url, function(response){\r\n                // console.log(response);\r\n                curGeoJson = response;\r\n                echarts.registerMap(mapName, response);\r\n                handleEvents.resetOption(_self, option, mapName);\r\n            });\r\n        }\r\n        // handleEvents.resetOption(this, option, mapName);\r\n    };\r\n\r\n    return chart;\r\n};\r\n\r\n$.getJSON(beijing, function(geoJson){\r\n    echarts.registerMap('北京', geoJson);\r\n    var myChart = echarts.extendsMap('chart-panel', {\r\n    \tbgColor: '#154e90', // 画布背景色\r\n    \tmapName: '北京',    // 地图名\r\n    \tgoDown: true,       // 是否下钻\r\n    \t// 下钻回调\r\n    \tcallback: function(name, option, instance){\r\n    \t\tconsole.log(name, option, instance);\r\n    \t},\r\n        // 数据展示            \t\r\n    \tdata: [{\r\n    \t\tname: '大兴',\r\n    \t\tvalue: 10,\r\n    \t\tlevel: 1\r\n    \t}, {\r\n    \t\tname: '昌平',\r\n    \t\tvalue: 12,\r\n    \t\tlevel: 2\r\n    \t}, {\r\n    \t\tname: '丰台',\r\n    \t\tvalue: 11,\r\n    \t\tlevel: 3\r\n    \t}, {\r\n    \t\tname: '通州',\r\n    \t\tvalue: 16,\r\n    \t\tlevel: 2\r\n    \t}, {\r\n    \t\tname: '石景山',\r\n    \t\tvalue: 12,\r\n    \t\tlevel: 1\r\n    \t}]\r\n    });\r\n})\r\n","html":"","externalScripts":"","updaterUID":"bd-3920344716","theme":"","layout":"","viewCount":475,"userName":"liyu201712","commentCount":2,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xHyurdNcnz.png?v=1524414528494","isCustomThumbnail":0,"builtinTags":["category-work","geo","graphic","series-effectScatter"],"customTags":[],"updaterUserName":"liyu201712"}}