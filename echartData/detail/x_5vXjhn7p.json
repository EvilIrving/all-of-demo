{"status":0,"data":{"cid":"x_5vXjhn7p","authorUid":"obd-ojazCfL_sSLdvfEqAYLBaeVDVsjenE4","authorUserName":"点***滴","title":"双柱形","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2021-11-08T09:02:29.000Z","lastUpdateTime":"2021-11-08T09:02:59.000Z","auth":2,"uid":"obd-ojazCfL_sSLdvfEqAYLBaeVDVsjenE4","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-08T09:02:59.000Z","code":"[-15, 15].forEach((customOffset, index) => {\n    const CubeLeft = echarts.graphic.extendShape({\n        shape: {\n            x: 0,\n            y: 0,\n        },\n        buildPath: function (ctx, shape) {\n            const xAxisPoint = shape.xAxisPoint;\n            const c0 = [shape.x - customOffset, shape.y];\n            const c1 = [shape.x - 9 - customOffset, shape.y - 9];\n            const c2 = [xAxisPoint[0] - 9 - customOffset, xAxisPoint[1] - 9];\n            const c3 = [xAxisPoint[0] - customOffset, xAxisPoint[1]];\n            ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n        },\n    });\n    const CubeRight = echarts.graphic.extendShape({\n        shape: {\n            x: 0,\n            y: 0,\n        },\n        buildPath: function (ctx, shape) {\n            const xAxisPoint = shape.xAxisPoint;\n            const c1 = [shape.x - customOffset, shape.y];\n            const c2 = [xAxisPoint[0] - customOffset, xAxisPoint[1]];\n            const c3 = [xAxisPoint[0] + 18 - customOffset, xAxisPoint[1] - 9];\n            const c4 = [shape.x + 18 - customOffset, shape.y - 9];\n            ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n        },\n    });\n    const CubeTop = echarts.graphic.extendShape({\n        shape: {\n            x: 0,\n            y: 0,\n        },\n        buildPath: function (ctx, shape) {\n            const c1 = [shape.x - customOffset, shape.y];\n            const c2 = [shape.x + 18 - customOffset, shape.y - 9];\n            const c3 = [shape.x + 9 - customOffset, shape.y - 18];\n            const c4 = [shape.x - 9 - customOffset, shape.y - 9];\n            ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath();\n        },\n    });\n    echarts.graphic.registerShape('CubeLeft' + index, CubeLeft);\n    echarts.graphic.registerShape('CubeRight' + index, CubeRight);\n    echarts.graphic.registerShape('CubeTop' + index, CubeTop);\n});\nconst VALUE = [2012, 1230, 3790, 2349, 1654, 1230, 3790, 2349, 1654, 3790, 2349, 1654];\noption = {\n    backgroundColor: '#012366',\n    grid: {\n        left: '5%',\n        right: 0,\n        bottom: '5%',\n        top: '5%',\n        containLabel: true,\n    },\n    tooltip: {\n        trigger: 'axis',\n        // 坐标轴指示器，坐标轴触发有效(axis)\n        axisPointer: {\n            type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n        },\n        formatter: function (params) {\n            // console.log(params, 'params');\n            let returnData = '';\n            for (let i = 0; i < params.length; i++) {\n                let indexColor = '#da953e';\n                returnData =\n                    '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background:' +\n                    indexColor +\n                    '\"></span>';\n                returnData += params[i].name + '<br/><span style=\"padding-left:13px\">' + params[i].value + '</span>';\n            }\n            return returnData;\n        },\n        extraCssText: 'font-size: 22px; line-height: 30px',\n    },\n    xAxis: {\n        type: 'category',\n        data: ['5/16', '5/17', '5/18', '5/19', '5/20', '5/21', '5/22', '5/23', '5/24', '5/25', '5/26', '5/27'],\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: '#b1b19c',\n            },\n        },\n        offset: 10,\n        axisTick: {\n            show: false,\n            length: 9,\n            alignWithLabel: true,\n            lineStyle: {\n                color: '#fff',\n            },\n        },\n        axisLabel: {\n            fontSize: 24,\n            color: '#fff',\n        },\n    },\n    yAxis: {\n        type: 'value',\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: '#b1b19c',\n            },\n        },\n        splitLine: {\n            show: false,\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLabel: {\n            fontSize: 24,\n            color: '#fff',\n        },\n        boundaryGap: ['20%', '20%'],\n    },\n    series: [\n        {\n            type: 'custom',\n\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft0',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight0',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop0',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: VALUE,\n        },\n        {\n            type: 'custom',\n            renderItem: (params, api) => {\n                const location = api.coord([api.value(0), api.value(1)]);\n                return {\n                    type: 'group',\n                    children: [\n                        {\n                            type: 'CubeLeft1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeRight1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                        {\n                            type: 'CubeTop1',\n                            shape: {\n                                api,\n                                xValue: api.value(0),\n                                yValue: api.value(1),\n                                x: location[0] - 0,\n                                y: location[1],\n                                xAxisPoint: api.coord([api.value(0), 0]),\n                            },\n                            style: {\n                                fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                                    {\n                                        offset: 0,\n                                        color: '#d5ac37',\n                                    },\n                                    {\n                                        offset: 1,\n                                        color: '#df8244',\n                                    },\n                                ]),\n                            },\n                        },\n                    ],\n                };\n            },\n            data: VALUE,\n        },\n    ],\n};\n","html":"","externalScripts":"","updaterUID":"obd-ojazCfL_sSLdvfEqAYLBaeVDVsjenE4","theme":"","layout":"","viewCount":0,"userName":"点***滴","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x_5vXjhn7p.png?v=1636362179339","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-custom","tooltip"],"customTags":[],"updaterUserName":"点***滴"}}