{"status":0,"data":{"cid":"xH7FV-dYpq","authorUid":"bd-859299023","authorUserName":"J***e","title":"上海市地图下钻","description":"上海市地图下钻","latestVersion":1,"alwaysLatest":1,"createTime":"2020-04-28T02:35:53.000Z","lastUpdateTime":"2020-04-28T02:35:53.000Z","auth":2,"uid":"bd-859299023","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.7.0","versionCreateTime":"2020-04-28T02:35:53.000Z","code":"var shanghai = \"https://geo.datav.aliyun.com/areas_v2/bound/310000_full.json\";\r\n\r\n    var minhang = \"310112\";\r\n    var baoshan = \"310113\";\r\n    var jiading = \"310114\";\r\n    var pudongxin = \"310115\";\r\n    var jinshan = \"310116\";\r\n    var songjiang = \"310117\";\r\n    var qingpu = \"310118\";\r\n    var fengxian = \"310120\";\r\n    var chongming = \"310151\";\r\n\r\n\r\n    echarts.extendsMap = function(id, opt){\r\n        // 实例\r\n        var chart = this.init(document.getElementById(id));\r\n\r\n        var curGeoJson = {};\r\n        var cityMap = {\r\n            '闵行区': minhang,\r\n            '宝山区': baoshan,\r\n            '嘉定区': jiading,\r\n            '浦东新区': pudongxin,\r\n            '金山区': jinshan,\r\n            '松江区': songjiang,\r\n            '青浦区': qingpu,\r\n            '奉贤区': fengxian,\r\n            '崇明区': chongming,\r\n        };\r\n        var geoCoordMap = {\r\n            '崇明区': [121.39, 31.62],\r\n            '嘉定区': [121.26, 31.37],\r\n            '萍乡区': [121.30, 31.13],\r\n            '宝山区': [121.48, 31.40],\r\n            '奉贤区': [121.47, 30.91],\r\n        };\r\n        var levelColorMap = {\r\n            '1': 'rgba(241, 109, 115, .8)',\r\n            '2': 'rgba(255, 235, 59, .7)',\r\n            '3': 'rgba(147, 235, 248, 1)'\r\n        };\r\n\r\n        var defaultOpt = {\r\n            mapName: 'china',     // 地图展示\r\n            goDown: false,        // 是否下钻\r\n            bgColor: '#404a59',   // 画布背景色\r\n            activeArea: [],       // 区域高亮,同echarts配置项\r\n            data: [],\r\n            // 下钻回调(点击的地图名、实例对象option、实例对象)\r\n            callback: function(name, option, instance){}\r\n        };\r\n        if(opt) opt = this.util.extend(defaultOpt, opt);\r\n\r\n        // 层级索引\r\n        var name = [opt.mapName];\r\n        var idx = 0;\r\n        var pos = {\r\n            leftPlus: 15,\r\n            leftCur: 120,\r\n            left: 58,\r\n            top: 50\r\n        };\r\n\r\n        var line = [[0, 0], [8, 11], [0, 22]];\r\n        // style\r\n        var style = {\r\n            font: '18px \"Microsoft YaHei\", sans-serif',\r\n            textColor: '#eee',\r\n            lineColor: 'rgba(147, 235, 248, .8)'\r\n        };\r\n\r\n        var handleEvents = {\r\n            /**\r\n             * i 实例对象\r\n             * o option\r\n             * n 地图名\r\n             **/\r\n            resetOption: function(i, o, n){\r\n                var breadcrumb = this.createBreadcrumb(n);\r\n\r\n                var j = name.indexOf(n);\r\n                var l = o.graphic.length;\r\n                if(j < 0){\r\n                    o.graphic.push(breadcrumb);\r\n                    o.graphic[0].children[0].shape.x2 = 180;\r\n                    o.graphic[0].children[1].shape.x2 = 180;\r\n                    if(o.graphic.length > 2){\r\n                        for(var x = 0; x < opt.data.length; x++){\r\n                            if(n === opt.data[x].name + '市'){\r\n                                o.series[0].data = handleEvents.initSeriesData([opt.data[x]]);\r\n                                break;\r\n                            }else o.series[0].data = [];\r\n                        }\r\n                    };\r\n                    name.push(n);\r\n                    idx++;\r\n                }else{\r\n                    o.graphic.splice(j + 2, l);\r\n                    if(o.graphic.length <= 2){\r\n                        o.graphic[0].children[0].shape.x2 = 70;\r\n                        o.graphic[0].children[1].shape.x2 = 70;\r\n                        o.series[0].data = handleEvents.initSeriesData(opt.data);\r\n                    };\r\n                    name.splice(j + 1, l);\r\n                    idx = j;\r\n                    pos.leftCur -= pos.leftPlus * (l - j - 1);\r\n                };\r\n\r\n                o.geo.map = n;\r\n                o.geo.zoom = 0.4;\r\n                i.clear();\r\n                i.setOption(o);\r\n                this.zoomAnimation();\r\n                opt.callback(n, o, i);\r\n            },\r\n\r\n            /**\r\n             * name 地图名\r\n             **/\r\n            createBreadcrumb: function(name){\r\n                var cityToPinyin = {\r\n                    '闵行区': \"minhang\",\r\n                    '宝山区': \"baoshan\",\r\n                    '嘉定区': \"jiading\",\r\n                    '浦东新区': \"pudongxin\",\r\n                    '金山区': \"jinshan\",\r\n                    '松江区': \"songjiang\",\r\n                    '青浦区': \"qingpu\",\r\n                    '奉贤区': \"fengxian\",\r\n                    '崇明区': \"chongming\",\r\n                };\r\n                var breadcrumb = {\r\n                    type: 'group',\r\n                    id: name,\r\n                    left: pos.leftCur + pos.leftPlus,\r\n                    top: pos.top + 3,\r\n                    children: [{\r\n                        type: 'polyline',\r\n                        left: -90,\r\n                        top: -5,\r\n                        shape: {\r\n                            points: line\r\n                        },\r\n                        style: {\r\n                            stroke: '#fff',\r\n                            key: name\r\n                            // lineWidth: 2,\r\n                        },\r\n                        onclick: function(){\r\n                            var name = this.style.key;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        }\r\n                    }, {\r\n                        type: 'text',\r\n                        left: -68,\r\n                        top: 'middle',\r\n                        style: {\r\n                            text: name,\r\n                            textAlign: 'center',\r\n                            fill: style.textColor,\r\n                            font: style.font\r\n                        },\r\n                        onclick: function(){\r\n                            var name = this.style.text;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        }\r\n                    }, {\r\n                        type: 'text',\r\n                        left: -68,\r\n                        top: 10,\r\n                        style: {\r\n\r\n                            name: name,\r\n                            text: cityToPinyin[name] ? cityToPinyin[name].toUpperCase() : '',\r\n                            textAlign: 'center',\r\n                            fill: style.textColor,\r\n                            font: '12px \"Microsoft YaHei\", sans-serif',\r\n                        },\r\n                        onclick: function(){\r\n                            // console.log(this.style);\r\n                            var name = this.style.name;\r\n                            handleEvents.resetOption(chart, option, name);\r\n                        }\r\n                    }]\r\n                }\r\n\r\n                pos.leftCur += pos.leftPlus;\r\n\r\n                return breadcrumb;\r\n            },\r\n\r\n            // 设置effectscatter\r\n            initSeriesData: function(data){\r\n                var temp = [];\r\n                for(var i = 0;i < data.length;i++){\r\n                    var geoCoord = geoCoordMap[data[i].name];\r\n                    if(geoCoord){\r\n                        temp.push({\r\n                            name: data[i].name,\r\n                            value: geoCoord.concat(data[i].value, data[i].level)\r\n                        });\r\n                    }\r\n                };\r\n                console.log(temp)\r\n                return temp;\r\n            },\r\n\r\n            zoomAnimation: function(){\r\n                var count = null;\r\n                var zoom = function(per){\r\n                    if(!count) count = per;\r\n                    count = count + per;\r\n                    // console.log(per,count);\r\n                    chart.setOption({\r\n                        geo: {\r\n                            zoom: count\r\n                        }\r\n                    });\r\n                    if(count < 1) window.requestAnimationFrame(function(){\r\n                        zoom(0.2);\r\n                    });\r\n                };\r\n                window.requestAnimationFrame(function(){\r\n                    zoom(0.2);\r\n                });\r\n            }\r\n        };\r\n\r\n        var option = {\r\n            backgroundColor: opt.bgColor,\r\n            graphic: [{\r\n                type: 'group',\r\n                left: pos.left,\r\n                top: pos.top - 4,\r\n                children: [{\r\n                    type: 'line',\r\n                    left: 0,\r\n                    top: -20,\r\n                    shape: {\r\n                        x1: 0,\r\n                        y1: 0,\r\n                        x2: 70,\r\n                        y2: 0\r\n                    },\r\n                    style: {\r\n                        stroke: style.lineColor,\r\n                    }\r\n                }, {\r\n                    type: 'line',\r\n                    left: 0,\r\n                    top: 20,\r\n                    shape: {\r\n                        x1: 0,\r\n                        y1: 0,\r\n                        x2: 70,\r\n                        y2: 0\r\n                    },\r\n                    style: {\r\n                        stroke: style.lineColor,\r\n                    }\r\n                }]\r\n            }, {\r\n                id: name[idx],\r\n                type: 'group',\r\n                left: pos.left + 2,\r\n                top: pos.top,\r\n                children: [{\r\n                    type: 'polyline',\r\n                    left: 90,\r\n                    top: -12,\r\n                    shape: {\r\n                        points: line\r\n                    },\r\n                    style: {\r\n                        stroke: 'transparent',\r\n                        key: name[0]\r\n                    },\r\n                    onclick: function(){\r\n                        var name = this.style.key;\r\n                        handleEvents.resetOption(chart, option, name);\r\n                    }\r\n                }, {\r\n                    type: 'text',\r\n                    left: 0,\r\n                    top: 'middle',\r\n                    style: {\r\n                        text: name[0] === '上海市' ? '上海市' : name[0],\r\n                        textAlign: 'center',\r\n                        fill: style.textColor,\r\n                        font: style.font\r\n                    },\r\n                    onclick: function(){\r\n                        handleEvents.resetOption(chart, option, '上海市');\r\n                    }\r\n                }, \r\n                {\r\n                    type: 'text',\r\n                    left: 0,\r\n                    top: 10,\r\n                    style: {\r\n                        text: 'SHANGHAI',\r\n                        textAlign: 'center',\r\n                        fill: style.textColor,\r\n                        font: '12px \"Microsoft YaHei\", sans-serif',\r\n                    },\r\n                    onclick: function(){\r\n                        handleEvents.resetOption(chart, option, '上海市');\r\n                    }\r\n                }\r\n                ]\r\n            }],\r\n            geo: {\r\n                map: opt.mapName,\r\n                roam: true,\r\n                zoom: 1,\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        borderColor: 'rgba(147, 235, 248, 1)',\r\n                        borderWidth: 1,\r\n                        areaColor: {\r\n                            type: 'radial',\r\n                            x: 0.5,\r\n                            y: 0.5,\r\n                            r: 0.8,\r\n                            colorStops: [{\r\n                                offset: 0,\r\n                                color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\r\n                            }, {\r\n                                offset: 1,\r\n                                color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\r\n                            }],\r\n                            globalCoord: false // 缺省为 false\r\n                        },\r\n                        shadowColor: 'rgba(128, 217, 248, 1)',\r\n                        // shadowColor: 'rgba(255, 255, 255, 1)',\r\n                        shadowOffsetX: -2,\r\n                        shadowOffsetY: 2,\r\n                        shadowBlur: 10\r\n                    },\r\n                    emphasis: {\r\n                        areaColor: '#389BB7',\r\n                        borderWidth: 0\r\n                    }\r\n                },\r\n                regions: opt.activeArea.map(function(item){\r\n                    if(typeof item !== 'string'){\r\n                        return {\r\n                            name: item.name,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    areaColor: item.areaColor || '#389BB7'\r\n                                }\r\n                            },\r\n                            label: {\r\n                                normal: {\r\n                                    show: item.showLabel,\r\n                                    textStyle: {\r\n                                        color: '#fff'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }else{\r\n                        return {\r\n                            name: item,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    borderColor: '#91e6ff',\r\n                                    areaColor: '#389BB7'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            },\r\n            series: [{\r\n                type: 'effectScatter',\r\n                coordinateSystem: 'geo',\r\n                // symbol: 'diamond',\r\n                showEffectOn: 'render',\r\n                rippleEffect: {\r\n                    period: 15,\r\n                    scale: 6,\r\n                    brushType: 'fill'\r\n                },\r\n                hoverAnimation: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: function(params){\r\n                            return levelColorMap[params.value[3]];\r\n                        },\r\n                        shadowBlur: 10,\r\n                        shadowColor: '#333'\r\n                    }\r\n                },\r\n                data: handleEvents.initSeriesData(opt.data)\r\n            }]\r\n        };\r\n\r\n        chart.setOption(option);\r\n        // 添加事件\r\n        chart.on('click', function(params){\r\n            var _self = this;\r\n            if(opt.goDown && params.name !== name[idx]){\r\n                if(cityMap[params.name]){\r\n                    var url = cityMap[params.name];\r\n                    url = \"https://geo.datav.aliyun.com/areas_v2/bound/\" + url + \".json\";\r\n                    $.get(url, function(response){\r\n                        // console.log(response);\r\n                        curGeoJson = response;\r\n                        echarts.registerMap(params.name, response);\r\n                        handleEvents.resetOption(_self, option, params.name);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        chart.setMap = function(mapName){\r\n            var _self = this;\r\n            if(mapName.indexOf('市') < 0) mapName = mapName + '市';\r\n            var citySource = cityMap[mapName];\r\n            if(citySource){\r\n                var url = './map/' + citySource + '.json';\r\n                $.get(url, function(response){\r\n                    // console.log(response);\r\n                    curGeoJson = response;\r\n                    echarts.registerMap(mapName, response);\r\n                    handleEvents.resetOption(_self, option, mapName);\r\n                });\r\n            }\r\n            // handleEvents.resetOption(this, option, mapName);\r\n        };\r\n\r\n        return chart;\r\n    };\r\n\r\n    $.getJSON(shanghai, function(geoJson){\r\n        echarts.registerMap('上海市', geoJson);\r\n        var myChart = echarts.extendsMap('chart-panel', {\r\n            bgColor: '#154e90', // 画布背景色\r\n            mapName: '上海市',    // 地图名\r\n            goDown: true,       // 是否下钻\r\n            // 下钻回调\r\n            callback: function(name, option, instance){\r\n                console.log(name, option, instance);\r\n            },\r\n            // 数据展示\r\n            data: [{\r\n                name: '崇明区',\r\n                value: 10,\r\n                level: 1\r\n            }, {\r\n                name: '嘉定区',\r\n                value: 12,\r\n                level: 2\r\n            }, {\r\n                name: '萍乡区',\r\n                value: 11,\r\n                level: 3\r\n            }, {\r\n                name: '宝山区',\r\n                value: 16,\r\n                level: 2\r\n            }, {\r\n                name: '奉贤区',\r\n                value: 12,\r\n                level: 1\r\n            }]\r\n        });\r\n    })","html":"","externalScripts":"","updaterUID":"bd-859299023","theme":"","layout":"","viewCount":609,"userName":"J***e","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xH7FV-dYpq.png?v=1588041353709","isCustomThumbnail":0,"builtinTags":["category-work","geo","graphic","series-effectScatter"],"customTags":[],"updaterUserName":"J***e"}}