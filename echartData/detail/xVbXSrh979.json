{"status":0,"data":{"cid":"xVbXSrh979","authorUid":"obd-o-WeIDz9pQFG3HlZjbY3v-MnvKKSvAj","authorUserName":"王***表","title":"3d饼图","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2021-12-02T09:39:06.000Z","lastUpdateTime":"2021-12-27T01:41:36.000Z","auth":1,"uid":"obd-o-WeIDz9pQFG3HlZjbY3v-MnvKKSvAj","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.9.0","versionCreateTime":"2021-12-27T01:41:37.000Z","code":"var data = [\n    { name: '满意', value: 30, itemStyle: { color: '#c045ed' }, startRatio: 0, endRatio: 0.7 },\n    { name: '非常满意', value: 45, itemStyle: { color: '#6442ee' }, startRatio: 0.7, endRatio: 1 },\n    { name: '满意', value: 6, itemStyle: { color: '#3556ee' }, startRatio: 0.7, endRatio: 1 },\n    { name: '基本满意', value: 14, itemStyle: { color: '#82cbe4' }, startRatio: 0.7, endRatio: 1 },\n    { name: '不满意', value: 5, itemStyle: { color: '#56c0f4' }, startRatio: 0.7, endRatio: 1 },\n];\nvar optionConfig = {};\n\nconst getPie3D = (pieData, internalDiameterRatio) => {\n    //internalDiameterRatio:透明的空心占比\n    let series = [];\n    let sumValue = 0;\n    let startValue = 0;\n    let endValue = 0;\n    let k = 1;\n    pieData.sort((a, b) => {\n        return b.value - a.value;\n    });\n    // 为每一个饼图数据，生成一个 series-surface 配置\n    for (let i = 0; i < pieData.length; i++) {\n        sumValue += pieData[i].value;\n        let seriesItem = {\n            name: typeof pieData[i].name === 'undefined' ? `series${i}` : pieData[i].name,\n            type: 'surface',\n            parametric: true,\n            wireframe: {\n                show: false,\n            },\n            pieData: pieData[i],\n            pieStatus: {\n                selected: false,\n                hovered: false,\n                k: k,\n            },\n            radius: '50%',\n            center: ['10%', '10%'],\n        };\n\n        if (typeof pieData[i].itemStyle != 'undefined') {\n            let itemStyle = {};\n            typeof pieData[i].itemStyle.color != 'undefined' ? (itemStyle.color = pieData[i].itemStyle.color) : null;\n            typeof pieData[i].itemStyle.opacity != 'undefined'\n                ? (itemStyle.opacity = pieData[i].itemStyle.opacity)\n                : null;\n            seriesItem.itemStyle = itemStyle;\n        }\n        series.push(seriesItem);\n    }\n\n    // 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\n    // 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\n\n    for (let i = 0; i < series.length; i++) {\n        endValue = startValue + series[i].pieData.value;\n        series[i].pieData.startRatio = startValue / sumValue;\n        series[i].pieData.endRatio = endValue / sumValue;\n        series[i].parametricEquation = getParametricEquation(\n            series[i].pieData.startRatio,\n            series[i].pieData.endRatio,\n            false,\n            false,\n            k,\n            series[i].pieData.value\n        );\n        startValue = endValue;\n    }\n    let boxHeight = getHeight3D(series, 25); //通过传参设定3d饼/环的高度，26代表26px\n    // 准备待返回的配置项，把准备好的 legendData、series 传入。\n    let option = {\n        backgroundColor: '#203598',\n        labelLine: {\n            show: true,\n            lineStyle: {\n                color: '#404772',\n            },\n        },\n        label: {\n            show: true,\n            position: 'outside',\n            rich: {\n                b: {\n                    fontSize: 24,\n                    lineHeight: 30,\n                    fontWeight: 'bold',\n                    color: '#fff',\n                },\n                c: {\n                    fontSize: 18,\n                    color: '#fff',\n                },\n            },\n            formatter: '{b|{b}}\\n{c|{c}%}',\n        },\n        tooltip: {\n            backgroundColor: '#053A8D',\n            formatter: (params) => {\n                if (params.seriesName !== 'mouseoutSeries' && params.seriesName !== 'pie2d') {\n                    let bfb = (\n                        (option.series[params.seriesIndex].pieData.endRatio -\n                            option.series[params.seriesIndex].pieData.startRatio) *\n                        100\n                    ).toFixed(2);\n                    return (\n                        `${params.seriesName}<br/>` +\n                        `<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${params.color};\"></span>` +\n                        `${bfb}%`\n                    );\n                }\n            },\n        },\n        xAxis3D: {\n            min: -1,\n            max: 1,\n        },\n        yAxis3D: {\n            min: -1,\n            max: 1,\n        },\n        zAxis3D: {\n            min: -1,\n            max: 1,\n        },\n        grid3D: {\n            show: false,\n            boxHeight: boxHeight, //圆环的高度\n            left: 0,\n            top: 0, //3d饼图的位置\n            viewControl: {\n                //3d效果可以放大、旋转等，请自己去查看官方配置\n                alpha: 20, //角度\n                distance: 250, //调整视角到主体的距离，类似调整zoom\n                rotateSensitivity: 0, //设置为0无法旋转\n                zoomSensitivity: 0, //设置为0无法缩放\n                panSensitivity: 0, //设置为0无法平移\n                autoRotate: false, //自动旋转\n            },\n        },\n        series: series,\n    };\n    return option;\n};\n\n//获取3d丙图的最高扇区的高度\nconst getHeight3D = (series, height) => {\n    series.sort((a, b) => {\n        return b.pieData.value - a.pieData.value;\n    });\n    return (height * 25) / series[0].pieData.value;\n};\n\n// 生成扇形的曲面参数方程，用于 series-surface.parametricEquation\nconst getParametricEquation = (startRatio, endRatio, isSelected, isHovered, k, h) => {\n    // 计算\n    let midRatio = (startRatio + endRatio) / 2;\n    let startRadian = startRatio * Math.PI * 2;\n    let endRadian = endRatio * Math.PI * 2;\n    let midRadian = midRatio * Math.PI * 2;\n    // 如果只有一个扇形，则不实现选中效果。\n    if (startRatio === 0 && endRatio === 1) {\n        isSelected = true;\n    }\n    // 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\n    k = typeof k !== 'undefined' ? k : 1 / 3;\n    // 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\n    let offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\n    let offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\n    // 计算高亮效果的放大比例（未高亮，则比例为 1）\n    let hoverRate = isHovered ? 1.05 : 1;\n    // 返回曲面参数方程\n    return {\n        u: {\n            min: -Math.PI,\n            max: Math.PI * 3,\n            step: Math.PI / 32,\n        },\n        v: {\n            min: 0,\n            max: Math.PI * 2,\n            step: Math.PI / 20,\n        },\n        x: function (u, v) {\n            if (u < startRadian) {\n                return offsetX + Math.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian) {\n                return offsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        y: function (u, v) {\n            if (u < startRadian) {\n                return offsetY + Math.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian) {\n                return offsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        z: function (u, v) {\n            if (u < -Math.PI * 0.5) {\n                return Math.sin(u);\n            }\n            if (u > Math.PI * 2.5) {\n                return Math.sin(u) * h * 0.1;\n            }\n            return Math.sin(v) > 0 ? 1 * h * 0.1 : -1;\n        },\n    };\n};\n\noption = getPie3D(data, 0.8);\nconsole.log(option);\n//是否需要label指引线，如果要就添加一个透明的2d饼状图并调整角度使得labelLine和3d的饼状图对齐，并再次setOption\noption.series.push({\n    name: 'pie2d',\n    type: 'pie',\n    labelLine: {\n        length: 10,\n        length2: 10,\n    },\n    startAngle: -25, //起始角度，支持范围[0, 360]。\n    clockwise: false, //饼图的扇区是否是顺时针排布。上述这两项配置主要是为了对齐3d的样式\n    radius: ['65%', '65%'],\n    center: ['55%', '48%'], //指示线的位置\n    data: data,\n    itemStyle: {\n        opacity: 0,\n    },\n});\n","html":"","externalScripts":"https://cdn.jsdelivr.net/npm/echarts-gl@1/dist/echarts-gl.min.js","updaterUID":"obd-ojxzqR1VSSb1u_vNIJOp1lAAk4vY3E6","theme":"","layout":"","viewCount":0,"userName":"王***表","commentCount":0,"starCount":9,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xVbXSrh979.png?v=1640569297091","isCustomThumbnail":0,"builtinTags":["category-work","grid3D","series-pie","series-surface","tooltip"],"customTags":["pie"],"updaterUserName":"锄***肆"}}