{"status":0,"data":{"cid":"x8TBwffafa","authorUid":"bd-1847551832","authorUserName":"s***0","title":"对value取不同log的漏斗图","description":"纯属虚构","latestVersion":6,"alwaysLatest":1,"createTime":"2020-04-15T02:33:50.000Z","lastUpdateTime":"2020-04-15T02:33:50.000Z","auth":2,"uid":"bd-1847551832","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":6,"parentVersion":5,"echartsVersion":"4.7.0","versionCreateTime":"2020-04-15T10:17:01.000Z","code":"// 折线平滑函数\n// a, b, c 连续3点\n// level 平滑强度，0-1\n// return 新的 b 点\nconst smoothness = function (prev, current, next, level = 0.5) {\n  if (prev === undefined || next === undefined) {\n    return current\n  }\n  const tmp = (next - prev) / 2 + prev\n  const newPoint = (tmp - current) * level + current\n  return newPoint\n}\n\n\n// 折线平均函数\n// list [number] 待平滑列表\n// level 平滑强度，0-1\n// return [number] 平滑列表\nconst smoothness2 = function (list = [], level = 0.5) {\n  if (list.length <= 2) {\n    return list\n  }\n  const start = list[0]\n  const end = list[list.length -1]\n  const rate = (end - start) / (list.length - 1)\n  return list.map((item, i) => {\n    const target = rate * i + start\n    return (target - item) * level + item\n  })\n}\n\n// 折线平滑函数\n// list [number] 待平滑列表\n// level 平滑强度，0-1\n// return [number] 平滑列表\nconst smoothness3 = function (list = [], level = 0.5) {\n  if (list.length <= 2) {\n    return list\n  }\n  return list.map((current, i) => {\n    const prev = list[i - 1]\n    const next = list[i + 1]\n    return smoothness(prev, current, next, level)\n  })\n}\n\nvar data = [50000, 5000, 500, 5]\nvar data2 = [50000, 5000, 500, 50]\n\nvar originData = data.map(i => ({value: i, name: i}))\nvar originData2 = data.map(i => ({value: i, name: i}))\n\n\nvar avgData = smoothness2([].concat(data, [0])).slice(0,-1).map(i => ({value: i, name: i}))\n// var avgData2 = smoothness2([].concat(data2, [0])).slice(0,-1).map(i => ({value: i, name: i}))\n// var avgData1 = smoothness2([].concat(data, [0]), 0.8).slice(0,-1).map(i => ({value: i, name: i}))\nvar avgData2 = smoothness3([].concat(data, [0]), 1).slice(0,-1).map(i => ({value: i, name: i}))\nfunction getBaseLog(x, y) {\n  return Math.log(y) / Math.log(x);\n}\n\n\nvar series = [\n{\n    name: '预期',\n    type: 'funnel',\n    left: '10%',\n    width: '80%',\n    label: {\n        formatter: '{c}'\n    },\n    labelLine: {\n        show: false\n    },\n    itemStyle: {\n        opacity: 0.2\n    },\n    data: originData\n}\n]\n\n// var list = [1.2, 2, 10, 100, 1000]\n// var list = [2]\n\n// list.forEach((key, idx) => {\n//     series.push({\n//         name: '预期',\n//         type: 'funnel',\n//         left: '10%',\n//         width: '80%',\n//         maxSize: `${100-idx*5}%`,\n//         label: {\n//             padding: [idx*30,0,0,0],\n//             formatter: `log${key}：{c}`\n//         },\n//         labelLine: {\n//             show: false\n//         },\n//         itemStyle: {\n//             opacity: 0.1\n//         },\n//         data: originData.map(item => {\n//             return {\n//                 ...item,\n//                 value: getBaseLog(key, item.value).toFixed(2)\n//             }\n//         })\n//     })\n// })\n\n\nseries.push({\n    name: '预期',\n    type: 'funnel',\n    left: '10%',\n    width: '80%',\n    label: {\n        padding: [90,0,0,0],\n        formatter: `平均0.5：{c}`\n    },\n    labelLine: {\n        show: false\n    },\n    itemStyle: {\n        opacity: 0.5\n    },\n    data: avgData\n})\nseries.push({\n    name: '预期',\n    type: 'funnel',\n    left: '10%',\n    width: '80%',\n    label: {\n        padding: [120,0,0,0],\n        formatter: `平均2-0.5：{c}`\n    },\n    labelLine: {\n        show: false\n    },\n    itemStyle: {\n        opacity: 0.1\n    },\n    data: avgData2\n})\n\n// series.push({\n//     name: '预期',\n//     type: 'funnel',\n//     left: '10%',\n//     width: '80%',\n//     label: {\n//         padding: [120,0,0,0],\n//         formatter: `平滑0.5：{c}`\n//     },\n//     labelLine: {\n//         show: false\n//     },\n//     itemStyle: {\n//         opacity: 0.2\n//     },\n//     data: avgData1\n// })\n\nconsole.log(series.map(i=>i.data.map(d=>d.value)))\n\noption = {\n    title: {\n        text: '漏斗图',\n        subtext: '纯属虚构'\n    },\n    tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c}%\"\n    },\n    toolbox: {\n        feature: {\n            dataView: {readOnly: false},\n            restore: {},\n            saveAsImage: {}\n        }\n    },\n    legend: {\n        data: ['访问','咨询','订单']\n    },\n    series: series\n};\n","html":"","externalScripts":"","updaterUID":"bd-1847551832","theme":"","layout":"","viewCount":474,"userName":"s***0","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x8TBwffafa.png?v=1586945822023","isCustomThumbnail":0,"builtinTags":["category-work","legend","series-funnel","title","toolbox","tooltip"],"customTags":[],"updaterUserName":"s***0"}}