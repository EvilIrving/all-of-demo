{"status":0,"data":{"cid":"xfT4huy9Ro","authorUid":"bd-2646425411","authorUserName":"s***g","title":"单位：个","description":"自己做的四个面的柱状图，仅供自己分析交流","latestVersion":1,"alwaysLatest":0,"createTime":"2021-05-25T02:29:59.000Z","lastUpdateTime":"2021-05-25T02:29:59.000Z","auth":2,"uid":"bd-2646425411","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.1.1","versionCreateTime":"2021-05-25T02:30:00.000Z","code":"     // 绘制左侧面\r\n        const CubeLeft = echarts.graphic.extendShape({\r\n            shape: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            buildPath: function(ctx, shape) {\r\n                // 会canvas的应该都能看得懂，shape是从custom传入的\r\n                const xAxisPoint = shape.xAxisPoint\r\n                const c0 = [shape.x, shape.y-5] //右上点\r\n                const c1 = [shape.x - 23, shape.y - 14] //左上点\r\n                const c2 = [xAxisPoint[0] - 23, xAxisPoint[1] - 13]\r\n                const c3 = [xAxisPoint[0], xAxisPoint[1]]//右下点\r\n                ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath()\r\n            }\r\n        })\r\n        // 绘制右侧面\r\n        const CubeRight = echarts.graphic.extendShape({\r\n            shape: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            buildPath: function(ctx, shape) {\r\n                const xAxisPoint = shape.xAxisPoint\r\n                const c1 = [shape.x, shape.y-5] //左上\r\n                const c2 = [xAxisPoint[0], xAxisPoint[1]] //左下\r\n                const c3 = [xAxisPoint[0] + 25, xAxisPoint[1] - 15]\r\n                const c4 = [shape.x + 25, shape.y - 15] //右上\r\n                ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n            }\r\n        })\r\n        // 绘制顶面\r\n        const CubeTop = echarts.graphic.extendShape({\r\n            shape: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            buildPath: function(ctx, shape) {\r\n                \r\n                const c1 = [shape.x , shape.y-5] //下点\r\n                const c2 = [shape.x + 25, shape.y - 15] //右点\r\n                const c3 = [shape.x , shape.y - 22]  //上点\r\n                const c4 = [shape.x - 23, shape.y - 14]//左点\r\n                ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n            }\r\n        })\r\n        // 绘制底面\r\n        const CubeBottom = echarts.graphic.extendShape({\r\n            shape: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            buildPath: function(ctx, shape) {\r\n                const xAxisPoint = shape.xAxisPoint\r\n                const c1 = [xAxisPoint[0], xAxisPoint[1]] //下点\r\n                const c2 = [shape.x + 25,  xAxisPoint[1]-16] //右点\r\n                const c3 = [shape.x ,  xAxisPoint[1]-22]  //上点\r\n                // const c4 = [shape.x - 23, shape.y - 14]//左点\r\n                ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath()\r\n            }\r\n        })\r\n        // 注册三个面图形\r\n        echarts.graphic.registerShape('CubeLeft', CubeLeft)\r\n        echarts.graphic.registerShape('CubeRight', CubeRight)\r\n        echarts.graphic.registerShape('CubeTop', CubeTop)\r\n        echarts.graphic.registerShape('CubeBottom', CubeBottom)\r\n        const VALUE = data\r\n    option = {\r\n            backgroundColor: \"transparent\",\r\n            title: {\r\n                text: '单位：个',\r\n                textStyle: {\r\n                    color: '#7ebaf2',\r\n                    fontWeight: '800',\r\n                    fontSize: 12,\r\n                },\r\n                left: '18px',\r\n                top: '1%'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'shadow'\r\n                },\r\n                formatter: function(params, ticket, callback) {\r\n                    const item = params[1]\r\n                    return item.name + ' : ' + item.value;\r\n                }\r\n            },\r\n            grid: {\r\n                left: '5%',\r\n                right: '5%',\r\n                top: '12%',\r\n                bottom: '5%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: [ '轻载\\n ≤30%', '重载\\n≥ 80%＜100%', '过载\\n≥100%'],\r\n                axisLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: '#7ebaf2'\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                    length: 9,\r\n                    alignWithLabel: true,\r\n                    lineStyle: {\r\n                        color: '#7DFFFD'\r\n                    }\r\n                },\r\n                axisLabel: {\r\n                    fontSize: 12,\r\n                    interval:0, //设置成 0 强制显示所有标签。\r\n                    rotate:0, //刻度标签旋转的角度\r\n                }\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                min:0,\r\n                axisLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: '#7ebaf2'\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n                splitArea: {\r\n                    show: true,\r\n                    areaStyle: {\r\n                        color: [\r\n                            \"rgba(26,50,83,1)\",\r\n                            \"rgba(30,57,92,1)\",\r\n                        ]\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    fontSize: 12\r\n                },\r\n                boundaryGap: ['20%', '20%']\r\n            },\r\n            series: [{\r\n                type: 'custom',\r\n                renderItem: (params, api) => {\r\n                    let cubeLeftStyle = ''\r\n                    let cubeRightStyle = ''\r\n                    let cubeTopStyle = ''\r\n                    let cubeBottomStyle = ''\r\n                    if(params.dataIndex == 0){\r\n                        cubeLeftStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(0,255,186,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,148,109,1)'\r\n                        }])\r\n                        cubeRightStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(0,255,186,0.3)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,148,109,0.1)'\r\n                        }])\r\n                        cubeTopStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(0,190,140,0.4)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,190,140,0.4)'\r\n                        }])\r\n                    }else if(params.dataIndex == 1){\r\n                        cubeLeftStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(222,231,235,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(141,153,165,1)'\r\n                        }])\r\n                        cubeRightStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(222,231,235,0.3)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(222,231,235,0.1)'\r\n                        }])\r\n                        cubeTopStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(255,255,255,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(255,255,2555,1)'\r\n                        }])\r\n                        cubeBottomStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(159,170,180,0.4)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(159,170,148,0.4)'\r\n                        }])\r\n                    \r\n                    }else if(params.dataIndex == 2){\r\n                       cubeLeftStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(62,255,255,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,126,191,1)'\r\n                        }])\r\n                        cubeRightStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(23,176,255,3)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,138,255,0.1)'\r\n                        }])\r\n                        cubeTopStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(0,150,255,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(0,150,255,1)'\r\n                        }])\r\n                        cubeBottomStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(159,170,180,0.4)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(159,170,148,0.4)'\r\n                        }])\r\n                    }else if(params.dataIndex == 3){\r\n                       cubeLeftStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(255,217,217,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(180,97,97,1)'\r\n                        }])\r\n                        cubeRightStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(178,95,95,0.3)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(89,47,47,0.1)'\r\n                        }])\r\n                        cubeTopStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(255,217,217,1)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(255,217,217,1)'\r\n                        }])\r\n                        cubeBottomStyle=new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: 'rgba(247,166,166,0.4)'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: 'rgba(247,166,166,0.4)'\r\n                        }])\r\n                    }\r\n                    const location = api.coord([api.value(0), api.value(1)])\r\n                    return {\r\n                        type: 'group',\r\n                        children: [{\r\n                            type: 'CubeLeft',\r\n                            shape: {\r\n                                api,\r\n                                xValue: api.value(0),\r\n                                yValue: api.value(1),\r\n                                x: location[0],\r\n                                y: location[1],\r\n                                xAxisPoint: api.coord([api.value(0), 0])\r\n                            },\r\n                            style: {\r\n                                fill: cubeLeftStyle\r\n                            }\r\n                        }, {\r\n                            type: 'CubeRight',\r\n                            shape: {\r\n                                api,\r\n                                xValue: api.value(0),\r\n                                yValue: api.value(1),\r\n                                x: location[0],\r\n                                y: location[1],\r\n                                xAxisPoint: api.coord([api.value(0), 0])\r\n                            },\r\n                            style: {\r\n                                fill:cubeRightStyle\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'CubeTop',\r\n                            shape: {\r\n                                api,\r\n                                xValue: api.value(0),\r\n                                yValue: api.value(1),\r\n                                x: location[0],\r\n                                y: location[1],\r\n                                xAxisPoint: api.coord([api.value(0), 0])\r\n                            },\r\n                            style: {\r\n                                fill: cubeTopStyle\r\n                            }\r\n                        },\r\n                        {\r\n                            type: 'CubeBottom',\r\n                            shape: {\r\n                                api,\r\n                                xValue: api.value(0),\r\n                                yValue: api.value(1),\r\n                                x: location[0],\r\n                                y: location[1],\r\n                                xAxisPoint: api.coord([api.value(0), 0])\r\n                            },\r\n                            style: {\r\n                                fill: cubeBottomStyle\r\n                            }\r\n                        },\r\n                        \r\n                        \r\n                        ]\r\n                    }\r\n                },\r\n                data: [10,15,20]\r\n            }, {\r\n                type: 'bar',\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        position: 'top',\r\n                        fontSize: 14,\r\n                        color: '#fff',\r\n                        offset: [2, -25]\r\n                    }\r\n                },\r\n                itemStyle: {\r\n                    color: 'transparent'\r\n                },\r\n                tooltip: {\r\n\r\n                },\r\n                data: VALUE\r\n            }]\r\n        }","html":"","externalScripts":"","updaterUID":"bd-2646425411","theme":"","layout":"","viewCount":0,"userName":"s***g","commentCount":0,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xfT4huy9Ro.png?v=1621909800157","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-custom","title","tooltip"],"customTags":[],"updaterUserName":"s***g"}}