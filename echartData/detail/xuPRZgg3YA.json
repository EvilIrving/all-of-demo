{"status":0,"data":{"cid":"xuPRZgg3YA","authorUid":"obd-o2LTBBVH-_wnf3bp-4xqHedZzh9Ah6j","authorUserName":"l***n","title":"柱状图+折线图","description":"","latestVersion":13,"alwaysLatest":1,"createTime":"2020-09-17T09:09:39.000Z","lastUpdateTime":"2020-09-17T09:09:39.000Z","auth":2,"uid":"obd-o2LTBBVH-_wnf3bp-4xqHedZzh9Ah6j","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":13,"parentVersion":12,"echartsVersion":"4.8.0","versionCreateTime":"2020-10-09T00:54:10.000Z","code":"let xData = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\nlet yDataLine = [220, 182, 191, 234, 290, 330, 310]\nlet yDataBar = [2200, 1802, 1091, 2304, 2090, 3030, 3100]\nlet yDataBar2 = [2200, 1802, 1091, 2304, 2090, 3030, 310]\nlet seriesName = ['a', 'b', 'c']\n\nlet activeItem = xData[xData.length - 1] //默认触发的列\n\nlet showMinorYAxis = false //是否显示右侧y轴\nlet showXAxisData = false //是否在x轴显示数据\nlet interactive = true //是否可点击\nlet showLegend = true //是否显示图例\n\nlet series = [{\n    name: seriesName[0],\n    yAxisIndex: 0,\n    type: 'line',\n    lineStyle: {\n        color: '#bf3232'\n    },\n    animation: false,\n    data: yDataLine\n}, {\n    name: seriesName[1],\n    yAxisIndex: 1,\n    type: 'bar',\n    data: yDataBar,\n    lineStyle: {\n        color: '#bf3232'\n    },\n    barWidth: 6,\n    itemStyle: {\n        color: function(params) {\n            if (params.value >= 0 || yDataBar2.length > 0) {\n                if (interactive && params.name !== activeItem) {\n                    return 'rgba(199, 169, 117, 0.6)'\n                } else {\n                    return '#C7A975'\n                }\n            } else {\n                if (interactive && params.name !== activeItem) {\n                    return 'rgba(56, 56, 56, 0.6)'\n                } else {\n                    return '#5B6376'\n                }\n            }\n        },\n        barBorderRadius: 3\n    }\n}]\n\nif (yDataBar2.length > 0) {\n    series.push({\n        name: seriesName[2],\n        yAxisIndex: 1,\n        type: 'bar',\n        data: yDataBar2,\n        barGap: '66%',\n        barWidth: 6,\n        itemStyle: {\n            color: function(params) {\n                if (interactive && params.name !== activeItem) {\n                    return 'rgba(56, 56, 56, 0.6)'\n                } else {\n                    return '#5B6376'\n                }\n            },\n            opacity: 1,\n            barBorderRadius: 3\n        }\n\n    })\n}\n\noption = {\n    grid: {\n        left: 0,\n        right: 0\n    },\n    legend: {\n        show: showLegend,\n        selectedMode: false,\n        top:0,\n        left: 0,\n        data: [{\n            name: seriesName[1],\n            icon: 'square'\n        },{\n            name: seriesName[2],\n            icon: 'square'\n        },{\n            name: seriesName[0],\n            icon: 'circle'\n        }]\n    },\n    xAxis: {\n        axisLine: {\n            show: false\n        },\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            formatter: function(value, index) {\n                if (!showXAxisData) {\n                    if (interactive && value !== activeItem) {\n                        return '{normal|' + value + '}'\n                    } else {\n                        return '{active|' + value + '}'\n                    }\n                } else {\n                    return [\n                        '{val|' + yDataBar[index] + (yDataBar2[index] ? '/' + yDataBar2[index] : '') + '}\\n',\n                        '{name|' + value + '}'\n                    ].join('\\n')\n                }\n            },\n            rich: {\n                normal: {\n                    fontSize: 10,\n                    color: 'rgba(56, 56, 56, 0.6)'\n                },\n                active: {\n                    fontSize: 10,\n                    color: '#383838'\n                },\n                val: {\n                    fontSize: 14,\n                    color: '#565656'\n                },\n                name: {\n                    fontSize: 12,\n                    color: '#929292'\n                }\n            }\n        },\n        data: xData,\n        axisPointer: {\n            show: interactive,\n            handle: {\n                show: true,\n                size: 0\n            },\n            type: 'shadow',\n            triggerTooltip: false,\n            label: {\n                show: false\n            },\n            shadowStyle: {\n                color: {\n                    type: 'linear',\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [{\n                        offset: 0,\n                        color: 'rgba(199,169,117,0)' // 0% 处的颜色\n                    }, {\n                        offset: 1,\n                        color: 'rgba(199,169,117,0.20)' // 100% 处的颜色\n                    }],\n                    global: true // 缺省为 false\n                }\n            }\n        },\n    },\n    yAxis: [{\n        axisLine: {\n            show: false\n        },\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            fontSize: 10,\n            color: '#929292',\n            height: 38,\n            padding: [20, 0, 0],\n            inside: true\n        },\n        splitLine: {\n            lineStyle: {\n                color: '#eee'\n            },\n        },\n    }, {\n        show: showMinorYAxis,\n        axisLine: {\n            show: false\n        },\n        axisTick: {\n            show: false\n        },\n        axisLabel: {\n            fontSize: 10,\n            color: '#929292',\n            height: 38,\n            padding: [20, 0, 0],\n            inside: true\n        }\n    }],\n    axisPointer: {\n        triggerOn: 'click',\n    },\n    series: series\n};\n\nif (interactive) {\n    //注册事件前先销毁点击事件（避免点击事件会重复执行）\n    myChart.getZr().off('click');\n    myChart.getZr().on('click', function(param) {\n        var pointInPixel = [param.offsetX, param.offsetY];\n        if (myChart.containPixel('grid', pointInPixel)) {\n            //获取当前点击的索引值\n            //注意：若柱状图为纵向则获取x轴的索引，若柱状图为横向则需获取y轴的索引(见下方注释)\n            let xIndex = myChart.convertFromPixel({\n                seriesIndex: 0\n            }, [param.offsetX, param.offsetY])[0];\n            let xName = option.xAxis.data[xIndex]; //当前点击柱子的数据\n            activeItem = xName\n            myChart.setOption(option)\n        }\n    })\n}","html":"","externalScripts":"","updaterUID":"obd-o2LTBBVH-_wnf3bp-4xqHedZzh9Ah6j","theme":"","layout":"","viewCount":63,"userName":"l***n","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xuPRZgg3YA.png?v=1602204850504","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-line","tooltip"],"customTags":[],"updaterUserName":"l***n"}}