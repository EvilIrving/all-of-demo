{"status":0,"data":{"cid":"xkHf9aZN8H","authorUid":"obd-otnkSYdUusRTs6FVujy5PxIj9fiA28s","authorUserName":"0***0","title":"立体柱状图","description":"立体柱状图 颜色渐变","latestVersion":3,"alwaysLatest":1,"createTime":"2020-07-03T07:01:41.000Z","lastUpdateTime":"2020-07-03T07:01:41.000Z","auth":2,"uid":"obd-otnkSYdUusRTs6FVujy5PxIj9fiA28s","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-08T12:40:50.000Z","code":"let data = [{\r\n        level: '6等',\r\n        landArea: 120\r\n    },\r\n    {\r\n        level: '7等',\r\n        landArea: 200\r\n    },\r\n    {\r\n        level: '8等',\r\n        landArea: 230\r\n    },\r\n    {\r\n        level: '9等',\r\n        landArea: 280\r\n    },\r\n    {\r\n        level: '10等',\r\n        landArea: 300\r\n    },\r\n    {\r\n        level: '11等',\r\n        landArea: 200\r\n    },\r\n    {\r\n        level: '12等',\r\n        landArea: 130\r\n    },\r\n]\r\nconst CubeLeft = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        const xAxisPoint = shape.xAxisPoint\r\n        const c0 = [shape.x, shape.y]\r\n        const c1 = [shape.x - 20, shape.y - 4]\r\n        const c2 = [xAxisPoint[0] - 20, xAxisPoint[1] - 4]\r\n        const c3 = [xAxisPoint[0], xAxisPoint[1]]\r\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath()\r\n    }\r\n})\r\nconst CubeRight = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        const xAxisPoint = shape.xAxisPoint\r\n        const c1 = [shape.x, shape.y]\r\n        const c2 = [xAxisPoint[0], xAxisPoint[1]]\r\n        const c3 = [xAxisPoint[0] + 8, xAxisPoint[1] - 4]\r\n        const c4 = [shape.x + 8, shape.y - 4]\r\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n    }\r\n})\r\nconst CubeTop = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        // 逆时针 角 y 负数向上  X 负数向左\r\n        const c1 = [shape.x, shape.y]\r\n        const c2 = [shape.x + 8, shape.y - 4]\r\n        const c3 = [shape.x - 11, shape.y - 8]\r\n        const c4 = [shape.x - 20, shape.y - 4]\r\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n    }\r\n})\r\necharts.graphic.registerShape('CubeLeft', CubeLeft)\r\necharts.graphic.registerShape('CubeRight', CubeRight)\r\necharts.graphic.registerShape('CubeTop', CubeTop)\r\nlet MAX = []\r\nlet VALUE = []\r\nlet LEV = []\r\nlet chartData = [].concat(data)\r\nchartData.forEach(item => {\r\n    VALUE.push(item.landArea)\r\n    LEV.push(item.level)\r\n})\r\nlet maxItem = [].concat(VALUE).sort((a, b) => b - a)[0]\r\n\r\nlet SUM = 0\r\nfor (let item of VALUE) {\r\n    SUM += item\r\n    MAX.push(maxItem)\r\n}\r\noption = {\r\n    backgroundColor: 'rgba(0, 43, 77, 0.9)',\r\n    tooltip: {\r\n        trigger: 'item',\r\n        confine: false,\r\n        position: 'top',\r\n        textStyle: {\r\n            fontSize: 12\r\n        },\r\n        // extraCssText: 'box-shadow: 0 0 20px #00C7FF inset',\r\n        // backgroundColor: 'rgba(0,155,206,0.5)',\r\n        backgroundColor: 'transparent',\r\n        formatter: function(params) {\r\n            let percentage = (VALUE[params.dataIndex] / SUM * 100).toFixed(2)\r\n            return `<div class=\"tooltip\">${VALUE[params.dataIndex]}万亩 ${percentage}%</div>`\r\n        },\r\n        extraCssText: 'box-shadow: 0 0 20px #00C7FF inset;'\r\n    },\r\n    grid: {\r\n        show: false,\r\n        left: 0,\r\n        right: 10,\r\n        bottom: 150,\r\n        top: 50,\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: LEV,\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{\r\n                    offset: 0,\r\n                    color: '#D2A62E'\r\n                }, {\r\n                    offset: 1,\r\n                    color: '#C62129'\r\n                }])\r\n            }\r\n        },\r\n        offset: 10,\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            fontSize: 12,\r\n            color: '#00FFFE'\r\n        }\r\n    },\r\n    yAxis: {\r\n        show: false,\r\n        type: 'value',\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            fontSize: 12\r\n        },\r\n        boundaryGap: ['20%', '20%']\r\n    },\r\n    series: [{\r\n        type: 'custom',\r\n        renderItem: function(params, api) {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(1,17,33,.5)'\r\n                    }\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(1,17,33,.5)'\r\n                    }\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(1,17,33,.5)'\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        data: MAX\r\n    }, {\r\n        type: 'custom',\r\n        renderItem: (params, api) => {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: '#1477BD'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#00FFFE'\r\n                        }])\r\n                    }\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: '#002E75' // 顶部\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#00B0D0' // 底部\r\n                        }])\r\n                    }\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                            offset: 0,\r\n                            color: '#33F7FB'\r\n                        }, {\r\n                            offset: 1,\r\n                            color: '#00FFFE'\r\n                        }])\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        data: VALUE\r\n    }, {\r\n        type: 'bar',\r\n        label: {\r\n            normal: {\r\n                show: false,\r\n                position: 'top',\r\n                formatter: (e) => {\r\n                    switch (e.name) {\r\n                        case '6等':\r\n                            return VALUE[0]\r\n                        case '7等':\r\n                            return VALUE[1]\r\n                        case '8等':\r\n                            return VALUE[2]\r\n                        case '9等':\r\n                            return VALUE[3]\r\n                        case '10等':\r\n                            return VALUE[4]\r\n                        case '11等':\r\n                            return VALUE[5]\r\n                        case '12等':\r\n                            return VALUE[6]\r\n                    }\r\n                },\r\n                fontSize: 10,\r\n                color: '#fff',\r\n                offset: [0, -5]\r\n            }\r\n        },\r\n        itemStyle: {\r\n            color: 'transparent'\r\n        },\r\n        data: MAX\r\n    }]\r\n}","html":"","externalScripts":"","updaterUID":"obd-otnkSYdUusRTs6FVujy5PxIj9fiA28s","theme":"","layout":"","viewCount":11754,"userName":"0***0","commentCount":0,"starCount":35,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xkHf9aZN8H.png?v=1594212051084","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-custom","tooltip"],"customTags":[],"updaterUserName":"0***0"}}