{"status":0,"data":{"cid":"xSJvHPoU7H","authorUid":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","authorUserName":"断***1","title":"图标排序","description":"图标列可以排序","latestVersion":11,"alwaysLatest":1,"createTime":"2020-07-22T10:59:02.000Z","lastUpdateTime":"2020-07-22T10:59:02.000Z","auth":2,"uid":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":11,"parentVersion":10,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-28T09:35:16.000Z","code":"let nameArr = ['巴西', '印尼', '美国', '印度', '中国', '世界人口(万)'];\nlet legend = ['2011年', '2012年', '2013年'];\nconst formatterYaxis = function() {\n    let ret = [];\n    for (let i = 0; i < nameArr.length; i++) {\n        let obj = {};\n        obj.data = nameArr;\n        obj.show = false;\n        if (i === 0) {\n            obj.show = true;\n        }\n        ret.push(obj)\n    }\n    return ret;\n}\n\n\n\nconst formatterSeries = function(grey) {\n    let data = [\n        [18203, 23489, 29034, 104970, 131744, 630230],\n        [29325, 29438, 36000, 127594, 164141, 581807],\n        [293025, 20488, 86000, 107594, 104141, 781807]\n    ];\n    dataGreyArr = [\n        [28203, 23489, 29034, 104970, 131844, 630230],\n        [29325, 29038, 36000, 127094, 164141, 581007],\n        [299025, 20488, 86000, 107594, 104141, 781807]\n    ];\n    let retSeries = []\n    let obj = {}\n    // 分组\n    data.forEach((item, index) => {\n        item.forEach((val, valIndex) => {\n            if (!obj[valIndex]) {\n                obj[valIndex] = []\n            }\n            obj[valIndex].push({\n                name: legend[index],\n                type: 'bar',\n                stack: legend[index],\n                value: val,\n                grey: dataGreyArr[index][valIndex],\n                yAxisIndex: valIndex,\n            })\n\n        })\n    })\n    // 对各个分组排序\n    for (key in obj) {\n        obj[key].sort((a, b) => {\n            return b.value - a.value\n        })\n        retSeries.push(obj[key])\n    }\n\n    // retSeries = retSeries.flat()\n    retSeries = retSeries.reduce((acc, val) => acc.concat(val), []);\n    retSeries.forEach(item => {\n        let arr = new Array(nameArr.length);\n        let greyArr = new Array(nameArr.length);\n        arr[item.yAxisIndex] = item.value;\n        greyArr[item.yAxisIndex] = item.grey;\n        item.data = arr;\n        item.greyArr = greyArr;\n        delete item.value;\n        delete item.grey;\n    })\n    console.log(retSeries)\n    return retSeries;\n}\n\nlet temGreyArr = formatterSeries();\ntemGreyArr.forEach(item => {\n    item.data = item.greyArr;\n    item.itemStyle = {\n        normal: {\n            color: \"#DCDCDC\",\n        }\n    }\n    delete item.greyArr;\n})\noption = {\n    title: {\n        text: '世界人口总量',\n        subtext: '数据来自网络'\n    },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'shadow',\n            shadowStyle: {\n                color: \"rgba(239, 232, 232, 0.2)\"\n            }\n        },\n        formatter: function(params) {\n            let name = ''\n            params.filter(item => item.value != undefined && item.color != '#DCDCDC').forEach(item => {\n                name += item.seriesName + ': ' + item.value + '<br/>'\n            })\n            return name\n        }\n    },\n    legend: {\n        data: legend\n    },\n    grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n    },\n    xAxis: {\n        type: 'value',\n        boundaryGap: [0, 0.01]\n    },\n    yAxis: formatterYaxis(),\n    series: formatterSeries().concat(temGreyArr),\n};","html":"","externalScripts":"","updaterUID":"obd-o24uUOkviLDgErT_zIs6z5dWYQTJyB4","theme":"","layout":"","viewCount":128,"userName":"断***1","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xSJvHPoU7H.png?v=1595928916920","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","title","tooltip"],"customTags":[],"updaterUserName":"断***1"}}