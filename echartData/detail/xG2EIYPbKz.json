{"status":0,"data":{"cid":"xG2EIYPbKz","authorUid":"bd-732371637","authorUserName":"g***f","title":"Graph图-节点连接","description":"graph图","latestVersion":3,"alwaysLatest":1,"createTime":"2021-01-18T05:57:08.000Z","lastUpdateTime":"2021-01-18T05:57:08.000Z","auth":2,"uid":"bd-732371637","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":3,"parentVersion":2,"echartsVersion":"4.8.0","versionCreateTime":"2021-01-19T07:56:25.000Z","code":"// DATA 数据\nlet DATA = [\n    // 线图\n    {\n        name: '1',\n        value: [1, 300],\n    },\n    {\n        name: '2',\n        value: [2, 300],\n    },\n    {\n        name: '3',\n        value: [2, 225],\n    },\n    {\n        name: '4',\n        value: [2, 150],\n    },\n    {\n        name: '5',\n        value: [4, 300],\n    },\n    {\n        name: '6',\n        value: [7, 300],\n        end: true,\n    },\n    {\n        name: '6.8',\n        value: [7, 275],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    {\n        name: '6.2',\n        value: [6, 275],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    {\n        name: '7',\n        value: [6, 250],\n    },\n    {\n        name: '8',\n        value: [8, 250],\n        end: true,\n    },\n    {\n        name: '18',\n        value: [5, 225],\n        end: true,\n    },\n    {\n        name: '19',\n        value: [4, 150],\n        end: true,\n    },\n    {\n        name: '19.2',\n        value: [3, 125],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    {\n        name: '19.8',\n        value: [4, 125],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    {\n        name: '20',\n        value: [3, 100],\n    },\n    {\n        name: '21',\n        value: [5, 100],\n        end: true,\n    },\n    // 框图 1\n    {\n        name: '29',\n        value: [5.8, (15 / 2) + 50],\n    },\n    {\n        name: '30',\n        value: [6, 65],\n        symbol: 'none',\n    },\n    {\n        name: '31',\n        value: [6, 50],\n        symbol: 'none',\n    },\n    {\n        name: '32',\n        value: [8, 65],\n        symbol: 'none',\n    },\n    {\n        name: '33',\n        value: [8, 50],\n        symbol: 'none',\n    },\n    {\n        name: '34',\n        value: [8.2, (15 / 2) + 50],\n        end: true,\n    },\n    {\n        name: '29-solid',\n        value: [6.3, (15 / 2) + 50],\n        symbol: 'none',\n    },\n    {\n        name: '34-solid',\n        value: [7.9, (15 / 2) + 50],\n        symbol: 'none',\n    },\n    // 虚线连接\n    {\n        name: '34.8',\n        value: [8.2, 40],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    {\n        name: '34.2',\n        value: [6.8, 40],\n        label: {\n            show: false\n        },\n        itemStyle: {\n            color: 'rgb(255, 255, 255,0)',\n            borderColor: 'rgb(255, 255, 255,0)'\n        }\n    },\n    // 框图 2\n    {\n        name: '35',\n        value: [6.8, (15 / 2) + 15],\n    },\n    {\n        name: '36',\n        value: [7, 30],\n        symbolSize: 15\n    },\n    {\n        name: '37',\n        value: [7, 15],\n        symbolSize: 15\n    },\n    {\n        name: '38',\n        value: [9, 30],\n        symbolSize: 15\n    },\n    {\n        name: '39',\n        value: [9, 15],\n        symbolSize: 15\n    },\n    {\n        name: '40',\n        value: [9.2, (15 / 2) + 15],\n        end: true,\n    },\n];\nlet LINKS = [{\n        source: '1',\n        target: '2'\n    },\n    {\n        source: '2',\n        target: '3'\n    },\n    {\n        source: '2',\n        target: '5'\n    },\n    {\n        source: '5',\n        target: '6',\n        value: '6#基础底板',\n        label: {\n            show: true,\n            position: 'middle',\n            formatter: \"{c}\"\n        }\n    },\n    {\n        source: '6',\n        target: '6.8',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '6.8',\n        target: '6.2',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '6.2',\n        target: '7',\n        lineStyle: {\n            type: 'dashed'\n        }\n    },\n    {\n        source: '7',\n        target: '8'\n    },\n    {\n        source: '3',\n        target: '4'\n    },\n    {\n        source: '3',\n        target: '18',\n        value: '南区西侧底板',\n        label: {\n            show: true,\n            position: 'middle',\n            formatter: \"{c}\"\n        }\n    },\n    {\n        source: '4',\n        target: '19',\n        value: '南区东侧底板',\n        label: {\n            show: true,\n            position: 'middle',\n            formatter: \"{c}\"\n        }\n    },\n    {\n        source: '19',\n        target: '19.8',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '19.8',\n        target: '19.2',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '19.2',\n        target: '20',\n        lineStyle: {\n            type: 'dashed'\n        }\n    },\n    {\n        source: '20',\n        target: '21',\n        value: '南区结构-地下3层（车库2层）',\n        label: {\n            show: true,\n            position: 'middle',\n            formatter: \"{c}\"\n        }\n    },\n    // 框线图 1\n    {\n        source: '30',\n        target: '31',\n        symbol: 'none'\n    },\n    {\n        source: '30',\n        target: '32',\n        symbol: 'none'\n    },\n    {\n        source: '31',\n        target: '33',\n        symbol: 'none'\n    },\n    {\n        source: '32',\n        target: '33',\n        symbol: 'none'\n    },\n    {\n        source: '29-solid',\n        target: '34-solid',\n        symbol: 'none',\n        lineStyle: {\n            width: 10\n        }\n    },\n    // 连接线\n    {\n        source: '34',\n        target: '34.8',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '34.8',\n        target: '34.2',\n        lineStyle: {\n            type: 'dashed'\n        },\n        symbol: 'none'\n    },\n    {\n        source: '34.2',\n        target: '35',\n        lineStyle: {\n            type: 'dashed'\n        }\n    },\n    // 框线图 2\n    {\n        source: '36',\n        target: '37',\n        symbol: 'none'\n    },\n    {\n        source: '36',\n        target: '38',\n        symbol: 'none'\n    },\n    {\n        source: '37',\n        target: '39',\n        symbol: 'none'\n    },\n    {\n        source: '38',\n        target: '39',\n        symbol: 'none'\n    }\n];\n\n// 生成 timeLine 节点\nconst generatorLineNodes = (x, y) => {\n    let nodes = [];\n    for (let i = 1; i <= y; i++) {\n        nodes.push({\n            name: `timeLine-${i}`,\n            value: [x, i],\n            label: {\n                show: false\n            },\n            itemStyle: {\n                color: 'rgb(255, 255, 255,0)',\n                borderColor: 'rgb(255, 255, 255,0)'\n            }\n        });\n    }\n\n    let linkNodes = [];\n    for (let j = 0; j < nodes.length; j++) {\n        if (j + 5 >= nodes.length) break;\n        // 找到DATA数据中同等高度的节点\n        let LINKS_Nodes = DATA.filter(x => x.value[1] === nodes[j + 5].value[1] && x.value[0] < nodes[j + 5].value[0]);\n        if(LINKS_Nodes.length > 0) {\n            // 如果有多个，则按照节点 横坐标 倒序排列 (方便取最接近line的节点)\n            LINKS_Nodes.sort((a,b)=>b.value[0] - a.value[0])\n        }\n        // 如果存在 name 且 j + 5 j - 5在数据范围内 且 name 属性值是一个整数字符串\n        if (LINKS_Nodes[0]?.name && j + 5 < nodes.length && j - 5 >= 0 && !LINKS_Nodes[0]?.name.includes('.') && !LINKS_Nodes[0]?.end) {\n            \n            linkNodes.push({\n                source: nodes[j].name,\n                target: LINKS_Nodes[0].name,\n                lineStyle: {\n                    type: 'solid',\n                    color: 'red',\n                    width: 2\n                },\n                symbol: 'none'\n            });\n            j += 9;\n            linkNodes.push({\n                source: LINKS_Nodes[0].name,\n                target: nodes[j + 1].name,\n                lineStyle: {\n                    type: 'solid',\n                    color: 'red',\n                    width: 2\n                },\n                symbol: 'none'\n            });\n        } else {\n            linkNodes.push({\n                source: nodes[j].name,\n                target: nodes[j + 1].name,\n                lineStyle: {\n                    type: 'solid',\n                    color: 'red',\n                    width: 2\n                },\n                symbol: 'none'\n            })\n        }\n    }\n    return {\n        nodes,\n        linkNodes\n    };\n}\n\n// 调用生成 Lines的函数\nlet LineNodes = generatorLineNodes(3, 320);\n\n// 生成 option\nconst generatorOpt = (el) => {\n    return {\n        title: {\n            text: 'Graph图-节点连接'\n        },\n        tooltip: {\n            show: false\n        },\n        xAxis: [{\n                type: 'value',\n                boundaryGap: false,\n                splitLine: {\n                    show: false\n                },\n                data: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n            }\n\n        ],\n        yAxis: {\n            type: 'value',\n            splitLine: {\n                show: false\n            }\n        },\n        series: [{\n            type: 'graph',\n            layout: 'none',\n            coordinateSystem: 'cartesian2d',\n            symbolSize: 20,\n            edgeSymbol: ['circle', 'arrow'],\n            edgeSymbolSize: [0, 10],\n            itemStyle: {\n                color: '#fff',\n                borderColor: '#000'\n            },\n            label: {\n                show: true,\n                color: '#000'\n            },\n            data: DATA.concat(el.nodes),\n            links: LINKS.concat(el.linkNodes),\n            lineStyle: {\n                normal: {\n                    color: '#2f4554'\n                }\n            }\n        }]\n    };\n};\n\noption = generatorOpt(LineNodes);","html":"","externalScripts":"","updaterUID":"bd-732371637","theme":"","layout":"","viewCount":212,"userName":"g***f","commentCount":0,"starCount":6,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xG2EIYPbKz.png?v=1611042985611","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-graph","title"],"customTags":[],"updaterUserName":"g***f"}}