{"status":0,"data":{"cid":"xS5ULfHOEc","authorUid":"obd-oMZ897aaM_c6bLXIWmPsGtDThCLj12j","authorUserName":"安***听","title":"堆积图","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2021-03-31T03:14:06.000Z","lastUpdateTime":"2021-12-02T09:35:05.000Z","auth":2,"uid":"obd-oMZ897aaM_c6bLXIWmPsGtDThCLj12j","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"4.9.0","versionCreateTime":"2021-12-02T09:35:05.000Z","code":"const barData = {\r\n    xaxis: [\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\"7月\",\"8月\"],\r\n    series: [{\r\n        name: \"金额1\",\r\n        data: [90, 19,68, 98, 87, 20, 150, 62]\r\n    },{\r\n        name: \"金额2\",\r\n        data: [90, 19,68, 98, 87, 20, 150, 62]\r\n    },{\r\n        name: \"金额3\",\r\n        data: [90, 19,68, 98, 87, 20, 150, 62]\r\n    }],\r\n    legend: [\"金额1\",\"金额2\",\"金额3\",],\r\n    unit: \"个\",\r\n    namePadding: [0, 10, 50, 0],\r\n    yName: \"数\",\r\n    legendShow: true,\r\n    legendX: \"right\",\r\n    xAxisTickHidden: false,\r\n    xLabelMargin: 25,\r\n    colorArr: [\r\n      {\r\n        start: \"#1B7AFF\",\r\n        end: \"#51D7FF\",\r\n      },\r\n      {\r\n        start: \"#01C12E\",\r\n        end: \"#48FE73\",\r\n      },\r\n      {\r\n        start: \"#FF6B1A\",\r\n        end: \"#FF9179\",\r\n      },\r\n    ],\r\n    splitNumber: 3,\r\n    dataZoom: {\r\n      type: \"slider\",\r\n      show: false,\r\n      realtime: true,\r\n      startValue: 0,\r\n      endValue: 5,\r\n      filterMode: \"none\",\r\n    },\r\n    len: 5,\r\n    grid: {\r\n      left: \"122px\",\r\n      top: \"156px\",\r\n      right: \"5px\",\r\n      bottom: \"65px\",\r\n      containLabel: false,\r\n    },\r\n}\r\n  myChart.getZr().on(\"mousemove\", (param) => {\r\n    let pointInPixel = [param.offsetX, param.offsetY];\r\n    if (myChart.containPixel(\"grid\", pointInPixel)) {\r\n      //若鼠标滑过区域位置在当前图表范围内 鼠标设置为小手\r\n      myChart.getZr().setCursorStyle(\"pointer\");\r\n    } else {\r\n      myChart.getZr().setCursorStyle(\"default\");\r\n    }\r\n  });\r\n  myChart.getZr().off(\"click\");\r\n  myChart.getZr().on(\"click\", (params) => {\r\n    this.$once(\"hook:beforeDestroy\", () => {\r\n      myChart.getZr().off(\"click\");\r\n    });\r\n    const pointInPixel = [params.offsetX, params.offsetY];\r\n    if (myChart.containPixel(\"grid\", pointInPixel)) {\r\n      let xIndex = myChart.convertFromPixel({ seriesIndex: 0 }, [\r\n        params.offsetX,\r\n        params.offsetY,\r\n      ])[0]; //柱形的下标 ，此处取[1]\r\n      xIndex = Math.abs(xIndex);\r\n      this.$emit(\"clickBarIndex\", xIndex);\r\n    }\r\n  });\r\n  // document.oncontextmenu = () =>{ return false; }; \r\n  // myChart.getZr().off(\"contextmenu\");\r\n  // myChart.getZr().on(\"contextmenu\", (params) => {\r\n  //    const pointInPixel = [params.offsetX, params.offsetY];\r\n  //   if (myChart.containPixel(\"grid\", pointInPixel)) {\r\n  //     let xIndex = myChart.convertFromPixel({ seriesIndex: 0 }, [\r\n  //       params.offsetX,\r\n  //       params.offsetY,\r\n  //     ])[0]; //柱形的下标 ，此处取[1]\r\n  //     xIndex = Math.abs(xIndex);\r\n  //     this.$emit(\"contextMenuBarIndex\", xIndex);\r\n  //     }\r\n  // });\r\n\r\n  let normalColor = \"#ECF8FF\";\r\n  let list = [];\r\n  let seriesData = barData.series.map((item, index) => {\r\n    list = [...list, ...item.data];\r\n    return {\r\n      name: item.name,\r\n      type: \"bar\",\r\n      barWidth: \"64px\",\r\n      stack: \"记录\",\r\n      itemStyle: {\r\n        normal: {\r\n          color: {\r\n            type: \"linear\",\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n              {\r\n                offset: 0,\r\n                color: barData.colorArr[index].start,\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: barData.colorArr[index].end,\r\n              },\r\n            ],\r\n            globalCoord: false,\r\n          },\r\n        },\r\n      },\r\n      label: {\r\n        show: barData.label && index === 2 && true,\r\n        position: \"top\",\r\n        align: \"center\",\r\n        // width: 72,\r\n        height: 48,\r\n        backgroundColor: \"rgba(9,50,93,0.3)\",\r\n        borderColor: \"rgba(9,50,93,0.5)\",\r\n        borderWidth: 3,\r\n        formatter: (item) => {\r\n          let value = barData.label && barData.label[item.dataIndex];\r\n          return `{a|${value}%}`;\r\n        },\r\n        distance: 18,\r\n        align: \"center\",\r\n        rich: {\r\n          a: {\r\n            padding: [6, 8, 6, 8],\r\n            fontFamily: \"DINAlternate-Bold\",\r\n            fontSize: 42,\r\n            color: \"#3CF0FF\",\r\n            lineHeight: 52,\r\n          },\r\n        },\r\n      },\r\n      data: item.data,\r\n    };\r\n  });\r\n  option = {\r\n    backgroundColor: '#0A2E5D',\r\n    legend: {\r\n      show: barData.legendShow,\r\n      x: barData.legendX,\r\n      y: \"top\",\r\n      icon: \"rect\",\r\n      selectedMode: false,\r\n      padding: [20, 0, 0, 0],\r\n      itemGap: barData.itemGap || 32,\r\n      itemWidth: 40,\r\n      itemHeight: 28,\r\n      textStyle: {\r\n        height: 48,\r\n        rich: {\r\n          a: {\r\n            color: normalColor,\r\n            fontSize: 48,\r\n            fontFamily: \"PingFangSC-Regular\",\r\n          },\r\n        },\r\n      },\r\n      formatter: (name) => {\r\n        return \"{a|\" + name + \" \" + \"}\";\r\n      },\r\n      data: barData.legend,\r\n    },\r\n    cursor: \"pointer\",\r\n    dataZoom: barData.dataZoom ? barData.dataZoom : [],\r\n    grid: barData.grid,\r\n    tooltip: {\r\n      textStyle: {\r\n        fontSize: 48,\r\n      },\r\n      trigger: \"axis\",\r\n      formatter: function (params) {\r\n        let str = \"\";\r\n        for (let i = 0; i < params.length; i++) {\r\n          if (\r\n            (!!params[i].value || params[i].value === 0) &&\r\n            params[i].seriesName !== \"\"\r\n          ) {\r\n            let unit = barData.unit;\r\n            str += params[i].seriesName + \": \" + params[i].value + unit + \"<br/>\";\r\n          } else if (params[i].seriesName !== \"\") {\r\n            str += params[i].seriesName + \": \" + \"无数据\" + \"<br/>\";\r\n          }\r\n        }\r\n        return str;\r\n      },\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: \"category\",\r\n        data: barData.xaxis,\r\n        axisPointer: {\r\n          type: \"shadow\",\r\n        },\r\n        axisLabel: {\r\n          interval: 0,\r\n          margin: barData.xLabelMargin,\r\n          textStyle: {\r\n            fontFamily: \"PingFangSC-Regular\",\r\n            color: normalColor,\r\n            fontSize: 42,\r\n            lineHeight: 52,\r\n          },\r\n          formatter: function (value) {\r\n            let len = barData.series[0] ? barData.series[0].data.length : 0;\r\n            let ret = \"\"; //拼接加\\n返回的类目项\r\n            let maxLength = 7;\r\n            if (len < 5) {\r\n              maxLength = 9;\r\n            }\r\n            let valLength = value.length; //X轴类目项的文字个数\r\n            let rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数\r\n            if (rowN > 1) {\r\n              //如果类目项的文字大于5,\r\n              for (let i = 0; i < rowN; i++) {\r\n                let temp = \"\"; //每次截取的字符串\r\n                let start = i * maxLength; //开始截取的位置\r\n                let end = start + maxLength; //结束截取的位置\r\n                //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧\r\n                temp = value.substring(start, end) + \"\\n\";\r\n                ret += temp; //凭借最终的字符串\r\n              }\r\n              return ret;\r\n            } else {\r\n              return value;\r\n            }\r\n          },\r\n        },\r\n\r\n        // axisLabel: {\r\n        //   interval: 0,\r\n        //   margin: barData.xLabelMargin,\r\n        //   textStyle: {\r\n        //     fontFamily: \"PingFangSC-Regular\",\r\n        //     color: normalColor,\r\n        //     fontSize: 36,\r\n        //   },\r\n        // },\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n        axisTick: {\r\n          show: true,\r\n          length: 5,\r\n          alignWithLabel: true,\r\n          lineStyle: {\r\n            width: 2,\r\n            color: \"#CEF8FF\",\r\n          },\r\n        },\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: \"value\",\r\n        name: barData.yName,\r\n        splitNumber: barData.splitNumber,\r\n        nameTextStyle: {\r\n          fontFamily: \"PingFangSC-Regular\",\r\n          color: normalColor,\r\n          fontSize: 48,\r\n          // align: \"right\",\r\n          padding: barData.namePadding,\r\n        },\r\n        axisLabel: {\r\n          formatter: \"{value}\",\r\n          align: \"right\",\r\n          textStyle: {\r\n            fontFamily: \"PingFangSC-Regular\",\r\n            color: normalColor,\r\n            fontSize: 48,\r\n          },\r\n        },\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n        axisTick: {\r\n          show: true,\r\n          length: 5,\r\n          lineStyle: {\r\n            width: 2,\r\n            color: \"#CEF8FF\",\r\n          },\r\n        },\r\n        splitLine: {\r\n          show: false,\r\n        },\r\n      },\r\n    ],\r\n    series: seriesData,\r\n  };\r\n  myChart.setOption(option);\r\n  if (barData.dataZoom && !barData.noScroll) {\r\n    let startNumber = 0;\r\n    let start = new Date();\r\n    let duration = 2000;\r\n    let dataLen = barData.xaxis.length;\r\n    let animation = () => {\r\n      let time = new Date();\r\n      let timePassed = time - start;\r\n      if (timePassed >= duration) {\r\n        start = new Date();\r\n        if (startNumber === dataLen - barData.len) {\r\n          startNumber = 0;\r\n        }\r\n        myChart.dispatchAction({\r\n          type: \"dataZoom\",\r\n          startValue: startNumber,\r\n          endValue: startNumber + barData.len,\r\n        });\r\n        startNumber++;\r\n      }\r\n      this.rafId = requestAnimationFrame(animation);\r\n    };\r\n    animation();\r\n    // this.$once(\"hook:beforeDestroy\", () => {\r\n    //   cancelAnimationFrame(this.rafId);\r\n    // });\r\n    // dom.onmouseover = () => {\r\n    //   cancelAnimationFrame(this.rafId);\r\n    // };\r\n    // dom.onmouseleave = () => {\r\n    //   animation();\r\n    // };\r\n  }","html":"","externalScripts":"","updaterUID":"obd-oMZ897aaM_c6bLXIWmPsGtDThCLj12j","theme":"","layout":"","viewCount":26,"userName":"安***听","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xS5ULfHOEc.png?v=1638437705953","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-bar","tooltip"],"customTags":[],"updaterUserName":"安***听"}}