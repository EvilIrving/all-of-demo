{"status":0,"data":{"cid":"xpafv8rr4-","authorUid":"bd-4061446379","authorUserName":"A***9","title":"自定义系列：柱形图顶点加折线","description":"1、柱形图顶点加折线\n2、每种柱形顶点为一条折线","latestVersion":1,"alwaysLatest":1,"createTime":"2019-03-12T06:27:26.000Z","lastUpdateTime":"2019-03-12T06:27:26.000Z","auth":2,"uid":"bd-4061446379","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.1","versionCreateTime":"2019-03-12T06:27:26.000Z","code":"var colors = ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3']\r\nvar yearCount = 7;\r\nvar categoryCount = 30;\r\n\r\nvar xAxisData = [];\r\n// var customData = [];\r\nvar legendData = [];\r\nvar dataList = [];\r\n\r\nlegendData.push('trend');\r\nvar encodeY = [];\r\nfor (var i = 0; i < yearCount; i++) {\r\n    legendData.push((2010 + i) + '');\r\n    dataList.push([]);\r\n    // customData.push([i])\r\n    encodeY.push(1 + i);\r\n}\r\n\r\nfor (var i = 0; i < categoryCount; i++) {\r\n    var val = Math.random() * 1000;\r\n    xAxisData.push('category' + i);\r\n\r\n    var data = dataList[0];\r\n    for (var j = 0; j < dataList.length; j++) {\r\n        var value = j === 0\r\n            ? echarts.number.round(val, 2)\r\n            : echarts.number.round(Math.max(0, dataList[j - 1][i] + (Math.random() - 0.5) * 200), 2);\r\n        dataList[j].push(value);\r\n        // customData[j].push(value);\r\n    }\r\n}\r\n// console.log(dataList)\r\nfunction renderItem(params, api) {  //renderItem针对当前data的每个应该显示(由dataZoom控制)的dataItem项执行,data.length需要等于category长度\r\n    var xValue = api.value(0);//api.value(x)表示dataItem[x]或者dataIndex,0通常用来存放dataIndex便于识别数据\r\n    var xStartValue = params.dataIndex - params.dataIndexInside ;\r\n    var xEndValue = params.dataIndex - params.dataIndexInside + params.dataInsideLength ;\r\n    var currentSeriesIndices = api.currentSeriesIndices();//得到系列的 当前index组。注意这个 index 不同于系列定义时的 index。这个 index 是当 legend 组件进行了系列筛选后，剩余的系列排列后的 index。\r\n    var barLayout = api.barLayout({\r\n        barGap: '30%', barCategoryGap: '20%', count: currentSeriesIndices.length - 1\r\n    });\r\n    // console.log(params);\r\n    // console.log(xValue);\r\n    var pointsList = [];\r\n    if (params.dataIndexInside === 0){//当当前renderItem是第一个渲染的时候，才绘制自定义图形\r\n        // console.log(xStartValue,xEndValue)\r\n        for (var i = 0; i < currentSeriesIndices.length; i++) {\r\n            var seriesIndex = currentSeriesIndices[i];//遍历当前Legend筛选后的index组\r\n            if (seriesIndex !== params.seriesIndex) {\r\n                var points = [];\r\n                for (var j = xStartValue;j < xEndValue;j++){\r\n                    var point = api.coord([j, dataList[seriesIndex-1][j]]);\r\n                    point[0] += barLayout[i - 1].offsetCenter;\r\n                    point[1] -= 0;\r\n                    points.push(point);\r\n                }\r\n                pointsList.push(points)\r\n            }\r\n        }   \r\n        return {\r\n            type:'group',\r\n            children:echarts.util.map(pointsList, function (points, index) {\r\n                                        return {\r\n                                            type: 'polyline',\r\n                                            animation: true,\r\n                                            name: 'Year' + (index),\r\n                                            shape: {\r\n                                                points: points\r\n                                            },\r\n                                            style: api.style({\r\n                                                                    stroke: colors[currentSeriesIndices[index]],//api.visual('color'),\r\n                                                                    fill: null\r\n                                                                })\r\n                                        };\r\n                                    })\r\n            };\r\n    }\r\n    \r\n    // var style = api.style({\r\n    //     stroke: api.visual('color'),\r\n    //     fill: null\r\n    // });\r\n    // console.log(pointsList)\r\n    \r\n}\r\noption = {\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    legend: {\r\n        data: legendData\r\n    },\r\n    dataZoom: [{\r\n        type: 'slider',\r\n        start: 50,\r\n        end: 70\r\n    }, {\r\n        type: 'inside',\r\n        start: 50,\r\n        end: 70\r\n    }],\r\n    xAxis: {\r\n        data: xAxisData\r\n    },\r\n    yAxis: {},\r\n    series: [{\r\n        type: 'custom',\r\n        name: 'trend',\r\n        renderItem: renderItem,\r\n        itemStyle: {\r\n            normal: {\r\n                borderWidth: 2\r\n            }\r\n        },\r\n        // encode: {\r\n        //     x: 0,\r\n        //     y: encodeY\r\n        // },\r\n        data: dataList[0],\r\n        z: 100\r\n    }].concat(echarts.util.map(dataList, function (data, index) {\r\n        return {\r\n            type: 'bar',\r\n            animation: false,\r\n            name: legendData[index + 1],\r\n            itemStyle: {\r\n                normal: {\r\n                    opacity: 0.5,\r\n                    color:colors[index]\r\n                }\r\n            },\r\n            data: data\r\n        };\r\n    }))\r\n};;\r\nif (option && typeof option === \"object\") {\r\n    myChart.setOption(option, true);\r\n};","html":"","externalScripts":"","updaterUID":"bd-4061446379","theme":"","layout":"","viewCount":141,"userName":"A***9","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xpafv8rr4-.png?v=1552372047008","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-bar","series-custom","tooltip"],"customTags":["polyline","renderitem"],"updaterUserName":"A***9"}}