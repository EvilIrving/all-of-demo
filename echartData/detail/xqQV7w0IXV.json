{"status":0,"data":{"cid":"xqQV7w0IXV","authorUid":"bd-101698999","authorUserName":"Z***8","title":"扫雷游戏","description":"","latestVersion":4,"alwaysLatest":1,"createTime":"2019-06-11T04:26:12.000Z","lastUpdateTime":"2019-06-11T04:26:37.000Z","auth":2,"uid":"bd-101698999","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":4,"parentVersion":3,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-11T06:45:07.000Z","code":"/**\n 扫雷区域 x * y，雷数 mines\n sizeX = 9;\n sizeY = 9;\n mines = 10;\n*/\n\n// 定义扫雷区域和雷数\nconf = {\n    'sizeX': 10,\n    'sizeY': 10,\n    'mines': 20\n};\n\n// 剩余地雷数（未标记的地雷数）\nminesLeft = conf.mines;\n\n// 剩余待翻开砖块数\nbricksLeft = conf.sizeX * conf.sizeY - conf.mines;\n\n// 游戏是否结束（胜利/失败）\nvar flag = 0;\n\n/** 随机生成地雷数组函数\n    生成二维数组地雷数据，格式为 res[x][y] = value ，x、y 代表位置，value 含义如下：\n    value:  10-18   代表周围的地雷数为 0-8（未翻开），\n            0-8     代表周围地雷数为 0-8（已翻开）\n            20-28   代表周围的地雷数为 0-8（已标记），\n            \n            19      代表此处有地雷（未翻开）\n            9       代表此处有地雷（已翻开）\n            29      代表此处有地雷（已标记）\n            \n    备注：为了省事，就用了一个变量的不同取值表示所有情况\n*/\nfunction generateMinesData(sizeX, sizeY, mines) {\n    var size = sizeX * sizeY;\n    var numList = [];\n    var minesList = [];\n    var res = [];\n    \n    // 准备一个 0 到 sizeX * sizeY - 1 的自然数列表（即所有砖块的顺序编号）\n    for (var k = 0; k < size; k++) {\n        numList.push(k);\n    }\n    \n    // 从 numList 自然数列表中抽地雷\n    for (var m = 0; m < mines; m++) {\n\n        // 从 numList 中随机抽取一个元素，通过 splice 将其删除，并存入 minesList\n        minesList.push(numList.splice(Math.floor(Math.random() * numList.length), 1)[0]);\n    }\n\n    // 生成二维数组地雷数据，格式为 res[x][y] = value 先全部置 10\n    for (var i = 0; i < sizeX; i++) {\n        res[i] = [];\n        for (var j = 0; j < sizeY; j++) {\n            res[i].push(10);\n        }\n    }\n\n    // 遍历地雷列表，更新二维数组地雷数据，标记地雷 + 更新地雷周围的数字（砖块的附近地雷数）\n    for (var n = 0; n < minesList.length; n++) {\n\n        // 地雷顺序号换算 x,y 坐标\n        x = Math.floor(minesList[n] / sizeX);\n        y = minesList[n] % sizeY;\n\n        // 标记地雷\n        res[x][y] = 19;\n\n        // 雷周围砖块数字加 1\n        typeof(res[x][y + 1]) != 'undefined' && (res[x][y + 1] != 19) && (res[x][y + 1] += 1);\n        typeof(res[x][y - 1]) != 'undefined' && (res[x][y - 1] != 19) && (res[x][y - 1] += 1);\n\n        if (typeof(res[x + 1]) != 'undefined') {\n            typeof(res[x + 1][y]) != 'undefined' && (res[x + 1][y] != 19) && (res[x + 1][y] += 1);\n            typeof(res[x + 1][y + 1]) != 'undefined' && (res[x + 1][y + 1] != 19) && (res[x + 1][y + 1] += 1);\n            typeof(res[x + 1][y - 1]) != 'undefined' && (res[x + 1][y - 1] != 19) && (res[x + 1][y - 1] += 1);\n\n        }\n\n        if (typeof(res[x - 1]) != 'undefined') {\n            typeof(res[x - 1][y]) != 'undefined' && (res[x - 1][y] != 19) && (res[x - 1][y] += 1);\n            typeof(res[x - 1][y + 1]) != 'undefined' && (res[x - 1][y + 1] != 19) && (res[x - 1][y + 1] += 1);\n            typeof(res[x - 1][y - 1]) != 'undefined' && (res[x - 1][y - 1] != 19) && (res[x - 1][y - 1] += 1);\n        }\n\n\n        /** 最开始通过 sizeX 和 sizeY 判断，后来换掉了……\n        y - 1 >= 0 && (res[x][y - 1] != 19) && (res[x][y - 1] += 1);\n        y + 1 < sizeY - 1 && (res[x][y + 1] != 19) && (res[x][y + 1] += 1);\n\n        x - 1 >= 0 && (res[x - 1][y] != 19) && (res[x - 1][y] += 1);\n        x + 1 < sizeX - 1 && (res[x + 1][y] != 19) && (res[x + 1][y] += 1);\n\n        x - 1 >= 0 && y - 1 >= 0 && (res[x - 1][y - 1] != 19) && (res[x - 1][y - 1] += 1);\n        x + 1 < sizeX - 1 && y + 1 <= sizeY && (res[x + 1][y + 1] != 19) && (res[x + 1][y + 1] += 1);\n\n        x - 1 >= 0 && y + 1 <= sizeY && (res[x - 1][y + 1] != 19) && (res[x - 1][y + 1] += 1);\n        x + 1 < sizeX - 1 && y - 1 >= 0 && (res[x + 1][y - 1] != 19) && (res[x + 1][y - 1] += 1);\n        */\n\n    }\n\n    return res;\n}\n\n// 地雷数组转换为 heatmap 数据：[[value,value,value,value,...],...] => [[x,y,value],...]\nfunction covertData(arr) {\n    var res = [];\n    for (var i = 0; i < arr.length; i++) {\n        for (var j = 0; j < arr[i].length; j++) {\n            \n            // 调换一下 x、y，这样横着看是 (0,0),(0,1),(0,2),个人感觉比较舒服……\n            res.push([j, i, arr[i][j]]);\n        }\n    }\n    return res;\n}\n\n// 使用 conf 配置生成地雷数据\nvar minesData = generateMinesData(conf.sizeX, conf.sizeY, conf.mines);\n\n// 使用地雷数据生成 heatmap数据\nvar heatmapData = covertData(minesData);\n\n\n// option设置，通过回调函数自定义标签文字（P 代表标记，* 代表地雷，数字代表周围地雷数）和砖块颜色（浅色代表翻开）\nfunction getOption(data) {\n    option = {\n        title: {\n            text: '扫雷游戏',\n            subtext: '剩余雷数：' + minesLeft\n        },\n        tooltip: {\n            show: false\n        },\n        grid: {\n            width: '80%',\n            height: '80%',\n            left: '10px',\n            top: '15%'\n        },\n        xAxis: {\n            show: false,\n            type: 'category',\n            splitArea: {\n                show: true\n            }\n        },\n        yAxis: {\n            show: false,\n            type: 'category',\n            splitArea: {\n                show: true\n            }\n        },\n        series: [{\n            id: 'btnPanel',\n            type: 'heatmap',\n            label: {\n                normal: {\n                    show: true,\n                    color: '#000',\n                    \n                    // 回调函数自定义标签文字\n                    formatter: function(params) {\n                        if (params.data[2] >= 20) {\n                            return 'P';\n                        } else if (params.data[2] >= 10 || params.data[2] === 0) {\n                            return '';\n                        } else if (params.data[2] === 9) {\n                            return '*';\n                        } else {\n                            return params.data[2];\n                        }\n                    }\n                }\n            },\n            itemStyle: {\n                \n                // 回调函数自定义砖块颜色\n                color: function(params) {\n                    if (params.data[2] >= 10) {\n                        return '#ddd';\n                    }\n                    return '#fff';\n                },\n                borderColor: '#AAA',\n                borderWidth: 2\n            },\n            data: data\n        }]\n    };\n    return option;\n}\n\n\n// 渲染图表\nmyChart.setOption(getOption(heatmapData));\n\n\n// 点击热力图时调用 btnClick 函数 (翻开砖块)\nmyChart.on('click', function(params) {\n    if (params.seriesId === 'btnPanel' && flag === 0) {\n\n        // 因为调换了 x、y，这里也要把 params.data[1] 放在前面\n        btnClick(params.data[1], params.data[0]);\n    }\n});\n\n\n// 按钮点击响应函数\nfunction btnClick(btnX, btnY) {\n\n    // 点中已标记的砖块，不做操作，退出\n    if (minesData[btnX][btnY] > 19) {\n        return;\n    }\n\n    // 如果点中地雷（19），则游戏结束（失败）\n    if (minesData[btnX][btnY] === 19) {\n        flag = 1;\n        minesData[btnX][btnY] -= 10;\n        \n        // 更新地图数据，修改自定义标签规则，把所有地雷显示出来\n        return myChart.setOption({\n            title: {\n                subtext: '游戏结束…'\n            },\n            series: {\n                label: {\n                    formatter: function(params) {\n\n                        if (params.data[2] >= 20) {\n                            return 'P';\n                        } else if (params.data[2] === 9 || params.data[2] === 19) {\n                            return '*';\n                        } else if (params.data[2] >= 10 || params.data[2] === 0) {\n                            return '';\n                        } else {\n                            return params.data[2];\n                        }\n\n                    }\n                },\n                data: covertData(minesData)\n            }\n        });\n\n    // 翻到附近有地雷的砖块，更新 value 值，更新剩余待翻开砖块数，显示数字（更新 heatmap 数据）   \n    } else if (minesData[btnX][btnY] > 10) {\n\n        minesData[btnX][btnY] -= 10;\n        bricksLeft--;\n        \n        // 三元表达式，如果剩余带翻开砖块为 0 则提示胜利，否则正常更新 heatmap 数据\n        bricksLeft === 0 ?\n        myChart.setOption({\n            title:{\n                subtext:'胜利'\n            },\n            series: {\n                data: covertData(minesData)\n            }\n        }) :\n        myChart.setOption({\n            series: {\n                data: covertData(minesData)\n            }\n        });\n\n    // 翻到附近没有地雷的砖块，自动翻开周围的砖块（更新其 value 值），然后更新\n    } else if (minesData[btnX][btnY] === 10) {\n\n        // 调用自动翻开周围砖块的函数\n        autoClick(btnX, btnY);\n        \n        // 三元表达式，如果剩余带翻开砖块为 0 则提示胜利，否则正常更新 heatmap 数据\n        bricksLeft === 0 ?\n        myChart.setOption({\n            title:{\n                subtext:'胜利'\n            },\n            series: {\n                data: covertData(minesData)\n            }\n        }) :\n        myChart.setOption({\n            series: {\n                data: covertData(minesData)\n            }\n        });\n    }\n\n}\n\n// 对 minesData[x][y] 周围的砖块进行递归验证、翻开\nfunction autoClick(x, y) {\n\n    // 定义子函数,翻开某些砖块，并判断该砖块是否需要递归处理，返回 true/false\n    function check(x1, y1) {\n\n        // 如果 minesData[x1] 未定义（目标砖块不存在）则退出\n        if (typeof(minesData[x1]) == 'undefined') {\n            return false;\n        }\n\n        // 如砖块未翻开并且未标记，则翻开判断周围有没有地雷，没有雷返回 true\n        if (minesData[x1][y1] > 10 && minesData[x1][y1] < 20) {\n            minesData[x1][y1] -= 10;\n            bricksLeft--;\n            return false;\n        }\n        \n        if (minesData[x1][y1] === 10) {\n            return true;\n        }\n    }\n\n    // 翻开当前砖块\n    minesData[x][y] -= 10;\n    bricksLeft--;\n\n    // 判断周围砖块，根据情况递归\n    check(x, y + 1) && autoClick(x, y + 1);\n    check(x, y - 1) && autoClick(x, y - 1);\n\n    check(x + 1, y) && autoClick(x + 1, y);\n    check(x - 1, y) && autoClick(x - 1, y);\n\n    check(x + 1, y + 1) && autoClick(x + 1, y + 1);\n    check(x + 1, y - 1) && autoClick(x + 1, y - 1);\n\n    check(x - 1, y + 1) && autoClick(x - 1, y + 1);\n    check(x - 1, y - 1) && autoClick(x - 1, y - 1);\n\n}\n\n\n// 去除默认的鼠标事件\ndocument.oncontextmenu = function() {\n    return false;\n};\n\n// 新加上鼠标右击事件(标记地雷 / 取消标记)\nmyChart.on('contextmenu', function(params) {\n\n    if (params.seriesId === 'btnPanel' && flag === 0) {\n\n        // 如果 value 大于 19 ，将已标记的砖块取消标记\n        if (minesData[params.data[1]][params.data[0]] > 19) {\n            minesData[params.data[1]][params.data[0]] -= 10;\n            minesLeft++;\n        \n        // 或者如果 value 大于等于 10 ，标记砖块\n        } else if (minesData[params.data[1]][params.data[0]] >= 10) {\n            minesData[params.data[1]][params.data[0]] += 10;\n            minesLeft--;\n        }\n        \n        // 更新 heatmap 数据\n        myChart.setOption({\n            title:{\n                subtext: '剩余雷数：' + minesLeft\n            },\n            series: {\n                data: covertData(minesData)\n            }\n        });\n    }\n    console.log(params);\n});","html":"","externalScripts":"","updaterUID":"bd-101698999","theme":"default","layout":"","viewCount":729,"userName":"Z***8","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xqQV7w0IXV.png?v=1560235507146","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-heatmap","title","tooltip"],"customTags":[],"updaterUserName":"Z***8"}}