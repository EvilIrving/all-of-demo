{"status":0,"data":{"cid":"xuwv-ZqhkA","authorUid":"obd-o2-aTjNCXh_ADELOPM4d70VB1G3Oy6I","authorUserName":"衰***命","title":"测试测试","description":"","latestVersion":1,"alwaysLatest":0,"createTime":"2021-07-16T03:03:56.000Z","lastUpdateTime":"2021-07-16T03:03:56.000Z","auth":2,"uid":"obd-o2-aTjNCXh_ADELOPM4d70VB1G3Oy6I","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.1.2","versionCreateTime":"2021-07-16T03:03:56.000Z","code":"var getname = ['1次', '2次', '3次及以上']; //数据点名称\nvar getxlmc = ['全屋定制类', '木门类', '橱柜类'];\nvar getvalue = [3466, 714, 214]; //全屋定制类\nvar getvalue1 = [748, 215, 90]; //木门类\nvar getvalue2 = [316, 37, 4]; //橱柜类\n\nvar getzb = [76.51, 73.91, 50.12]; //全屋定制类\nvar getzb1 = [16.51, 22.26, 21.08]; //木门类\nvar getzb2 = [6.98, 3.83, 0.94]; //橱柜类\nfunction multi_bubbleSort(obj) {\n    let data0 = obj.data0; //横坐标数组\n    let data = new Array(data0.length).fill(0); //定义一组与横坐标数组相同大小的且全部为0的数组，用来存储堆积柱状图的和\n    let len = obj.data0.length; //横坐标数组长度\n    for (let k = 0; k < len; k++) {\n        for (let m = 0; m < obj.data1.length; m++) {\n            data[k] = Number(data[k]) + Number(obj.data1[m][k]); //求和，用来排序\n        }\n    }\n\n    for (let i = 0; i < len; i++) {\n        for (let j = 0; j < len - 1 - i; j++) {\n            if (Number(data[j]) < Number(data[j + 1])) {\n                //相邻元素两两对比\n                let temp = data[j + 1]; //元素交换\n                data[j + 1] = data[j];\n                data[j] = temp;\n                let te = obj.data0[j + 1]; //元素交换\n                obj.data0[j + 1] = obj.data0[j];\n                obj.data0[j] = te;\n                for (let m = 0; m < obj.data2.length; m++) {\n                    let tem = obj.data2[m][j + 1];\n                    obj.data2[m][j + 1] = obj.data2[m][j];\n                    obj.data2[m][j] = tem;\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nlet obj = {\n    data0: getname,\n    data1: [getvalue, getvalue1, getvalue2],\n    data2: [getvalue, getvalue1, getvalue2],\n};\n\nlet multi_obj = multi_bubbleSort(obj);\n\noption = {\n    backgroundColor: '#000',\n    grid: {\n        top: '15',\n        right: '150',\n        left: '100',\n        bottom: '15',\n    },\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'none',\n        },\n        backgroundColor: 'rgba(21, 64, 92, 0.5)',\n        formatter: function (params) {\n            var str = ''; //声明一个变量用来存储数据\n            str +=\n                '<span style=\"color:rgba(255, 255, 255, 1);font:13px bold;\">' +\n                params[0].name +\n                '<br>' +\n                params[0].seriesName +\n                ':&nbsp;&nbsp;' +\n                params[0].value +\n                '次&nbsp;&nbsp;' +\n                getzb[params[0].dataIndex] +\n                '%</br>' +\n                params[1].seriesName +\n                ':&nbsp;&nbsp;' +\n                params[1].value +\n                '次&nbsp;&nbsp;' +\n                getzb1[params[1].dataIndex] +\n                '%</br>' +\n                params[2].seriesName +\n                ':&nbsp;&nbsp;' +\n                params[2].value +\n                '次&nbsp;&nbsp;' +\n                getzb2[params[2].dataIndex] +\n                '%</br>';\n\n            return str;\n        },\n    },\n    legend: {\n        type: 'scroll',\n        icon: 'circle',\n        right: '10',\n        top: '0',\n        data: getxlmc,\n        itemGap: 20,\n        itemWidth: 11,\n        itemHeight: 11,\n        textStyle: {\n            fontSize: '13',\n            color: '#A9C1E5',\n        },\n    },\n    yAxis: [\n        {\n            show: true,\n            inverse: true,\n            data: multi_obj.data0,\n            axisLabel: {\n                color: '#C5DCFF',\n                textStyle: {\n                    fontSize: 14,\n                },\n            },\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n        },\n    ],\n    xAxis: [\n        {\n            axisLabel: {\n                show: false,\n            },\n            axisLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            splitLine: {\n                show: false,\n            },\n        },\n    ],\n    //animation: false,\n    series: [\n        {\n            type: 'bar',\n            name: '全屋定制类',\n            data: multi_obj.data2[0],\n            barWidth: '10px',\n            stack: '投诉情况',\n            label: {\n                show: false,\n                position: 'right',\n                color: '#FFFFFF',\n                fontSize: 15,\n                offset: [5, 0],\n            },\n            itemStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(\n                        1,\n                        0,\n                        0,\n                        0,\n                        [\n                            {\n                                offset: 0,\n                                color: '#065ADA', // 0% 处的颜色\n                            },\n                            {\n                                offset: 1,\n                                color: '#22CFF5', // 100% 处的颜色\n                            },\n                        ],\n                        false\n                    ),\n                },\n            },\n            z: 50,\n        },\n        {\n            type: 'bar',\n            name: '木门类',\n            data: multi_obj.data2[1],\n            barWidth: '10px',\n            stack: '投诉情况',\n            label: {\n                show: false,\n                position: 'right',\n                color: '#FFFFFF',\n                fontSize: 15,\n                offset: [5, 0],\n            },\n            itemStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(\n                        0,\n                        0,\n                        1,\n                        0,\n                        [\n                            {\n                                offset: 0,\n                                color: '#2CFFBA', // 0% 处的颜色\n                            },\n                            {\n                                offset: 1,\n                                color: '#1B856D', // 100% 处的颜色\n                            },\n                        ],\n                        false\n                    ),\n                },\n            },\n            z: 40,\n        },\n        {\n            type: 'bar',\n            name: '橱柜类',\n            data: multi_obj.data2[2],\n            barWidth: '10px',\n            stack: '投诉情况',\n            label: {\n                show: false,\n                position: 'right',\n                color: '#FFFFFF',\n                fontSize: 15,\n                offset: [5, 0],\n            },\n            itemStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(\n                        0,\n                        0,\n                        1,\n                        0,\n                        [\n                            {\n                                offset: 0,\n                                color: '#FF7E7C', // 0% 处的颜色\n                            },\n                            {\n                                offset: 1,\n                                color: '#FF6061', // 100% 处的颜色\n                            },\n                        ],\n                        false\n                    ),\n                },\n            },\n            z: 30,\n        },\n    ],\n};\nvar series = option['series'];\nvar fun = function (params) {\n    var datavalue = 0;\n    var datasum = 0;\n    for (var i = 0; i < series.length; i++) {\n        datavalue += series[i].data[params.dataIndex];\n        datasum += getvalue[i] + getvalue1[i] + getvalue2[i];\n    }\n    return datavalue + '次 ' + ((datavalue / datasum) * 100).toFixed(2) + '%';\n};\n\nif (series[series.length - 1]) {\n    series[series.length - 1]['label']['show'] = true;\n    series[series.length - 1]['label']['formatter'] = fun;\n}\n\nmyChart.on('legendselectchanged', function (object) {\n    let one = object.selected.全屋定制类;\n    let two = object.selected.木门类;\n    let three = object.selected.橱柜类;\n\n    //获取option对象\n    let option1 = this.getOption();\n    //清空需要重新渲染的数据\n    option1.yAxis[0].data = [];\n    option1.series[0].data = [];\n    option1.series[1].data = [];\n    option1.series[2].data = [];\n\n    //定义一个对象，data0：X轴坐标数组；data1：二维数组，存legend为true的series数组；data2：二维数组，存储所有的series数组\n    let obj = {\n        data0: getname,\n        data1: [],\n        data2: [getvalue, getvalue1, getvalue2],\n    };\n    //判断legend图例是否为true，是就给对象obj的data1追加相应的series数组\n    if (one) {\n        obj.data1.push(getvalue);\n    }\n    if (two) {\n        obj.data1.push(getvalue1);\n    }\n    if (three) {\n        obj.data1.push(getvalue2);\n    }\n    //调用排序方法，返回排序好的对象\n    let multi_obj = multi_bubbleSort(obj);\n    //给上面清空的数据添加值\n    option1.yAxis[0].data = multi_obj.data0;\n    option1.series[0].data = multi_obj.data2[0];\n    option1.series[1].data = multi_obj.data2[1];\n    option1.series[2].data = multi_obj.data2[2];\n    var b = object.selected, //图例的选中情况，key是图例的name，value是true或false\n        d = []; //选中的series的index列表\n    for (var key in b) {\n        if (b[key]) {\n            //选中的图例\n            for (var i = 0; i < series.length; i++) {\n                var changename = series[i]['name'];\n                if (changename == key) {\n                    d.push(i); //选中的series的index列表\n                }\n            }\n        }\n    }\n\n    var fn = function (params) {\n        var datavalue = 0;\n        var datasum = 0;\n        for (var i = 0; i < d.length; i++) {\n            for (var j = 0; j < series.length; j++) {\n                if (d[i] == j) {\n                    datavalue += series[j].data[params.dataIndex];\n                    datasum += getvalue[i] + getvalue1[i] + getvalue2[i];\n                }\n            }\n        }\n\n        return datavalue + '次 ' + ((datavalue / datasum) * 100).toFixed(2) + '%';\n    };\n\n    for (var j = 0; j < series.length; j++) {\n        series[j]['label']['show'] = false;\n    }\n\n    var l_s = series[d[d.length - 1]]; //选中的series的最后一个\n    if (l_s != null && l_s != '' && l_s != undefined) {\n        l_s['label']['show'] = true; //显示label\n        l_s['label']['formatter'] = fn; //绑定formatter\n    }\n    myChart.setOption(option);\n});\n","html":"","externalScripts":"","updaterUID":"obd-o2-aTjNCXh_ADELOPM4d70VB1G3Oy6I","theme":"","layout":"","viewCount":0,"userName":"衰***命","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xuwv-ZqhkA.png?v=1626404636611","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","tooltip"],"customTags":[],"updaterUserName":"衰***命"}}