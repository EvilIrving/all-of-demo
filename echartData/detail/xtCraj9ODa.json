{"status":0,"data":{"cid":"xtCraj9ODa","authorUid":"obd-oAVghOpMJLc3slFo3Xv9966IOZnFs7D","authorUserName":"日***舞","title":"地图轮播","description":"地图特定地图高亮轮播，鼠标事件交互","latestVersion":1,"alwaysLatest":0,"createTime":"2021-09-03T09:10:16.000Z","lastUpdateTime":"2021-09-03T09:10:16.000Z","auth":2,"uid":"obd-oAVghOpMJLc3slFo3Xv9966IOZnFs7D","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.2.0","versionCreateTime":"2021-09-03T09:10:16.000Z","code":"var uploadedDataURL = \"/asset/get/s/data-1630657618994-LpKky1VZv.json\";\nmyChart.showLoading();\n$.getJSON(uploadedDataURL, function(geoJson) {\n    echarts.registerMap('hangzhou', geoJson);\n    myChart.hideLoading();\n    // 点坐标\n    let geoCoordMap = {\n      '萧山区交通运输局': [120.266934, 30.187366],\n      '富阳区交通运输局': [119.943834, 30.07327],\n      '余杭区交通运输局': [119.99224, 30.343826],\n      '临平区交通运输局': [120.301038, 30.426579],\n      '临安区交通运输局': [119.703838, 30.22169],\n      '桐庐县交通运输局': [119.701737, 29.791497],\n      '建德市交通运输局': [119.300279, 29.483262],\n      '淳安县交通运输局': [119.041705, 29.616495]\n    }\n    // 地图波纹点\n  let mapData = [\n    { name: '萧山区交通运输局'},\n    { name: '富阳区交通运输局'},\n    { name: '余杭区交通运输局'},\n    { name: '临平区交通运输局'},\n    { name: '临安区交通运输局'},\n    { name: '桐庐县交通运输局'},\n    { name: '建德市交通运输局'},\n    { name: '淳安县交通运输局'}\n  ]\n  let maps = [\n    { name: '萧山区'},\n    { name: '富阳区'},\n    { name: '余杭区'},\n    { name: '临平区'},\n    { name: '临安区'},\n    { name: '桐庐县'},\n    { name: '建德市'},\n    { name: '淳安县'}\n  ]\n  let index = 0\n  let series = [];\n  [\n    ['地图点位', mapData]\n  ].forEach(function (item) {\n    series.push({\n      type: 'effectScatter',\n      coordinateSystem: 'geo',\n      zlevel: 2,\n      rippleEffect: {\n        // 涟漪特效\n        period: 5, // 动画时间，值越小速度越快\n        brushType: 'stroke', // 波纹绘制方式 stroke, fill\n        scale: 5 // 波纹圆环最大限制，值越大波纹越大\n      },\n      Symbol: 'circle',\n      symbolSize: 8,\n      itemStyle: {\n        normal: {\n          show: true,\n          color: '#f00f00'\n        },\n        emphasis: {\n          show: true,\n          color: '#f00f00'\n        }\n      },\n      data: item[1].map(function (dataItem) {\n        return {\n          name: dataItem.name,\n          value: geoCoordMap[dataItem.name].concat([dataItem.value])\n        }\n      })\n    })\n  });\n  [\n    ['地图', maps]\n  ].forEach((item) => {\n    series.push({\n      type: 'map',\n      name: '杭州',\n      tooltip: {\n        show: false,\n        trigger: 'item',\n        formatter: '{b}',\n        textStyle: {\n          color: '#ffffff'\n        }\n      },\n      map: 'hangzhou', // 自定义扩展图表类型\n      showLegendSymbol: false,\n      aspectScale: 0.85,\n      zoom: 1.23,\n      itemStyle: {\n        areaColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: '#3FA9FC' // 0%处的颜色\n          },\n          {\n            offset: 1,\n            color: '#1378F8' // 100%处的颜色\n          }\n        ], false),\n        borderColor: '#222222',\n        borderWidth: 0.5\n      },\n      emphasis: {\n        label: {\n          show: true,\n          color: '#9932CC', // 地图字体颜色\n          // 地图字体内容\n          formatter: (params, ticket, callback) => {\n            let data = ''\n            maps.forEach(item => {\n              if (params.name === item.name) {\n                data = `${params.name}交通运输局`\n              }\n            })\n            return data\n          }\n        }\n      },\n      data: item[1].map(function (dataItem) {\n        return {\n          name: dataItem.name,\n          value: dataItem.name.concat([dataItem.value])\n        }\n      })\n    })\n  })\n  const option = {\n    tooltip: {\n      trigger: 'item'\n    },\n    legend: {\n      show: false\n    },\n    position: 'bottom',\n    geo: {\n      tooltip: {\n        show: false,\n        trigger: 'item',\n        formatter: '{b}',\n        textStyle: {\n          color: '#ffffff'\n        }\n      },\n      name: '杭州',\n      map: 'hangzhou', // 自定义扩展图表类型\n      showLegendSymbol: false,\n      aspectScale: 0.85,\n      zoom: 1.23,\n      itemStyle: {\n        areaColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: '#3FA9FC' // 0%处的颜色\n          },\n          {\n            offset: 1,\n            color: '#1378F8' // 100%处的颜色\n          }\n        ], false),\n        borderColor: '#222222',\n        borderWidth: 0.5\n      },\n      emphasis: {\n        label: {\n          show: true,\n          color: '#ffffff',\n          formatter: (params, ticket, callback) => {\n            let data = ''\n            mapData.forEach(item => {\n              if (`${params.name}交通运输局` === item.name) {\n                data = `${params.name}交通运输局`\n              }\n            })\n            return data\n          }\n        },\n        itemStyle: {\n          areaColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: '#EACF3E' // 0%处的颜色\n            },\n            {\n              offset: 1,\n              color: '#DD831F' // 100%处的颜色\n            }\n          ], false),\n          borderColor: '#222222',\n          borderWidth: 0.5\n        }\n      }\n    },\n    series: series\n  }\n  myChart.setOption(option, true)\n  // 清除之前的高亮\n  myChart.dispatchAction({\n    type: 'downplay',\n    seriesIndex: 1\n  })\n  // 当前下标高亮\n  myChart.dispatchAction({\n    type: 'highlight',\n    seriesIndex: 1,\n    dataIndex: index\n  })\n  // 地图高亮轮播\n  mTime = setInterval(() => {\n    // 清除之前的高亮\n    myChart.dispatchAction({\n      type: 'downplay',\n      seriesIndex: 1\n    })\n    index++\n    // 当前下标高亮\n    myChart.dispatchAction({\n      type: 'highlight',\n      seriesIndex: 1,\n      dataIndex: index\n    })\n    if (index >= option.series[1].data.length - 1) {\n      index = -1\n    }\n  }, 2000)\n  myChart.on('mouseover', (params) => {\n    clearInterval(mTime)\n    mTime = null\n    // 清除之前的高亮\n    myChart.dispatchAction({\n      type: 'downplay',\n      seriesIndex: 1\n    })\n    // 当前下标高亮\n    myChart.dispatchAction({\n      type: 'highlight',\n      seriesIndex: 1,\n      dataIndex: params.dataIndex\n    })\n  })\n  myChart.on('mouseout', () => {\n    mTime = setInterval(() => {\n      // 清除之前的高亮\n      myChart.dispatchAction({\n        type: 'downplay',\n        seriesIndex: 1\n      })\n      index++\n      // 当前下标高亮\n      myChart.dispatchAction({\n        type: 'highlight',\n        seriesIndex: 1,\n        dataIndex: index\n      })\n      if (index >= option.series[1].data.length - 1) {\n        index = -1\n      }\n    }, 2000)\n  })\n});","html":"","externalScripts":"","updaterUID":"obd-oAVghOpMJLc3slFo3Xv9966IOZnFs7D","theme":"","layout":"","viewCount":0,"userName":"日***舞","commentCount":0,"starCount":1,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xtCraj9ODa.png?v=1630660216453","isCustomThumbnail":0,"builtinTags":["category-work","geo","legend","series-effectScatter","series-map","tooltip"],"customTags":[],"updaterUserName":"日***舞"}}