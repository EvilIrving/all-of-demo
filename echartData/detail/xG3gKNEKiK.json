{"status":0,"data":{"cid":"xG3gKNEKiK","authorUid":"bd-1231329319","authorUserName":"wjingism","title":"多条可拖动标线","description":"仿示波器效果","latestVersion":1,"alwaysLatest":1,"createTime":"2019-04-23T09:15:39.000Z","lastUpdateTime":"2019-04-23T09:15:39.000Z","auth":2,"uid":"bd-1231329319","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.1","versionCreateTime":"2019-04-23T09:15:39.000Z","code":"// 稍后添加注释\n\nconst CURSOR_COLOR = '#f80';\nconst CURSOR_COLOR2 = '#0cf';\n\nfunction getData() {\n  let t = Date.now();\n  let v = Math.random() * 50 + 300;\n  return Array(100).fill(0).map(() => [(t += 1e5), (v += Math.random() * 25 - 10)]);\n}\n\nfunction getTimeStr(t) {\n  const d = new Date(t);\n  return `${d.getFullYear()}.${d.getMonth()+1}.${d.getDate()} ${`0${d.getHours()}`.slice(-2)}:${`0${d.getMinutes()}`.slice(-2)}:${`0${d.getSeconds()}`.slice(-2)}`\n}\n\nclass Box {\n  constructor(chart) {\n    this.chart = chart;\n    this.cursors = ['x1', 'x2', 'y1', 'y2'];\n    this.box = null;\n    this.value = null;\n    this.yAxisIndex = 0;\n  }\n\n  update() {\n    const w = this.chart.getWidth();\n    const h = this.chart.getHeight();\n    const { left, right, top, bottom } = this.chart.getOption().grid[0];\n    const x1 = left === 'left' ? 0 : left === 'right' ? w : left === 'center' ? w * 0.5 : /%$/.test(left) ? w * 0.01 * parseFloat(left) : left;\n    const x2 = /%$/.test(right) ? w * (1 - 0.01 * parseFloat(right)) : w - right;\n    const y1 = top === 'top' ? 0 : top === 'bottom' ? h : top === 'middle' ? h * 0.5 : /%$/.test(top) ? h * 0.01 * parseFloat(top) : top;\n    const y2 = /%$/.test(bottom) ? h * (1 - 0.01 * parseFloat(bottom)) : h - bottom;\n    const width = x2 - x1;\n    const height = y2 - y1;\n    this.box = { width, height, x1, y1, x2, y2 };\n    if (!this.value) this.value = [0.1 * width, 0.9 * width, 0.9 * height, 0.1 * height];\n    this.chart.setOption({ graphic: [\n      { id: 'box', left: x1, top: y1, width, height },\n      ...this.cursors.map((id, i) => (id[0] === 'y'\n        ? { id, position: [0, (this.value[i] = Math.max(1, Math.min(height - 1, this.value[i])))], width }\n        : { id, position: [(this.value[i] = Math.max(1, Math.min(width - 1, this.value[i]))), 0], height })),\n      ...this.cursors.map(id => (id[0] === 'y'\n        ? { id: `${id}l`, info: id, shape: { x1: 0, x2: width, y1: 0, y2: 0 } }\n        : { id: `${id}l`, shape: { x1: 0, x2: 0, y1: 0, y2: height } })),\n    ] });\n    setTimeout(() => this.displayCursor(), 500);\n  }\n\n  setCursor({ target: { position } = {} }, id) {\n    const i = this.cursors.indexOf(id);\n    if (i < 0) return;\n    const { width, height } = this.box;\n    this.chart.setOption(id[0] === 'y'\n      ? { graphic: [{ id, position: [0, (this.value[i] = Math.max(1, Math.min(height - 1, this.value[i] + position[1])))] }, { id: `${id}l`, position: [0, 0] }] }\n      : { graphic: [{ id, position: [(this.value[i] = Math.max(1, Math.min(width - 1, this.value[i] + position[0]))), 0] }, { id: `${id}l`, position: [0, 0] }] });\n    this.displayCursor();\n  }\n\n  displayCursor() {\n    const { x1, y1 } = this.box;\n    const [va, vb, v1, v2] = this.value;\n    const [a, b] = [va, vb].map(e => this.chart.convertFromPixel('xAxis', e + x1));\n    const [c, d] = [v1, v2].map(e => this.chart.convertFromPixel({ yAxisIndex: this.yAxisIndex }, e + y1));\n    dispVal({ a, b, '1': c, '2': d });\n  }\n}\n\nlet box;\n\nfunction getText(id) {\nreturn id[0] === 'y' \n  ? [{ type: 'text', silent: true, left: -16, top: 'middle', z: 99, style: { text: id[1], fill: '#fff', font: '0.8em sans-serif' } },\n    { type: 'polygon', silent: true, left: -20, top: 'middle', cursor: 'default', z: 98, shape: { points: [[0, 0], [-8, 8], [-20, 8], [-20, -8], [-8, -8]] }, style: { fill: CURSOR_COLOR2 } }]\n  : [{ type: 'text', silent: true, left: 'center', top: -18, z: 99, style: { text: ['a', 'b'][id[1] - 1], fill: '#fff', font: '0.8em sans-serif' } },\n    { type: 'polygon', silent: true, cursor: 'default', z: 98, left: 'center', top: -20, shape: { points: [[0, 0], [8, -8], [8, -20], [-8, -20], [-8, -8]] }, style: { fill: CURSOR_COLOR } }];\n}\n\nfunction getCursor(id) {\n  return {\n    type: 'group', id, bounding: 'raw', position: [0, 0],\n    children: id[0] === 'y'\n      ? [{ id: `${id}l`, type: 'line', z: 99, draggable: true, cursor: 'row-resize', style: { stroke: CURSOR_COLOR2 } }, ...getText(id)]\n      : [{ id: `${id}l`, type: 'line', z: 99, draggable: true, cursor: 'col-resize', style: { stroke: CURSOR_COLOR } }, ...getText(id)],\n    ondrag: e => box.setCursor(e, id),\n  };\n}\n\nconst opt = {\n  grid: {},\n  xAxis: { type: 'time' },\n  yAxis: { type: 'value' },\n  series: [{ type: 'line', showSymbol: false, data: getData() }],\n  graphic: {\n    type: 'group',\n    id: 'box',\n    bounding: 'raw',\n    children: ['x1', 'x2', 'y1', 'y2'].map(getCursor),\n  },\n};\n\nmyChart.setOption(opt);\nbox = new Box(myChart);\nbox.update();\nwindow.addEventListener('resize', () => myChart.resize() + box.update());\n\ndocument.head.appendChild(document.createElement('style')).innerHTML = '#x-result{font-size:13px}b.xtag{font-size:10px;display:inline-block;text-align:center;line-height:16px;width:16px;border-radius:10px;color:#fff;margin-left:5px}b.xdif{margin-left:5px}'\nconst div = document.body.appendChild(document.createElement('div'));\ndiv.id = 'x-result';\ndiv.style = 'position:absolute;bottom:16px;left:40px;right:200px;display:flex;justify-content:space-between';\nconst conf = [ { name: 'a', color: CURSOR_COLOR }, { name: 'b', color: CURSOR_COLOR }, { name: '1', color: CURSOR_COLOR2 }, { name: '2', color: CURSOR_COLOR2 }]\nfunction dispVal(val = {}) {\n  if (!div) return;\n  const r = []\n  if (val.a && val.b) r.push([...['a', 'b'].map(e => `<b class=xtag style=background:${CURSOR_COLOR}>${e}</b> ${getTimeStr(val[e])}`), `<b class=\"xdif\" style=\"color:${CURSOR_COLOR}\">∆</b> ${+((val.b - val.a) * 1e-3).toFixed(3)} 秒`].join(''));\n  if (val['1'] && val['2']) r.push([...['1', '2'].map(e => `<b class=xtag style=background:${CURSOR_COLOR2}>${e}</b> ${+(val[e]).toFixed(3)}`), `<b class=\"xdif\" style=\"color:${CURSOR_COLOR2}\">∆</b> ${+(val['2'] - val['1']).toFixed(3)}`].join(''));\n  div.innerHTML = `<span>${r.join('</span><span>')}</span>`;\n}","html":"","externalScripts":"","updaterUID":"bd-1231329319","theme":"","layout":"","viewCount":399,"userName":"wjingism","commentCount":1,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xG3gKNEKiK.png?v=1556010940073","isCustomThumbnail":1,"builtinTags":["category-work","graphic","grid","series-line"],"customTags":["draggable","graphic"],"updaterUserName":"wjingism"}}