{"status":0,"data":{"cid":"xeHmmt9re0","authorUid":"bd-3476712581","authorUserName":"温***孔","title":"特殊关系图--气泡图","description":"","latestVersion":1,"alwaysLatest":1,"createTime":"2018-12-14T04:13:27.000Z","lastUpdateTime":"2018-12-14T04:13:27.000Z","auth":2,"uid":"bd-3476712581","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.2.0","versionCreateTime":"2018-12-14T04:13:27.000Z","code":"let demo = [\r\n   \r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 1000,\r\n    \"x\":7086,\r\n    \"y\": 10,\r\n    \"q\":1556\r\n    \r\n  },\r\n  \r\n \r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 2000,\r\n    \"x\":7686,\r\n    \"y\":  52,\r\n    \"q\":1956\r\n   \r\n  },\r\n   {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 2000,\r\n    \"x\":1986,\r\n    \"y\": 102,\r\n    \"q\":3556\r\n  },\r\n   {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 4000,\r\n    \"x\":6786,\r\n    \"y\": 384,\r\n    \"q\":5556\r\n  },\r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 3000,\r\n    \"x\":1586,\r\n    \"y\":  200,\r\n    \"q\":4556\r\n    \r\n  },\r\n  {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 3000,\r\n    \"x\":2886,\r\n    \"y\": 250,\r\n    \"q\":4856\r\n  },\r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 4000,\r\n    \"x\":3686,\r\n    \"y\": 334,\r\n    \"q\":5056\r\n   \r\n  },\r\n \r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 5000,\r\n    \"x\":2186,\r\n    \"y\": 390,\r\n    \"q\":4056\r\n  \r\n  },\r\n  {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 5000,\r\n    \"x\":2956,\r\n    \"y\": 540,\r\n    \"q\":5156\r\n  },\r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 6000,\r\n    \"x\":5486,\r\n    \"y\":  330,\r\n    \"q\":4056\r\n    \r\n  },\r\n  {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 1000,\r\n    \"x\":1686,\r\n    \"y\": 60,\r\n    \"q\":2556\r\n  },\r\n  {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 6000,\r\n    \"x\":7586,\r\n    \"y\": 380,\r\n    \"q\":4756\r\n  },\r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 7000,\r\n    \"x\":3486,\r\n    \"y\": 220,\r\n    \"q\":3256\r\n  },\r\n   {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 7000,\r\n    \"x\":3816,\r\n    \"y\": 270,\r\n    \"q\":3856\r\n  },\r\n  {\r\n    \"z\": \"买房人数\",\r\n    \"xz\": 8000,\r\n    \"x\":1486,\r\n    \"y\": 110,\r\n    \"q\":1056\r\n   \r\n  },\r\n   {\r\n    \"z\": \"租房人数\",\r\n    \"xz\": 8000,\r\n    \"x\":5656,\r\n    \"y\": 160,\r\n    \"q\":1956\r\n  }\r\n  \r\n];\r\nlet colors = ['#63bef8'];\r\noption = {\t\r\n\t\r\n\tbackgroundColor:\"#071435\",\r\n\tlegend:{\r\n\t\tright: '4%',\r\n\t\tshow:true,\r\n\t\titemWidth: 10,\r\n\t\titemHeight: 10,\r\n\t\tdata: _ledgend(),\r\n\t\ttextStyle:{\r\n\t\t\tcolor: '#fff',\r\n\t\t\tfontSize:14,\r\n\t\t}\r\n\t},\r\n\tgrid:{\r\n\t\tright:'5%'\r\n\t},\r\n\txAxis: [{\r\n\t\ttype : 'value',\r\n\t\t//data : this._xAxisData(),\r\n\t\tmin: _xDataMin(),\r\n\t\taxisTick: {\r\n\t\t\tshow: false,\r\n\t\t\talignWithLabel: true,   //对齐数据\r\n\t\t},\r\n\t\taxisLabel: { \r\n\t\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t\t\tfontSize: 12,\r\n\t\t\tformatter:function(val){\r\n\t\t\t    return val\r\n\t\t\t},\r\n\t\t\tmargin: 15,\r\n\t\t\tinterval:0\r\n\t\t},\r\n\t\tsplitLine:{\r\n\t\t\tshow: true,\r\n\t\t\talignWithLabel: true,   //对齐数据\r\n\t\t\tlineStyle:{\r\n\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisLine: _axisLine()\r\n\t}\r\n\r\n\t],\r\n\tyAxis: [{\r\n\t\ttype : 'value',\r\n\t\tposition:'left',\r\n\t\tmax:_allDataMax(),\r\n\t\t//scale:true,\r\n\t\taxisLabel: { \r\n\t\t\tcolor: 'rgba(255,255,255,0.8)',\r\n\t\t\tfontSize: 12,\r\n\t\t\tformatter:function(val){\r\n\t\t\t    return val\r\n\t\t\t},\r\n\t\t\tmargin: 15,\r\n\t\t},\r\n\t\tsplitLine: { \r\n\t\t\tshow: true,\r\n\t\t\tlineStyle:{\r\n\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisTick:{\r\n\t\t\tlineStyle:{\r\n\t\t\t\tcolor:'#63bef8',\r\n\t\t\t\twidth:1\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisLine: _axisLine()\r\n\t},{\r\n\t\ttype : 'value',\r\n\t\tposition:\"right\",\r\n\t\tmax:_allDataMax(),\r\n\t\t//scale:true,\r\n\t\taxisLabel: { \r\n\t\t\tshow:false,\r\n\t\t},\r\n\t\tsplitLine: { \r\n\t\t\tshow: false,\r\n\t\t\tlineStyle:{\r\n\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisTick:{\r\n\t\t\tlineStyle:{\r\n\t\t\t\tcolor:'#63bef8',\r\n\t\t\t\twidth:1\r\n\t\t\t}\r\n\t\t},\r\n\t\taxisLine: _axisLine()\r\n\t}\r\n\r\n\t\r\n\t],\r\n\tseries : _seriesData()\r\n\r\n};\r\n\r\nfunction _ledgend(){\r\n\tlet legendDt =  new Set(demo && demo.map(item=>item.z));\r\n\tlet _data = [];\r\n\tif(legendDt){\r\n\t\tfor (let x of legendDt) { \r\n\t\t\t_data.push(x)\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn _data;\r\n}\r\n//x轴最小值\r\nfunction _xDataMin(){\r\n\tlet xData = _xAxisData(),\r\n\t\ttempArr = xData.concat();\r\n\t\tmin =  tempArr.sort(_sortNumber).slice(0,1);  \r\n\t\r\n\treturn min[0]\r\n}\r\n\r\n//数据最大值 \r\nfunction _allDataMax(){\r\n\tlet arr = [];\r\n\tlet dataKinds = _ledgend(),\r\n\t\tkinds = dataKinds.length;  //数据种类数n\r\n\tdemo && demo.map((item)=>{\r\n\t\tfor(var n=0;n<kinds;n++){\r\n\t\t\tlet v = n+1;\r\n\t\t\tarr.push(item.y);\r\n\t\t}\r\n\t\t\r\n\t})\r\n\tlet max = arr.sort(_sortNumberMax).splice(0,1),\r\n\t\tlg = parseInt(max[0]).toString().length,\r\n\t\tlev = (parseInt(max[0]).toString()).split(\"\")[0],\r\n\t\tx = parseInt(lev)+2;\r\n\tlet _maxFinal = x*Math.pow(10, lg-1);  //按照数量级计算出合适的最大值\r\n\t\r\n\treturn _maxFinal;\r\n\t\r\n}\r\n//排序不去重\r\nfunction _sortNumber(a,b){\r\n\treturn a-b\r\n}\r\nfunction _sortNumberMax(a,b){\r\n\treturn b-a\r\n}\r\n\r\nfunction _seriesData(){\r\n\tlet colorsArr = _colors(),\r\n\t\tcolorSys = _colorSys();\r\n\tlet dataKinds = _ledgend(),\r\n\t\tdataLg =demo.length,\r\n\t\tkinds = dataKinds.length;  \r\n\tlet _xData = _xAxisData();\r\n\tlet result = [];  \r\n\t\r\n\tlet obj = {};\r\n    demo.forEach((item, i) => {\r\n\t\t!obj[item.z] ? obj[item.z] = [item] : obj[item.z].push(item);\r\n\t})\t\r\n\t\r\n\t//气泡item\r\n\tfor(var i=0;i<kinds;i++){\r\n\t\tlet _data = obj[dataKinds[i]],\r\n\t\t\ttempArr = [];\r\n\t\tfor(var k=0;k<dataLg;k++){\r\n\t\t\tlet _dt = _xData[k];\r\n\t\t\t\r\n\t\t\t_data.map((item)=>{\r\n\t\t\t\tif(item.xz === _dt){\r\n\t\t\t\t\ttempArr.push([item.x,item.y,item.q])\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\t\r\n\t\t}\r\n\t\tresult.push(tempArr)\r\n\t\t\r\n\t}\r\n\r\n\t//插入最大值数组，画T\r\n\tlet _max = _allDataMax(),lineData = [];\r\n\t_xData && _xData.forEach((v)=>{\r\n\t\tlineData.push([v,_max]);\r\n\t})\r\n\tresult.push(lineData);\r\n\t\r\n\t//计算气泡大小\r\n\tlet lg = parseInt(_max).toString().length,\r\n\t\titemRatio = Math.pow(10, lg-1);\r\n\t\r\n\t//创建series\r\n\tlet seriesArr = [];\r\n\tlet _svg = _svgIcon();\r\n\tresult && result.map((item,ind)=>{\r\n\t\tif(ind === result.length-1){\r\n\t\t\tseriesArr.push({\r\n\t\t\t\tname: '固定T',\r\n\t\t\t\ttype: 'scatter',\r\n\t\t\t\tyAxisIndex:1,\r\n\t\t\t\tsymbol:_svg,\r\n\t\t\t\tsymbolSize: 10,\r\n\t\t\t\titemStyle:{\r\n\t\t\t\t\tnormal:{\r\n\t\t\t\t\t\tcolor:\"#63bef8\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsymbolOffset:[0,'40%'],\r\n\t\t\t\tdata:item\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tseriesArr.push({\r\n\t\t\t\tname: dataKinds[ind],\r\n\t\t\t\ttype: 'scatter',\r\n\t\t\t\tsymbolSize: function(data){\r\n\t\t\t\t\t//return Math.sqrt(data[2])/5e2;\r\n\t\t\t\t\treturn data[2]/itemRatio\r\n\t\t\t\t},\r\n\t\t\t\titemStyle:{\r\n\t\t\t\t\tnormal:{\r\n\t\t\t\t\t\tshadowBlur: 20,\r\n\t\t                shadowColor: colorSys[ind],\r\n\t\t                opacity:0.6,\r\n\t\t                shadowOffsetY: 4,\r\n\t\t                color:colorsArr[ind]\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdata: item\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t})\r\n\t\r\n\treturn seriesArr;\r\n\t\r\n}\r\n\r\nfunction _xAxisData() {\r\n\tlet dt = new Set(demo && demo.map(item => item.xz));\r\n\tlet _data = [];\r\n\tif(dt){\r\n\t\tfor (let x of dt) { \r\n\t\t\t_data.push(x)\r\n\t\t}\r\n\t}\r\n\t\r\n\tlet tempArr = _data.concat();\r\n\t\tmin =  tempArr.sort(_sortNumber);  \r\n\t\r\n\t//scatter横轴是value，需要排序，避免返回数据顺序错乱的bug\r\n\treturn min\r\n\t\r\n}\r\n\t\r\nfunction _axisLine() {\r\n\treturn {\r\n\t\tshow: false,  //不显示\r\n\t\tlineStyle: {\r\n\t\t\tcolor: '#3398DB', //坐标轴线颜色\r\n\t\t\twidth: 2\r\n  \t\t}\r\n\t}\r\n}\r\nfunction _svgIcon(){\r\n\tlet src = \"path://M851.968 167.936l0 109.568-281.6 0 0 587.776-116.736 0 0-587.776-281.6 0 0-109.568 679.936 0z\";\r\n\treturn src;\r\n}\r\n\r\nfunction _colorSys(){\r\n\treturn ['#0ab484','#1355c7','#F5A559','#D62E56'];\r\n}\r\nfunction _colors(){\r\n\treturn [\r\n\t\tnew this.echarts.graphic.LinearGradient(0.4, 0.3,0, 1, \r\n\t\t[\r\n\t\t\t{offset: 0,color: '#8ffdde'  }, // 0% 处的颜色 \r\n\t\t\t{offset: 1, color: '#0ab484' } // 100% 处的颜色\r\n\t\t], false),\r\n\t\tnew this.echarts.graphic.LinearGradient(0.4, 0.3,0, 1, \r\n\t\t[\r\n\t\t\t{offset: 0,color: '#5790f4'  }, // 0% 处的颜色 \r\n\t\t\t{offset: 1, color: '#1355c7' } // 100% 处的颜色\r\n\t\t], false),\r\n\t\tnew this.echarts.graphic.LinearGradient(0.4, 0.3,0, 1, \r\n\t\t[\r\n\t\t\t{offset: 0,color: '#f6973d'  }, // 0% 处的颜色 \r\n\t\t\t{offset: 1, color: '#F5A559' } // 100% 处的颜色\r\n\t\t], false),\r\n\t\tnew this.echarts.graphic.LinearGradient(0.4, 0.3,0, 1, \r\n\t\t[\r\n\t\t\t{offset: 0,color: '#e40036'  }, // 0% 处的颜色 \r\n\t\t\t{offset: 1, color: '#D62E56' } // 100% 处的颜色\r\n\t\t], false),\r\n\t\t\r\n\t]\r\n}\r\n","html":"","externalScripts":"","updaterUID":"bd-3476712581","theme":"","layout":"","viewCount":1571,"userName":"温***孔","commentCount":0,"starCount":11,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xeHmmt9re0.png?v=1544760807288","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-scatter"],"customTags":[],"updaterUserName":"温***孔"}}