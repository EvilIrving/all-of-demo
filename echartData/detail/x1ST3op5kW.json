{"status":0,"data":{"cid":"x1ST3op5kW","authorUid":"bd-3172106163","authorUserName":"m***3","title":"多样折线图","description":"主要是其中有两条线的绘制数据和显示数不是同一个,绘制是一个数据,显示是其他数据","latestVersion":5,"alwaysLatest":1,"createTime":"2020-07-13T08:05:32.000Z","lastUpdateTime":"2020-07-13T08:05:32.000Z","auth":2,"uid":"bd-3172106163","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-17T06:15:00.000Z","code":"//定义颜色样式\nlet colorCost = [\n    '#13b5b1',\n    '#00b7ee',\n    '#9887ef',\n    '#8f82bc',\n    '#f29b76',\n    '#b93ef9',\n    '#00a0e9',\n    '#448aca',\n    '#5c63e7',\n    '#f39800',\n    '#2090ef',\n    '#fff100',\n    '#05ffff',\n    '#008ce3',\n    '#72c4f9',\n    '#5935ff',\n]\n//折线数据\nvar stepDataArr = [{\n        \"NO\": \"0\",\n        \"wetTemperature\": \"37.00\", //第一条线的数据\n        \"dryTemperature\": \"38\", //第二条线的数据\n        \"hoursLabel\": \"6.00\", //第三条线实际显示的数据\n        \"hoursY\": \"29.00\", //第三条线绘制的数据\n        \"wetTemperature_set\": \"36\", //第四条线的数据\n        \"dryTemperature_set\": \"36\", //第五条线的数据\n        \"hoursY_set\": \"24\", //第六条线的绘制数据\n        \"hoursLabel_set\": \"0.00\", //第六条线实际的显示数据\n        \"Cur_Start_No\": 0, //当前阶段的起始点\n        \"Cur_End_No\": 1 //当前阶段的终结点\n    },\n    {\n        \"NO\": \"1\",\n        \"wetTemperature\": \"37.00\",\n        \"dryTemperature\": \"38\",\n        \"hoursLabel\": \"16.00\",\n        \"hoursY\": \"29.00\",\n        \"wetTemperature_set\": \"36\",\n        \"dryTemperature_set\": \"36\",\n        \"hoursY_set\": \"24\",\n        \"hoursLabel_set\": \"6.00\"\n    },\n    {\n        \"NO\": \"2\",\n        \"wetTemperature\": \"37.00\",\n        \"dryTemperature\": \"40\",\n        \"hoursLabel\": \"4.00\",\n        \"hoursY\": \"29.00\",\n        \"wetTemperature_set\": \"37\",\n        \"dryTemperature_set\": \"38\",\n        \"hoursY_set\": \"25\",\n        \"hoursLabel_set\": \"4.00\"\n    },\n    {\n        \"NO\": \"3\",\n        \"wetTemperature\": \"37.00\",\n        \"dryTemperature\": \"40\",\n        \"hoursLabel\": \"18.00\",\n        \"hoursY\": \"29.00\",\n        \"wetTemperature_set\": \"37\",\n        \"dryTemperature_set\": \"38\",\n        \"hoursY_set\": \"25\",\n        \"hoursLabel_set\": \"18.00\"\n    },\n    {\n        \"NO\": \"4\",\n        \"wetTemperature\": \"36.00\",\n        \"dryTemperature\": \"42\",\n        \"hoursLabel\": \"4.00\",\n        \"hoursY\": \"28.00\",\n        \"wetTemperature_set\": \"38\",\n        \"dryTemperature_set\": \"40\",\n        \"hoursY_set\": \"26\",\n        \"hoursLabel_set\": \"6.00\"\n    },\n    {\n        \"NO\": \"5\",\n        \"wetTemperature\": \"36.00\",\n        \"dryTemperature\": \"42\",\n        \"hoursLabel\": \"22.00\",\n        \"hoursY\": \"28.00\",\n        \"wetTemperature_set\": \"38\",\n        \"dryTemperature_set\": \"40\",\n        \"hoursY_set\": \"26\",\n        \"hoursLabel_set\": \"38.00\"\n    }\n];\n//处理等到的数据--六条数据线,其中时间的两条数据线绘制数据是一个值,显示数据是另外一个值\n//其中三条是虚线\n//一条时间数据线显示特殊处理\n//一条添加高亮显示---显示当前所在阶段\nvar xData = []; //x轴数据\nvar dryData = []; //温度1\nvar wetData = []; //温度2\nvar hourData = []; //时间\nvar drySetData = []; //标准温度1\nvar wetSetData = []; //标准温度2\nvar hourSetData = []; //标准时长\nstepDataArr.map((item, index) => {\n    xData.push(item.NO); //x轴数据\n    dryData.push(item.dryTemperature); //温度1\n    wetData.push(item.wetTemperature); //温度2\n    hourData.push({\n        value: item.hoursY,\n        label: item.hoursLabel\n    });\n    drySetData.push(item.dryTemperature_set); //标准温度1\n    wetSetData.push(item.wetTemperature_set); //标准温度2\n    hourSetData.push({\n        value: item.hoursY_set,\n        label: item.hoursLabel_set\n    }); //标准时长\n});\nvar allLineData = []; //线的数据\nallLineData.push(\n    dryData,\n    wetData,\n    hourData,\n    drySetData,\n    wetSetData,\n    hourSetData\n);\nconsole.log(allLineData);\nvar lendName = [\n    '温度1',\n    '温度2',\n    '时间',\n    '标准温度1',\n    '标准温度2',\n    '标准时长',\n];\nvar minStep = stepDataArr[0].Cur_Start_No;\nvar maxStep = stepDataArr[0].Cur_End_No;\n//将处理好的数据传入绘制折线图\n//echartsData('stepEchart', xData, lendName, allLineData, minStep, maxStep)\n\nvar allData = []; //serise数据部分\n//处理得到的数据\nallLineData.map((item, index) => {\n    if (index === 0 || index === 1) {\n        //当前阶段数据在这个里面显示\n        allData.push({\n            name: lendName[index],\n            type: 'line',\n            // step: 'step',//阶梯图\n            symbol: 'circle',\n            symbolSize: 4,\n            sampling: 'average',\n            itemStyle: {\n                normal: {\n                    color: colorCost[index],\n                },\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: [-30, 10],\n                },\n            },\n            markArea: { //绘制当前阶段--高亮显示\n                data: [\n                    [{\n                            name: '当前阶段',\n                            xAxis: minStep,\n                        },\n                        {\n                            xAxis: maxStep,\n                        },\n                    ],\n                ],\n            },\n            zlevel: 1,\n            data: item,\n        });\n    } else if (index == 2) {\n        //时间的显示数据需要特殊处理\n        allData.push({\n            name: lendName[index],\n            type: 'line',\n            // step: 'step',\n            symbol: 'circle',\n            symbolSize: 4,\n            sampling: 'average',\n            itemStyle: {\n                normal: {\n                    color: colorCost[index],\n                },\n            },\n            label: { //处理现实的文字,实际显示的内容和绘制线是两个内容\n                normal: {\n                    show: true,\n                    position: [-30, -20],\n                    formatter: function(params) {\n                        return '{color1|' + params.data.label + '}{color2| h }';\n                    },\n                    rich: { //定义颜色样式\n                        color1: {\n                            color: '#fff',\n                            backgroundColor: '#108eff',\n                            borderColor: '#796aee',\n                            border: 1,\n                            lineHeight: 18,\n                            height: 18,\n                            padding: [0, 3, 0, 3],\n                            borderWidth: 1,\n                            borderRadius: [3, 0, 0, 3],\n                        },\n                        color2: {\n                            color: '#fff',\n                            backgroundColor: '#796aee',\n                            borderColor: '#796aee',\n                            lineHeight: 18,\n                            height: 18,\n                            borderWidth: 1,\n                            borderRadius: [0, 3, 3, 0],\n                            padding: [0, 2, 0, 1],\n                        },\n                    },\n                },\n            },\n            zlevel: 1,\n            data: item,\n        });\n    } else if (index == 5) {\n        allData.push({\n            name: lendName[index],\n            type: 'line',\n            // step: 'step',\n            symbol: 'circle',\n            symbolSize: 4,\n            sampling: 'average',\n            itemStyle: {\n                normal: {\n                    color: colorCost[index],\n                },\n            },\n            lineStyle: { //绘制线的类型是否是实线\n                width: 3,\n                type: 'dotted',\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: [10, 10],\n                    formatter: function(params) {\n                        return params.data.label + 'h';\n                    },\n                },\n            },\n            zlevel: 1,\n            data: item,\n        });\n    } else {\n        allData.push({\n            name: lendName[index],\n            type: 'line',\n            // step: 'step',\n            symbol: 'circle',\n            symbolSize: 4,\n            sampling: 'average',\n            itemStyle: {\n                normal: {\n                    color: colorCost[index],\n                },\n            },\n            lineStyle: {\n                width: 1,\n                type: 'dashed',\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: [-30, 10],\n                },\n            },\n            zlevel: 1,\n            data: item,\n        });\n    }\n});\n\noption = {\n    backgroundColor: '#fff',\n    legend: {\n        //图例\n        textStyle: {\n            color: '#666',\n        },\n        itemGap: 5,\n        //orient: 'vertical',\n        x: 'right',\n        y: 'top',\n        data: lendName,\n    },\n    animation: false,\n    tooltip: {\n        trigger: 'axis',\n        formatter: function(params) { //划过之后显示的内容--params是当前点的所有线的数据\n            //console.log(params)\n            let allHtml = `<div>gm温度情况gm[${params[0].axisValue}]</div>`\n            params.map((item, index) => {\n                allHtml += `<div>\n          <span class=\"showIcon\" style=\"width:10px;height:10px;border-radius:10px;background:${item.color}\"></span>\n          ${\n            item.data.label\n              ? item.seriesName + ': ' + item.data.label + 'h'\n              : item.seriesName + ': ' + item.value + '℃'\n          }\n        </div>`\n            })\n            return allHtml\n        },\n    },\n    toolbox: {\n        left: 'center',\n        itemSize: 10,\n        top: 55,\n    },\n    xAxis: {\n        data: xData,\n        //boundaryGap: false,//是否起始点就显示数据\n        axisPointer: {\n            snap: true,\n            lineStyle: {\n                color: '#004E52',\n                opacity: 0.5,\n                width: 2,\n            },\n        },\n        axisLabel: {\n            //轴线文字\n            show: true,\n            textStyle: {\n                fontSize: '10',\n                color: '#666',\n            },\n            // interval: 0,\n            // rotate: 40,\n        },\n        axisLine: {\n            //轴线颜色\n            lineStyle: {\n                color: '#d3d3d3',\n            },\n        },\n    },\n    yAxis: {\n        type: 'value',\n        // axisTick: {\n        //   inside: false,\n        // },\n        min: 19, //y轴最小数据\n        splitLine: {\n            show: true,\n            lineStyle: {\n                //网格颜色\n                color: ['#e9e9e9'],\n                width: 1,\n                type: 'dashed',\n            },\n        },\n        axisLabel: {\n            //轴线文字\n            show: true,\n            textStyle: {\n                fontSize: '10',\n                color: '#666',\n            },\n            // interval: 0,\n            // rotate:40,\n            // inside: false,\n            formatter: '{value}\\n',\n        },\n        //z: 10,\n        axisLine: {\n            //轴线颜色\n            lineStyle: {\n                color: '#d3d3d3',\n            },\n        },\n    },\n    grid: {\n        top: 60,\n        left: 35,\n        right: 10,\n    },\n    // dataZoom: [\n    //   //横向滚动条\n    //   {\n    //     type: 'inside',\n    //     throttle: 50,\n    //     show: true,\n    //     start: 0,\n    //     end: 60,\n    //   },\n    //   {\n    //     type: 'slider',\n    //     start: 00,\n    //     end: 60,\n    //   },\n    // ],\n    series: allData,\n};","html":"","externalScripts":"","updaterUID":"bd-3172106163","theme":"","layout":"","viewCount":1835,"userName":"m***3","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x1ST3op5kW.png?v=1594966500919","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","markArea","series-line","toolbox","tooltip"],"customTags":[],"updaterUserName":"m***3"}}