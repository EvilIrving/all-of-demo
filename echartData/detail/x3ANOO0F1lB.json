{"status":0,"data":{"cid":"x3ANOO0F1lB","authorUid":"obd-oN6D3qfp-72Q3GmepBJ4XZpEj5XIyCI","authorUserName":"b***n","title":"两个地方历年不同季度数据对比","description":"","latestVersion":5,"alwaysLatest":1,"createTime":"2021-03-31T09:07:45.000Z","lastUpdateTime":"2021-03-31T09:07:45.000Z","auth":2,"uid":"obd-oN6D3qfp-72Q3GmepBJ4XZpEj5XIyCI","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.8.0","versionCreateTime":"2021-04-09T12:49:05.000Z","code":"let listAry = [{\r\n        \"NF\": \"2019\",\r\n        \"DATA\": [{\r\n                \"CZID\": \"1\",\r\n                \"CZMC\": \"北京街道\",\r\n                \"DATA\": [{\r\n                    \"CZID\": \"1\",\r\n                    \"NF\": \"2019\",\r\n                    \"DYCYSR\": 14493.0, //第一产业\r\n                    \"DECYSR\": 316955.0, //第二产业\r\n                    \"DSCYSR\": 276547.0 //第三产业\r\n                }]\r\n            },\r\n            {\r\n                \"CZID\": \"2\",\r\n                \"CZMC\": \"南京镇\",\r\n                \"DATA\": [{\r\n                    \"CZID\": \"2\",\r\n                    \"NF\": \"2019\",\r\n                    \"DYCYSR\": 77712.0,\r\n                    \"DECYSR\": 2187269.0,\r\n                    \"DSCYSR\": 544368.0\r\n                }]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"NF\": \"2018\",\r\n        \"DATA\": [{\r\n            \"CZID\": \"2\",\r\n            \"CZMC\": \"南京镇\",\r\n            \"DATA\": [{\r\n                \"CZID\": \"2\",\r\n                \"NF\": \"2018\",\r\n                \"DYCYSR\": 69289.0,\r\n                \"DECYSR\": 1983189.0,\r\n                \"DSCYSR\": 559546.0\r\n            }]\r\n        }]\r\n    }\r\n]\r\n\r\nvar emphasisStyle = {\r\n    itemStyle: {\r\n        shadowBlur: 10,\r\n        shadowColor: 'rgba(255,255,255,1)'\r\n    }\r\n};\r\n\r\n\r\nlet yAxisData = [];\r\nlet legendList = [{\r\n        name: \"第一产业\",\r\n        color: \"#ffc580\",\r\n        leftList: [],\r\n        rightList: [],\r\n    },\r\n    {\r\n        name: \"第二产业\",\r\n        color: \"#00bfbf\",\r\n        leftList: [],\r\n        rightList: [],\r\n    },\r\n    {\r\n        name: \"第三产业\",\r\n        color: \"#8080ff\",\r\n        leftList: [],\r\n        rightList: [],\r\n    },\r\n];\r\n\r\n// 遍历 返回值 和 图例 将 返回值的数据放入到 图例里面\r\nlistAry.map((item) => {\r\n    yAxisData.push(item.NF);\r\n    // 获取列数据\r\n    legendList.map((itemInner, indexInner) => {\r\n        // listAry 遍历两遍   每一次 legendList 执行三遍\r\n        switch (indexInner) {\r\n            case 0: //处理 第一产业数据\r\n                // 某一年两个地点 只有 一个地点 有数据\r\n                if (item.DATA.length == 1) {\r\n                    if (item.DATA[0].CZMC == \"北京街道\") {\r\n                        itemInner.leftList.push(item.DATA[0].DATA[0].DYCYSR);\r\n                        itemInner.rightList.push(0);\r\n                    } else {\r\n                        itemInner.leftList.push(0);\r\n                        itemInner.rightList.push(item.DATA[0].DATA[0].DYCYSR);\r\n                    }\r\n                } else {\r\n                    // 某一年两个地点 都有数据\r\n                    itemInner.leftList.push(item.DATA[0].DATA[0].DYCYSR);\r\n                    itemInner.rightList.push(item.DATA[1].DATA[0].DYCYSR);\r\n                }\r\n                break;\r\n            case 1: //处理 第二产业数据\r\n                if (item.DATA.length == 1) {\r\n                    if (item.DATA[0].CZMC == \"北京街道\") {\r\n                        itemInner.leftList.push(item.DATA[0].DATA[0].DECYSR);\r\n                        itemInner.rightList.push(0);\r\n                    } else {\r\n                        itemInner.leftList.push(0);\r\n                        itemInner.rightList.push(item.DATA[0].DATA[0].DECYSR);\r\n                    }\r\n                } else {\r\n                    itemInner.leftList.push(item.DATA[0].DATA[0].DECYSR);\r\n                    itemInner.rightList.push(item.DATA[1].DATA[0].DECYSR);\r\n                }\r\n                break;\r\n            case 2: //处理 第三产业数据\r\n                if (item.DATA.length == 1) {\r\n                    if (item.DATA[0].CZMC == \"北京街道\") {\r\n                        itemInner.leftList.push(item.DATA[0].DATA[0].DSCYSR);\r\n                        itemInner.rightList.push(0);\r\n                    } else {\r\n                        itemInner.leftList.push(0);\r\n                        itemInner.rightList.push(item.DATA[0].DATA[0].DSCYSR);\r\n                    }\r\n                } else {\r\n                    itemInner.leftList.push(item.DATA[0].DATA[0].DSCYSR);\r\n                    itemInner.rightList.push(item.DATA[1].DATA[0].DSCYSR);\r\n                }\r\n                break;\r\n        }\r\n    });\r\n});\r\n\r\nconsole.log(\"legendList\", legendList)\r\nconsole.log(\"yAxisData\", yAxisData)\r\nlet maxNum = 0; //  计算出 每一行的 和的最大值\r\nlet sumList = [];\r\n// 计算出 每一行的 和\r\nlistAry.map((item) => {\r\n    item.DATA.map((itemInner) => {\r\n        let obj = itemInner.DATA[0];\r\n        let sum = obj.DYCYSR + obj.DECYSR + obj.DSCYSR;\r\n        itemInner.total = sum;\r\n        sumList.push(sum);\r\n    });\r\n});\r\n\r\nconsole.log(\"listAry\", listAry)\r\nconsole.log(\"sumList\", sumList)\r\nmaxNum = Math.max(...sumList) + 200;\r\nlet bgLeft = [{\r\n    name: \"进度条背景\",\r\n    type: \"bar\",\r\n    stack: \"1\",\r\n    data: [],\r\n      \r\n    barWidth: 25,\r\n    itemStyle: {\r\n        color: \"#0b2940\",\r\n    },\r\n}, ];\r\nlet bgRight = [{\r\n    name: \"进度条背景\",\r\n    type: \"bar\",\r\n    stack: \"2\",\r\n    xAxisIndex: 2,\r\n    yAxisIndex: 2,\r\n    data: [],\r\n    barWidth: 25,\r\n    itemStyle: {\r\n        color: \"#0b2940\",\r\n    },\r\n}, ];\r\n// 构造左右 总和 数组 -> 将每一行的总和  放到数组-> 为了 获取背景的长度\r\nlet totalList = [];\r\nyAxisData.map((item) => {\r\n    let obj = {\r\n        leftTotal: 0,\r\n        rightTotal: 0,\r\n    };\r\n    totalList.push(obj);\r\n});\r\n\r\n\r\nconsole.log(\"totalList\", totalList)\r\nlistAry.map((item, index) => {\r\n    if (item.DATA.length == 1) {\r\n        if (item.DATA[0].CZMC == \"北京街道\") {\r\n            totalList[index].leftTotal = item.DATA[0].total;\r\n            totalList[index].rightTotal = 0;\r\n        } else {\r\n            totalList[index].leftTotal = 0;\r\n            totalList[index].rightTotal = item.DATA[0].total;\r\n        }\r\n    } else {\r\n        totalList[index].leftTotal = item.DATA[0].total;\r\n        totalList[index].rightTotal = item.DATA[1].total;\r\n    }\r\n});\r\ntotalList.map((item) => {\r\n    bgLeft[0].data.push(maxNum - item.leftTotal);\r\n    bgRight[0].data.push(maxNum - item.rightTotal);\r\n    // bgLeft[0].data.push(maxNum);\r\n    // bgRight[0].data.push(maxNum);\r\n});\r\nconsole.log(\"bgLeft\", bgLeft)\r\nconsole.log(\"bgRight\", bgRight)\r\n\r\nlet legend = [];\r\nlet seriesData = [];\r\nlet seriesDataLeft = [];\r\nlet seriesDataRight = [];\r\n// 拼凑数据\r\nlegendList.map((item) => {\r\n    legend.push(item.name);\r\n    let objLeft = {\r\n        name: item.name,\r\n        type: \"bar\",\r\n        barWidth: 25,\r\n        emphasis: emphasisStyle,\r\n        stack: \"1\",\r\n        itemStyle: {\r\n            normal: {\r\n                color: item.color,\r\n            },\r\n        },\r\n        label: {\r\n            normal: {\r\n                show: false,\r\n            },\r\n        },\r\n        data: item.leftList,\r\n    };\r\n    let objRight = {\r\n        name: item.name,\r\n        type: \"bar\",\r\n        xAxisIndex: 2,\r\n        yAxisIndex: 2,\r\n        barWidth: 25,\r\n        emphasis: emphasisStyle,\r\n        stack: \"2\",\r\n        z: 100,\r\n        itemStyle: {\r\n            normal: {\r\n                color: item.color,\r\n            },\r\n        },\r\n        data: item.rightList,\r\n    };\r\n    seriesDataLeft.push(objLeft);\r\n    seriesDataRight.push(objRight);\r\n});\r\n\r\nconsole.log(\"seriesDataLeft\", seriesDataLeft)\r\nconsole.log(\"seriesDataRight\", seriesDataRight)\r\nseriesData = [\r\n    ...seriesDataLeft,\r\n    ...bgLeft,\r\n    ...seriesDataRight,\r\n    ...bgRight,\r\n];\r\n\r\nconsole.log(\"seriesData\", seriesData)\r\nlet textColor = \"#fff\";\r\nlet lineColor = \"rgba(255,255,255,0.2)\";\r\n\r\nvar option = {\r\n    baseOption: {\r\n        backgroundColor: '#080b30',\r\n        timeline: {\r\n            show: false,\r\n            top: 0,\r\n            data: [],\r\n        },\r\n        tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n                type: \"none\",\r\n            },\r\n            textStyle: {\r\n                align: \"left\",\r\n            },\r\n            formatter: (params) => {\r\n                let name = \"\";\r\n                if (params[0].axisIndex == 0) {\r\n                    name = \"北京\";\r\n                } else {\r\n                    name = \"南京\";\r\n                }\r\n                let str = `${name} ${params[0].name}<br/>`;\r\n                params.map((item, index) => {\r\n                    if (item.seriesName != \"进度条背景\") {\r\n                        str += `${item.marker}${item.seriesName} ${item.value} 万元<br/>`;\r\n                    }\r\n                });\r\n                return str;\r\n            },\r\n        },\r\n        title: {\r\n            text: \"\",\r\n            left: \"center\",\r\n            color: \"green\",\r\n        },\r\n        legend: {\r\n            top: \"5%\",\r\n            itemWidth: 40,\r\n            itemHeight: 5,\r\n            itemGap: 30,\r\n            align: \"right\",\r\n            icon: \"horizontal\",\r\n            textStyle: {\r\n                color: \"#ffffff\",\r\n                fontSize: 16,\r\n            },\r\n            data: legend,\r\n        },\r\n        grid: [{\r\n                show: false,\r\n                left: \"-6%\", //为了把中间的Y轴年份显示出来\r\n                right: \"5%\",\r\n                top: \"15%\",\r\n                bottom: \"8%\",\r\n                containLabel: true,\r\n                width: \"52%\",\r\n            },\r\n            {\r\n                show: false,\r\n                left: \"51%\",\r\n                top: \"15%\",\r\n                bottom: \"8%\",\r\n                width: \"0%\",\r\n            },\r\n            {\r\n                show: false,\r\n                right: \"-6%\",\r\n                top: \"15%\",\r\n                bottom: \"8%\",\r\n                containLabel: true,\r\n                width: \"52%\",\r\n            },\r\n        ],\r\n        xAxis: [{\r\n                // 'value' 数值轴，适用于连续数据。 Y轴\r\n                type: \"value\",\r\n                inverse: true,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                position: \"top\",\r\n                axisLabel: {\r\n                    show: false,\r\n                    color: textColor,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                        color: lineColor,\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                type: \"value\",\r\n                gridIndex: 1,\r\n                show: false,\r\n            },\r\n            {\r\n                type: \"value\",\r\n                gridIndex: 2,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                position: \"top\",\r\n                axisLabel: {\r\n                    show: false,\r\n                    color: textColor,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                        color: lineColor,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n        // 设置三个Y轴 隐藏掉 左右两个 轴Label\r\n        yAxis: [{\r\n                // 'category' 类目轴，适用于离散的类目数据。\r\n                //  为该类型时类目数据可自动从 series.data 或 dataset.source 中取，或者可通过 xAxis.data 设置类目数据。\r\n                // X轴\r\n                type: \"category\",\r\n                inverse: true,\r\n                position: \"right\",\r\n                axisLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                        color: lineColor,\r\n                    },\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                    textStyle: {\r\n                        color: \"#ffffff\",\r\n                        fontSize: 20,\r\n                    },\r\n                },\r\n                data: yAxisData,\r\n            },\r\n            {\r\n                type: \"category\",\r\n                gridIndex: 1,\r\n                inverse: true,\r\n                position: \"left\",\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: true,\r\n                    padding: [0, 0, 0, 0],\r\n                    textStyle: {\r\n                        color: \"#ffffff\",\r\n                        fontSize: 20,\r\n                    },\r\n                    align: \"center\",\r\n                },\r\n                data: yAxisData.map(function(value) {\r\n                    return {\r\n                        value: value,\r\n                        textStyle: {\r\n                            align: \"center\",\r\n                        },\r\n                    };\r\n                }),\r\n            },\r\n            {\r\n                type: \"category\",\r\n                gridIndex: 2,\r\n                inverse: true,\r\n                position: \"left\",\r\n                axisLine: {\r\n                    show: false,\r\n                    lineStyle: {\r\n                        color: lineColor,\r\n                    },\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                    textStyle: {\r\n                        color: \"#ffffff\",\r\n                        fontSize: 20,\r\n                    },\r\n                },\r\n                data: yAxisData,\r\n            },\r\n        ],\r\n        series: seriesData,\r\n    },\r\n\r\n};","html":"","externalScripts":"","updaterUID":"obd-oN6D3qfp-72Q3GmepBJ4XZpEj5XIyCI","theme":"","layout":"","viewCount":39,"userName":"b***n","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x3ANOO0F1lB.png?v=1617972545181","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","timeline","title","tooltip"],"customTags":[],"updaterUserName":"b***n"}}