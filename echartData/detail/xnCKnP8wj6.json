{"status":0,"data":{"cid":"xnCKnP8wj6","authorUid":"obd-oDoZE0QFQiTJ8fgNYaJmNXNc2nGaq1W","authorUserName":"v***哦","title":"折线图基准线","description":"tooltip是表格形式","latestVersion":1,"alwaysLatest":0,"createTime":"2021-07-19T09:40:36.000Z","lastUpdateTime":"2021-07-19T09:40:36.000Z","auth":2,"uid":"obd-oDoZE0QFQiTJ8fgNYaJmNXNc2nGaq1W","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"5.1.2","versionCreateTime":"2021-07-19T09:40:36.000Z","code":"// .spreadTrend_tooltip {\n//   background: #fff;\n//   padding: 16px;\n//   box-shadow: 0px 10px 20px 0px rgba(3, 28, 76, 0.2);\n//   border-radius: 4px;\n//   > table {\n//     font-size: 12px;\n//     font-family: PingFangSC-Regular, PingFang SC;\n//     font-weight: 400;\n//     > tbody {\n//       > tr {\n//         > td {\n//           margin-right: 20px;\n//           color: rgba(0, 0, 0, 0.6);\n//           min-width: 50px;\n//           text-align: center;\n//           &:first-child {\n//             color: rgba(0, 0, 0, 0.9);\n//             font-family: PingFangSC-Medium, PingFang SC;\n//             font-weight: 500;\n//             text-align: right;\n//           }\n//         }\n//       }\n//       > tr:first-child {\n//         > th {\n//           color: rgba(0, 0, 0, 0.6);\n//           line-height: 17px;\n//           min-width: 50px;\n//           text-align: center;\n//           margin-right: 20px;\n//         }\n//       }\n//     }\n//   }\n// }\nconst xAxis = [\"2021-04-20\", \"2021-04-21\", \"2021-04-22\"]\nconst yAxis = {\n    '173':{\n        '1':[230,67,99],\n        '4':[503,607,990],\n        '5':[23,67,99],\n        '8':[23,67,99],\n        'total_count':[503,607,990]\n    },\n    '174':{\n        '1':[23,67,99],\n        '4':[23,67,99],\n        '5':[23,67,99],\n        '8':[23,67,99],\n        'total_count':[53,60,0]\n    },\n    'median':[30,60,70]\n}\nconst brand = [{\n    'brand_id': \"173\",\n    'brand_name': \"hahahha\",\n    'color': \"rgba(77, 201, 78, 1)\"\n},{\n    brand_id: \"174\",\n    brand_name: \"hihih\",\n    color: \"rgba(77, 21, 34,1)\"\n}]\nconst platformOption = [{\n  label: \"微博\",\n  value: 1\n},{\n  label: \"抖音\",\n  value: 5\n},{\n  label: \"小红书\",\n  value: 4\n}]\nconst dateNumInit = xAxis.map(v => {\n      const brandId = brand.map(v => v.brand_id);\n      const brandNumInit = brandId.reduce((init, curBrand) => {\n        init[curBrand] = 0;\n        return init;\n      }, {});\n      return { ...brandNumInit, date: v };\n    });\n\n    // const dateNum = dateNumInit.map((dateItem, index) => {\n    //   const brandId = brand.map(v => v.brand_id);\n    //   const platforms = platformOption.map(v => v.value);\n    //   brandId.forEach(id => {\n    //     const brandHotContent = platforms\n    //       .map(platform => {\n    //         return hotContent[id][platform];\n    //       })\n    //       .flat(1);\n    //     brandHotContent.forEach(item => {\n    //       if (item.date === dateItem.date) {\n    //         dateItem[id] = dateItem[id] + 1;\n    //       }\n    //     });\n    //   });\n    //   return { ...dateItem };\n    // });\nconst getSeries = (\n  yAxis,\n  brand,\n  platformOption,\n) => {\n  const series = brand.map(v => {\n    const platforms = platformOption.map(platform => platform.value);\n    return {\n      name: v.brand_name,\n      type: 'line',\n      data: yAxis[v.brand_id].total_count.map((item, i) => {\n        const platformValue = platforms.reduce((init, cur) => {\n          init[cur] = yAxis[v.brand_id][cur][i];\n          return init;\n        }, {});\n        return {\n          brandId: v.brand_id,\n          value: item,\n          ...platformValue,\n        };\n      }),\n      smooth: true,\n      hoverAnimation: false,\n      symbolSize: (value, params) => {\n        const { dataIndex, data } = params;\n        return 6;\n      },\n      lineStyle: {\n        color: v.color,\n      },\n      itemStyle: {\n        borderWidth: 2,\n      },\n    };\n  });\n  const median = {\n    name: '基准线',\n    type: 'line',\n    data: yAxis.median,\n    smooth: true,\n    symbol: 'none',\n    lineStyle: {\n      color: {\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 0,\n        y2: 1,\n        colorStops: [\n          {\n            offset: 0,\n            color: '#FFEF30', // 100% 处的颜色\n          },\n          {\n            offset: 0.3,\n            color: '#FF8016', // 0% 处的颜色\n          },\n          {\n            offset: 0.6,\n            color: '#FF8016', // 0% 处的颜色\n          },\n          {\n            offset: 1,\n            color: '#FFEF30', // 100% 处的颜色\n          },\n        ],\n      },\n      type: 'dashed',\n    },\n  };\n  return [...series, median];\n};\nconst getToolTipFormatter = (\n  params,\n  platformOption,\n  brand\n ) => {\n  const xData = [\n    '',\n    '传播总量',\n    ...['微博','抖音'],\n  ];\n  const yData = brand.map(v => v.brand_name);\n  const brandData = params.slice(0, brand.length);\n  const platforms = platformOption.map(platform => platform.value);\n  const platformData = brandData\n    // @ts-ignore\n    .map(v => v.data)\n    // @ts-ignore\n    .map(v => {\n      return [v.value, ...platforms.map(platform => v[platform])];\n    });\n  let table =\n    '<table style=\"width:100%; user-select: text;-webkit-user-select: text;color: rgba(255,255,255,0.87);font-size: 12px\"> <tr style=\"display:flex;\">';\n  xData.forEach(item => {\n    table += `<th style=\"height:24px;flex:1;\" class='wheelTd'>${item}</th>`;\n  });\n  table += '</tr>'\n  platformData.forEach((rowArr, index) => {\n    table += `<tr style=\"display:flex;\" >`;\n    if (yData.length - 1 >= index) {\n      table += `<td style=\"height:24px;flex:1;\" class='wheelTd'>${yData[index]}</td>`;\n    }\n    rowArr.forEach((item, i) => {\n      table += `<td style=\"height:24px;flex:1;color:${\n        i === 0 ? brand[index].color : 'not specified'\n      }\" class='wheelTd'>${+item}</td>`\n    });\n    table += `</tr>`;\n  });\n  table += '</table>';\n  return `<div class='spreadTrend_tooltip'>${table}</div>`;\n};\noption = {\n      tooltip: {\n        trigger: 'axis',\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        axisPointer: {\n          type: 'shadow',\n          shadowStyle: {\n            color: '#E5EDFC50',\n          },\n        },\n        formatter: (params) =>\n          getToolTipFormatter(params, platformOption, brand),\n      },\n      color: [...brand.map(v => v.color), '#FF8016'],\n      legend: {\n        type: 'plain',\n        top: 16,\n        left: 46,\n        itemWidth: 8,\n        itemHeight: 8,\n        itemGap: 46,\n        icon: 'circle',\n        textStyle: {\n          color: '#000',\n          fontSize: 12,\n        },\n        data: [...brand.map(v => v.brand_name), '基准线'],\n      },\n      dataZoom: {\n        height: 20,\n        type: 'slider',\n        minValueSpan: 6,\n        maxValueSpan: 15,\n        backgroundColor: 'rgba(237, 237, 241, .4)',\n        fillerColor: 'rgba(41, 115, 255, .1)',\n        handleIcon:\n          'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n        handleSize: '60%',\n        showDetail: false,\n        bottom: 0,\n        handleStyle: {\n          color: '#2973FF',\n        },\n      },\n      grid: {\n        left: '5%',\n        right: '5%',\n        bottom: '44',\n        top: 90,\n        containLabel: true,\n      },\n      toolbox: {\n        // show: false,\n        right: 20,\n        bottom: 0,\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: xAxis,\n        splitLine: {\n          show: false,\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#E3E3E3',\n          },\n        },\n        axisTick: {\n          show: true,\n          inside: true,\n        },\n        axisLabel: {\n          color: 'rgba(0, 0, 0, 0.3)',\n          lineHeight: 17,\n        },\n      },\n      yAxis: {\n        name: '总传播量',\n        nameTextStyle: {\n          color: 'rgba(0, 0, 0, 0.6)',\n          fontSize: 12,\n        },\n        type: 'value',\n        splitLine: {\n          lineStyle: {\n            color: '#F0F0F0',\n            type: 'dashed',\n          },\n        },\n        axisLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLabel: {\n          color: 'rgba(0, 0, 0, 0.3)',\n          lineHeight: 17,\n          formatter: (value) => +value\n        },\n      },\n      series: getSeries(yAxis, brand, platformOption),\n    };\n    \n    \n    \n    \n    \n    \n    \n myChart.on('click', (params) => {\n  console.log('1212')\n});","html":"","externalScripts":"","updaterUID":"obd-oDoZE0QFQiTJ8fgNYaJmNXNc2nGaq1W","theme":"","layout":"","viewCount":0,"userName":"v***哦","commentCount":0,"starCount":0,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xnCKnP8wj6.png?v=1626687636850","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","legend","series-line","toolbox","tooltip"],"customTags":[],"updaterUserName":"v***哦"}}