{"status":0,"data":{"cid":"xiK9_en2Ne","authorUid":"obd-oEuwKb-QtiNMeo1Z6rtkYlJ2Nat8_4m","authorUserName":"i***t","title":"网络攻击流量图（中国/全球）","description":"网络攻击流量图，可切换中国和全球流量走势。@idhyt ","latestVersion":2,"alwaysLatest":1,"createTime":"2020-07-24T09:48:01.000Z","lastUpdateTime":"2020-07-24T09:48:01.000Z","auth":2,"uid":"obd-oEuwKb-QtiNMeo1Z6rtkYlJ2Nat8_4m","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.8.0","versionCreateTime":"2020-07-29T08:09:25.000Z","code":"        var countMax = 2000\n        var randomInt = function(min = 0, max = 1000) {\n            var num = Math.random() * (max - min) + min\n            return parseInt(num, 10)\n        }\n\n        var geoCoordMap = {\n            \"江苏\": [118.8062, 31.9208],\n            '黑龙江': [127.9688, 45.368],\n            '内蒙古': [110.3467, 41.4899],\n            \"吉林\": [125.8154, 44.2584],\n            '北京市': [116.4551, 40.2539],\n            \"辽宁\": [123.1238, 42.1216],\n            \"河北\": [114.4995, 38.1006],\n            \"天津\": [117.4219, 39.4189],\n            \"山西\": [112.3352, 37.9413],\n            \"陕西\": [109.1162, 34.2004],\n            \"甘肃\": [103.5901, 36.3043],\n            \"宁夏\": [106.3586, 38.1775],\n            \"青海\": [101.4038, 36.8207],\n            \"新疆\": [87.9236, 43.5883],\n            \"四川\": [103.9526, 30.7617],\n            \"重庆\": [108.384366, 30.439702],\n            \"山东\": [117.1582, 36.8701],\n            \"河南\": [113.4668, 34.6234],\n            \"安徽\": [117.29, 32.0581],\n            \"湖北\": [114.3896, 30.6628],\n            \"浙江\": [119.5313, 29.8773],\n            \"福建\": [119.4543, 25.9222],\n            \"江西\": [116.0046, 28.6633],\n            \"湖南\": [113.0823, 28.2568],\n            \"贵州\": [106.6992, 26.7682],\n            \"云南\": [102.9199, 25.4663],\n            \"广东\": [113.12244, 23.009505],\n            \"广西\": [108.479, 23.1152],\n            \"海南\": [110.3893, 19.8516],\n            '上海': [121.4648, 31.2891],\n            \"西藏\": [91.11, 29.97],\n            '尼日利亚': [-4.388361, 11.186148],\n            '美国洛杉矶': [-118.24311, 34.052713],\n            '香港邦泰': [114.195466, 22.282751],\n            '美国芝加哥': [-87.801833, 41.870975],\n            '加纳库马西': [-4.62829, 7.72415],\n            '英国曼彻斯特': [-1.657222, 51.886863],\n            '德国汉堡': [10.01959, 54.38474],\n            '哈萨克斯坦阿拉木图': [45.326912, 41.101891],\n            '俄罗斯伊尔库茨克': [89.116876, 67.757906],\n            '巴西': [-48.678945, -10.493623],\n            '埃及达米埃塔': [31.815593, 31.418032],\n            '西班牙巴塞罗纳': [2.175129, 41.385064],\n            '柬埔寨金边': [104.88659, 11.545469],\n            '意大利米兰': [9.189948, 45.46623],\n            '乌拉圭蒙得维的亚': [-56.162231, -34.901113],\n            '莫桑比克马普托': [32.608571, -25.893473],\n            '阿尔及利亚阿尔及尔': [3.054275, 36.753027],\n            '阿联酋迪拜': [55.269441, 25.204514],\n            '匈牙利布达佩斯': [17.108519, 48.179162],\n            '澳大利亚悉尼': [150.993137, -33.675509],\n            '美国加州': [-121.910642, 41.38028],\n            '澳大利亚墨尔本': [144.999416, -37.781726],\n            '墨西哥': [-99.094092, 19.365711],\n            '加拿大温哥华': [-123.023921, 49.311753]\n        }\n\n        // points 所有攻击流量, 由多个攻击向量组成(from -> to), from == 1, to >= 1\n        var points = [{\n                'from': {\n                    'name': '北京市',\n                },\n                'to': [{\n                    'name': '福建',\n                    'count': randomInt()\n                }, {\n                    'name': '江西',\n                    'count': randomInt()\n                }, {\n                    'name': '湖南',\n                    'count': randomInt()\n                }, {\n                    'name': '贵州',\n                    'count': randomInt()\n                }, {\n                    'name': '云南',\n                    'count': randomInt()\n                }, {\n                    'name': '广东',\n                    'count': randomInt()\n                }, {\n                    'name': '广西',\n                    'count': randomInt()\n                }, {\n                    'name': '海南',\n                    'count': randomInt()\n                }, {\n                    'name': '上海',\n                    'count': randomInt()\n                }, {\n                    'name': '西藏',\n                    'count': randomInt()\n                }, {\n                    'name': '北京市',\n                    'count': randomInt()\n                }, {\n                    'name': '辽宁',\n                    'count': randomInt()\n                }, {\n                    'name': '河北',\n                    'count': randomInt()\n                }, {\n                    'name': '天津',\n                    'count': randomInt()\n                }, {\n                    'name': '四川',\n                    'count': randomInt()\n                }]\n            },\n\n            {\n                'from': {\n                    'name': '四川',\n                },\n                'to': [{\n                    'name': '江苏',\n                    'count': randomInt()\n                }, {\n                    'name': '黑龙江',\n                    'count': randomInt()\n                }, {\n                    'name': '内蒙古',\n                    'count': randomInt()\n                }, {\n                    'name': '吉林',\n                    'count': randomInt()\n                }, {\n                    'name': '北京市',\n                    'count': randomInt()\n                }, {\n                    'name': '辽宁',\n                    'count': randomInt()\n                }, {\n                    'name': '河北',\n                    'count': randomInt()\n                }, {\n                    'name': '天津',\n                    'count': randomInt()\n                }, {\n                    'name': '山西',\n                    'count': randomInt()\n                }, {\n                    'name': '陕西',\n                    'count': randomInt()\n                }, {\n                    'name': '甘肃',\n                    'count': randomInt()\n                }, {\n                    'name': '宁夏',\n                    'count': randomInt()\n                }, {\n                    'name': '青海',\n                    'count': randomInt()\n                }, {\n                    'name': '新疆',\n                    'count': randomInt()\n                }, {\n                    'name': '重庆',\n                    'count': randomInt()\n                }, {\n                    'name': '山东',\n                    'count': randomInt()\n                }, {\n                    'name': '河南',\n                    'count': randomInt()\n                }, {\n                    'name': '安徽',\n                    'count': randomInt()\n                }, {\n                    'name': '湖北',\n                    'count': randomInt()\n                }, {\n                    'name': '浙江',\n                    'count': randomInt()\n                }]\n            }\n        ]\n\n        /*\n            获取每个散点坐标\n            将所有的 from, to 中的coord收集\n            value 值为 to 的所有count之和，例如 北京->新疆 100, 四川 -> 新疆 200, 则 新疆 value = 300\n            返回数据: [\n                { name: '北京', value: [116.4551, 40.2539, 1930] },\n                { name: '浙江', value: [119.5313, 29.8773, 58] }\n            ]\n        */\n        function getScatterData(data) {\n            var res = []\n            var coords = {}\n            var values = {}\n\n            for (var i = 0; i < data.length; i++) {\n                var from_data = data[i].from\n                var to_data = data[i].to\n                // 将 from 先记录\n                coords[from_data.name] = geoCoordMap[from_data.name]\n                if (!values.hasOwnProperty(from_data.name)) {\n                    values[from_data.name] = 0\n                }\n\n\n                // 遍历 to\n                to_data.map(function(item) {\n                    // 记录 value 如果存在 直接记录 数值相加\n                    if (values.hasOwnProperty(item.name)) {\n                        values[item.name] = values[item.name] + item.count\n                    } else {\n                        values[item.name] = item.count\n                    }\n\n                    // 记录 coord, 如果重复 就不记录了, 前提是保证 每个 name 只能对应唯一的 coord\n                    if (!coords.hasOwnProperty(item.name)) {\n                        coords[item.name] = geoCoordMap[item.name]\n                    }\n                })\n            }\n\n            // 拼装数据\n            for (var n in coords) {\n                res.push({\n                    name: n,\n                    value: coords[n].concat(values[n])\n                })\n            }\n\n            return res\n\n        }\n\n        /*\n            获取连线数据 连线方向 from -> to\n            返回数据: [\n                { coords: [ [116.4551, 40.2539], [119.5313, 29.8773] ], value: 510},\n            ]\n        */\n        function getLinesData(data) {\n            var res = []\n            for (var i = 0; i < data.length; i++) {\n                var dataItem = data[i]\n                res = res.concat(\n                    dataItem.to.map(function(item) {\n                        return {\n                            // name: item.name,\n                            coords: [geoCoordMap[dataItem.from.name], geoCoordMap[item.name], item.name, item.count],\n                            value: item.count\n                        }\n                    })\n                )\n            }\n            return res\n        }\n\n        option = {\n            backgroundColor: '#013954',\n            title: {\n                text: '网络攻击流量图（中国/全球）',\n                subtext: '@idhyt',\n                x: 'center',\n                top: 20,\n                textStyle: {\n                    color: \"#fff\"\n                },\n            },\n            geo: {\n                map: 'china',\n                show: true,\n                aspectScale: 0.75, //长宽比\n                layoutCenter: [\"50%\", \"40%\"], //地图位置\n                layoutSize: \"80%\",\n                zoom: 1.1,\n                roam: true, //是否允许缩放\n                label: {\n                    normal: {\n                        // 是否显示省份名称\n                        show: false,\n                        textStyle: {\n                            color: '#1DE9B6'\n                        }\n                    },\n                    emphasis: {\n                        textStyle: {\n                            color: '#FFA07A' // 'rgb(183,185,14)'\n                        }\n                    }\n                },\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgb(147, 235, 248)',\n                        borderWidth: 1,\n                        areaColor: {\n                            type: 'radial',\n                            x: 0.5,\n                            y: 0.5,\n                            r: 0.8,\n                            colorStops: [{\n                                offset: 0,\n                                color: '#09132c' // 0% 处的颜色\n                            }, {\n                                offset: 1,\n                                color: '#274d68' // 100% 处的颜色\n                            }],\n                            globalCoord: true // 缺省为 false\n                        },\n                        shadowColor: 'rgb(58,115,192)',\n                        shadowOffsetX: 5,\n                        shadowOffsetY: 6\n                    },\n                    emphasis: {\n                        // areaColor: '#2AB8FF',\n                        areaColor: 'rgb(46,229,206)',\n                        borderWidth: 0.1,\n                        color: 'green',\n                        label: {\n                            show: true\n                        }\n                    }\n                },\n            },\n            // 图例值控制 数值越大 颜色越深\n            visualMap: {\n                min: 0,\n                max: countMax,\n                top: '40%',\n                right: 100,\n                // bottom: 400,\n                range: [0, countMax],\n                show: true,\n                calculable: true,\n                // color: [\"#0bc7f3\"],\n                textStyle: {\n                    color: \"#fff\"\n                },\n\n            },\n            // 提示信息\n            tooltip: {\n                trigger: \"item\",\n                backgroundColor: \"#1540a1\",\n                borderColor: \"#FFFFCC\",\n                showDelay: 0,\n                hideDelay: 0,\n                enterable: true,\n                transitionDuration: 0,\n                extraCssText: \"z-index:100\",\n                formatter: function(params, ticket, callback) {\n                    // 散点提示信息\n                    if (params.componentSubType === 'effectScatter') {\n                        return \"<span style='color:#fff;'>\" + params.name + \"</span><br/> 被攻击次数：\" + params.value[2]\n                    } else\n                    if (params.componentSubType === 'lines') {\n                        return \"<span style='color:#fff;'>\" + params.data.coords[2] + '</span><br/> be attacked：' + params.data.coords[3]\n                    }\n                }\n            },\n            toolbox: {\n                x: 'center',\n                top: 80,\n                feature: {\n                    myTool1: {\n                        show: true,\n                        title: 'China',\n                        icon: 'path://M828.823 847.837l63.619 0 0-64.263-63.619 0 0 64.263zM510.741 912.091l127.23 0 0 64.268-127.23 0 0-64.268zM1008.606 153.874l-123.609-106.174c-9.098-7.766-21.691-9.837-32.765-5.203l-95.677 39.911-77.1 48.831c-10.186 6.556-15.85 18.329-14.575 30.402l9.609 94.608-89.001 61.763-104.905 12.524-83.851-46.016-52.098-102.629c-7.891-15.553-26.654-21.852-42.239-14.204l-113.053 55.718c-10.939 5.398-17.875 16.587-17.875 28.87l0 42.147-37.728 37.149-42.878 0c-8.204 0-16.159 3.21-22.074 9.001l-57.257 55.716c-12.974 12.658-12.974 33.612 0 46.27l50.198 48.849 28.818 137.906c1.524 7.276 5.474 13.829 11.262 18.449l104.391 84.514c5.661 4.56 12.665 7.063 19.914 7.063l115.024 0 0 69.921c0 17.743 14.246 32.14 31.802 32.14l128.062 0 57.959 39.851c10.052 6.931 23.09 7.439 33.653 1.349l78.75-45.443 108.661-41.321c5.788-2.189 10.746-6.103 14.444-11.113l68.384-94.862c3.947-5.534 6.109-12.148 6.109-18.899l0-93.573c0-8.684-3.498-16.976-9.605-23.007l-39.95-39.204 50.571-33.67c4.708-3.091 8.463-7.394 11.01-12.465l35.498-71.541 89.765-63.11c8.522-6.029 13.615-15.852 13.615-26.353l0-129.687c0-9.431-4.138-18.385-11.262-24.475l0 0zM956.243 291.195l-82.762 58.314c-4.319 3.075-7.884 7.185-10.238 11.954l-35.249 71.06-76.719 50.845c-16.992 11.306-19.281 35.531-4.709 49.867l58.716 57.712 0 69.532-56.685 78.682-104.261 40.091-65.907 37.659-49.687-34.18c-5.28-3.675-11.513-5.593-17.939-5.593l-106.114 0 0-69.923c0-17.743-14.249-32.14-31.81-32.14l-135.626 0-86.841-70.252-28.431-136.362c-1.342-6.315-4.454-12.09-9.103-16.528l-33.395-32.577 29.198-23.591 38.107 0c8.271 0 16.286-3.267 22.209-9.12l56.549-55.716c6.045-5.985 9.545-14.266 9.545-22.949l-5.284-10.079 72.521-58.554 42.309 83.347c2.926 5.728 7.505 10.467 13.105 13.557l101.405 55.733c5.789 3.089 12.404 4.364 18.961 3.583l122.647-14.695c5.09-0.646 9.989-2.462 14.249-5.414l111.073-76.985c9.613-6.691 14.826-18.058 13.617-29.759l-9.539-93.766 55.601-35.666 72.778-29.952 97.711 83.93 0 97.936-0.001 0zM956.243 291.195z',\n                        onclick: function(e) {\n                            regionSwitch(e.scheduler.ecInstance, r = 0)\n                        }\n                    },\n                    myTool2: {\n                        show: true,\n                        title: 'World',\n                        icon: 'path://M496 0c-273.952 0-496 222.048-496 496s222.048 496 496 496 496-222.048 496-496-222.048-496-496-496zM927.2 480l-191.872 0c-1.76-70.88-14.368-138.592-36.736-200.576 43.2-18.016 83.136-41.984 119.552-70.304 64.736 72.672 105.216 167.04 109.056 270.88zM478.304 927.104c-53.184-44.288-97.792-101.792-130.432-168.576 41.888-13.088 86.272-20.256 132.128-21.728l0 190.368c-0.576 0-1.12-0.032-1.696-0.064zM513.632 64.896c60.352 50.24 109.6 117.536 142.912 196.032-45.632 15.584-94.112 24.64-144.576 26.24l0-222.368c0.608 0.032 1.12 0.064 1.664 0.096zM566.944 70.336c88.32 14.688 167.552 55.936 229.248 115.648-33.504 25.696-70.112 47.456-109.696 63.936-29.12-69.024-69.984-130.048-119.552-179.584zM480 64.8l0 222.368c-50.464-1.632-98.976-10.656-144.576-26.24 33.312-78.496 82.56-145.792 142.912-196.032 0.576-0.032 1.088-0.064 1.664-0.096zM305.472 249.952c-39.52-16.48-76.16-38.24-109.664-63.936 61.664-59.712 140.928-100.96 229.248-115.648-49.6 49.504-90.432 110.528-119.584 179.584zM323.36 290.432c49.344 17.12 101.92 27.104 156.64 28.768l0 160.8-191.328 0c1.728-67.008 13.6-131.04 34.688-189.568zM480 512l0 192.8c-50.464 1.536-99.264 9.792-145.248 24.608-27.712-65.984-44.064-139.488-46.08-217.408l191.328 0zM425.056 921.664c-79.136-13.152-151.008-47.616-209.44-97.664 31.52-21.856 65.6-40.352 102.016-54.4 27.904 57.856 64.416 109.216 107.424 152.064zM512 927.2l0-190.368c45.824 1.472 90.24 8.64 132.128 21.728-32.672 66.784-77.248 124.288-130.432 168.576-0.544 0-1.12 0.032-1.696 0.064zM674.368 769.6c36.384 14.048 70.432 32.576 102.016 54.4-58.432 50.016-130.304 84.512-209.44 97.664 43.008-42.848 79.488-94.208 107.424-152.064zM657.248 729.408c-46.016-14.816-94.816-23.072-145.248-24.608l0-192.8 191.328 0c-2.016 77.92-18.4 151.424-46.08 217.408zM512 480l0-160.8c54.688-1.664 107.264-11.616 156.64-28.736 21.056 58.528 32.928 122.56 34.688 189.568l-191.328 0zM173.888 209.12c36.416 28.32 76.352 52.288 119.52 70.304-22.368 61.984-34.976 129.696-36.736 200.576l-191.872 0c3.84-103.84 44.32-198.208 109.088-270.88zM64.8 512l191.872 0c1.984 81.76 19.072 158.976 48.096 228.384-40.544 15.808-78.336 36.864-113.216 61.792-75.136-74.784-122.56-177.024-126.752-290.176zM800.448 802.144c-34.88-24.896-72.672-45.984-113.248-61.792 29.056-69.408 46.112-146.624 48.128-228.384l191.872 0c-4.192 113.184-51.648 215.424-126.752 290.176z',\n                        onclick: function(e) {\n                            regionSwitch(e.scheduler.ecInstance, r = 1)\n                        }\n                    }\n                },\n                iconStyle: {\n                    normal: {\n                        borderColor: '#fff'\n                    },\n                    emphasis: {\n                        borderColor: '#b1e4ff'\n                    }\n                },\n            },\n            series: [{\n                    type: 'effectScatter',\n                    coordinateSystem: 'geo',\n                    showEffectOn: 'render',\n                    zlevel: 1,\n                    // 涟漪特效\n                    rippleEffect: {\n                        period: 15, //动画时间，值越小速度越快\n                        scale: 4, //波纹圆环最大限制，值越大波纹越大\n                        brushType: 'fill' //波纹绘制方式 stroke, fill\n                    },\n                    // hoverAnimation: true,\n                    label: {\n                        normal: {\n                            // 是否显示name\n                            show: true,\n                            formatter: '{b}', //圆环显示文字\n                            position: 'top', //显示位置\n                            offset: [5, 0], //偏移设置\n                            color: '#1DE9B6'\n                        },\n                        emphasis: {\n                            show: true\n                        }\n                    },\n                    // symbolSize: 12,\n                    symbol: \"circle\",\n                    symbolSize: function(val) {\n                        if (!val[2]) return 6\n                        return 6 + val[2] / (countMax / 10) //圆环大小\n                    },\n                    itemStyle: {\n                        normal: {\n                            show: true,\n                            color: '#1DE9B6'\n                                /* function (params) { //随机颜色\n                                                               // return \"#\"+(\"00000\"+((params.data.value[2]*16777215+0.5)>>0).toString(16)).slice(-6);\n                                                               return \"#\"+(\"00000\"+((Math.random()*16777215+0.5)>>0).toString(16)).slice(-6);\n                                                           }*/\n                                ,\n\n                            // shadowBlur: 10,\n                            // shadowColor: '#333'\n                        }\n                    },\n\n                    data: getScatterData(points)\n                },\n                {\n                    type: 'lines',\n                    zlevel: 2,\n                    effect: {\n                        show: true,\n                        period: 4, //箭头指向速度，值越小速度越快\n                        trailLength: 0.2, //特效尾迹长度[0,1]值越大，尾迹越长重\n                        symbol: 'arrow', //箭头图标 'circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'\n                        symbolSize: 5, //图标大小\n                    },\n                    lineStyle: {\n                        normal: {\n                            width: 1, //线条宽度\n                            opacity: 0.1, //0.1, //尾迹线条透明度\n                            curveness: 0.3 //尾迹线条曲直度\n                        }\n                    },\n                    data: getLinesData(points)\n                }\n            ]\n        };\n\n        /*\n            0: China\n            1: World\n        */\n        function regionSwitch(ecIns, r = 0) {\n            var op = JSON.parse(JSON.stringify(option))\n            if (r === 0) {\n                op.geo.map = 'china'\n                op.series[0].data = getScatterData(points)\n                op.series[1].data = getLinesData(points)\n\n            } else if (r === 1) {\n                op.geo.map = 'world'\n                // points 所有攻击流量, 由多个攻击向量组成(from -> to), from == 1, to >= 1\n                var worldPoints = [{\n                    'from': {\n                        'name': '上海',\n                    },\n                    'to': [{\n                            'name': '加拿大温哥华',\n                            'count': randomInt()\n                        }, {\n                            'name': '墨西哥',\n                            'count': randomInt()\n                        }, {\n                            'name': '澳大利亚墨尔本',\n                            'count': randomInt()\n                        },\n                        {\n                            'name': '美国加州',\n                            'count': randomInt()\n                        }, {\n                            'name': '澳大利亚悉尼',\n                            'count': randomInt()\n                        }, {\n                            'name': '匈牙利布达佩斯',\n                            'count': randomInt()\n                        }, {\n                            'name': '阿联酋迪拜',\n                            'count': randomInt()\n                        }, {\n                            'name': '阿尔及利亚阿尔及尔',\n                            'count': randomInt()\n                        },\n                        {\n                            'name': '莫桑比克马普托',\n                            'count': randomInt()\n                        }, {\n                            'name': '美国洛杉矶',\n                            'count': randomInt()\n                        }, {\n                            'name': '香港邦泰',\n                            'count': randomInt()\n                        }, {\n                            'name': '美国芝加哥',\n                            'count': randomInt()\n                        }, {\n                            'name': '加纳库马西',\n                            'count': randomInt()\n                        }, {\n                            'name': '英国曼彻斯特',\n                            'count': randomInt()\n                        }, {\n                            'name': '德国汉堡',\n                            'count': randomInt()\n                        }, {\n                            'name': '哈萨克斯坦阿拉木图',\n                            'count': randomInt()\n                        }, {\n                            'name': '俄罗斯伊尔库茨克',\n                            'count': randomInt()\n                        }, {\n                            'name': '巴西',\n                            'count': randomInt()\n                        }, {\n                            'name': '埃及达米埃塔',\n                            'count': randomInt()\n                        }, {\n                            'name': '西班牙巴塞罗纳',\n                            'count': randomInt()\n                        }, {\n                            'name': '柬埔寨金边',\n                            'count': randomInt()\n                        }, {\n                            'name': '意大利米兰',\n                            'count': randomInt()\n                        }, {\n                            'name': '乌拉圭蒙得维的亚',\n                            'count': randomInt()\n                        }\n                    ]\n                }]\n                op.series[0].data = getScatterData(worldPoints)\n                op.series[1].data = getLinesData(worldPoints)\n            }\n\n            ecIns.setOption(op)\n        }\n        /*\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <meta charset=\"utf-8\">\n            <script src=\"echarts.min.js\"></script>\n            <script src=\"world.js\"></script>\n            <script src=\"china.js\"></script>\n\n        </head>\n        <body>\n        \t<div id=\"maps\" style=\"width: '100%'; height:1000px;\"></div>\n        \t<script>\n        \t\tvar maps = echarts.init(document.getElementById('maps'));\n        \t\tmaps.setOption(option);\n        \t</script>\n        </body>\n        </html>\n        */","html":"","externalScripts":"/dep/echarts/map/js/china.js,/dep/echarts/map/js/world.js","updaterUID":"obd-oEuwKb-QtiNMeo1Z6rtkYlJ2Nat8_4m","theme":"","layout":"","viewCount":1452,"userName":"i***t","commentCount":0,"starCount":5,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xiK9_en2Ne.png?v=1596010165926","isCustomThumbnail":0,"builtinTags":["category-work","geo","series-effectScatter","series-lines","title","toolbox","tooltip","visualMap"],"customTags":[],"updaterUserName":"i***t"}}