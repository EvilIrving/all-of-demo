{"status":0,"data":{"cid":"xpb3Deb41P","authorUid":"bd-1493481016","authorUserName":"i***a","title":"glassmap","description":"","latestVersion":32,"alwaysLatest":1,"createTime":"2019-03-07T17:29:57.000Z","lastUpdateTime":"2019-03-07T17:29:57.000Z","auth":2,"uid":"bd-1493481016","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":32,"parentVersion":31,"echartsVersion":"4.2.1","versionCreateTime":"2019-06-12T15:09:35.000Z","code":"var xAxisPanelQty =3; //xAxis panel qty\nvar yAxisPanelQty =6; //yAxis panel qty\nvar QpanelSplitX = 6; //panel split xAxis qty\nvar QpanelSplitY = 6; //panel split yAxis qty\nvar glassWidth = 2200;\nvar glassHeight = 2500;\nvar leftposition = 10; \nvar topposition = 10;\nvar rightposition = 4;\nvar buttomposition = 6;\nvar visualMapMinValue = 0;\nvar visualMapMaxValue = 100;\nvar panelshow = true; //panel grid show\nvar grids = [];\nvar xAxes = [];\nvar yAxes = [];\nvar series = [];\nvar titles = [];\n\nvar xAxisIndexByZoom = []; //设置Zoom操作时关联的X坐标系\nvar yAxisIndexByZoom = []; //设置Zoom操作时关联的Y坐标系\n\nvar dataRect = [\n        [1, 2, 2, 1],\n        [7, 5, 8, 4], \n        [9,10,10, 9],\n        [10,11,11,10]\n    ];\n    \n// var colorRectEmphasis = {\n//                         type: 'linear',\n//                         x: 0,\n//                         y: 0,\n//                         x2: 1,\n//                         y2: 1,\n//                         colorStops: [{\n//                             offset: 0, color: 'black' // 0% 处的颜色\n//                         }, {\n//                             offset: 0.5, color: 'red' // 50% 处的颜色\n//                         }, {\n//                             offset: 1, color: 'blue' // 100% 处的颜色\n//                         }]\n\n//                 };\n// var colorRect = {\n//     type: 'radial',\n//     x: 0.5,\n//     y: 0.5,\n//     r: 0.5,\n//     colorStops: [{\n//                             offset: 0, color: 'red' // 0% 处的颜色\n//                         }, {\n//                         //     offset: 0.5, color: 'red' // 50% 处的颜色\n//                         // }, {\n//                             offset: 1, color: 'blue' // 100% 处的颜色\n//                         }]\n\n// };\nvar colorRect = 'rgba(255,0,0,0.3)';                \ndataRect = echarts.util.map(dataRect, function (item) {\n    return {\n        value: [item[0]*glassWidth/xAxisPanelQty/QpanelSplitX,item[1]*glassHeight/yAxisPanelQty/QpanelSplitY,item[2]*glassWidth/xAxisPanelQty/QpanelSplitX,item[3]*glassHeight/yAxisPanelQty/QpanelSplitY],\n        itemStyle: {\n\n                color: colorRect\n\n            \n        },\n        // emphasis :{\n        //     itemStyle: {\n        //         color: colorRectEmphasis\n        //     }\n        // }\n       \n    };\n});\n\nvar data = [];\n\nvar random = function (max) {\n    return (Math.random() * max).toFixed(3);\n};\n// random data\nfor (var i = 0; i < 50; i++) {\n    data.push([random(glassWidth), random(glassHeight), random(visualMapMaxValue)]);\n}\n\ntitles.push({\n    text: \"Product GlassMap (Width:\"+glassWidth+\"mm,Height:\"+glassHeight+\"mm)\",\n    left: 'center',\n    textAlign:'left'\n});\n//第个Panel 再进行分割\nvar qpanelXAxisCoordData =[];\nfor(m=0;m<QpanelSplitX;m++){\n    qpanelXAxisCoordData.push('');\n}\nvar qpanelyAxisCoordData =[];\nfor(n=0;n<QpanelSplitY;n++){\n    qpanelyAxisCoordData.push('');\n}\n\n//把整个glass 设置成第一个grid\n//给玻璃设置外边沿\ngrids.push({\n    left: (leftposition-1)+'%',\n    show:true,\n    borderWidth: 0.5,\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(0, 0, 0, 0.3)',\n    shadowBlur: 1,\n    height: 100-(topposition-1)-(buttomposition-1)+'%',\n    top: (topposition-1)+'%',\n    width: 100-(rightposition-1)-(leftposition-1)+'%',\n    right: rightposition-1 + '%'\n});\n//设置glass中实际使用面积的grid\ngrids.push({\n    left: (leftposition)+'%',\n    show:true,\n    borderWidth: 0.5,\n    backgroundColor: '#fff',\n    shadowColor: 'rgba(0, 0, 0, 0.3)',\n    shadowBlur: 1,\n    height: 100-(topposition)-(buttomposition)+'%',\n    top: (topposition)+'%',\n    width: 100-(rightposition)-(leftposition)+'%',\n    right: rightposition + '%'\n});\n//给第一个grid 添加坐标轴\nvar xAxisCoordData =[];\nfor(m=0;m<xAxisPanelQty;m++){\n    xAxisCoordData.push((glassWidth/xAxisPanelQty*m).toFixed(0).toString());\n}\nvar yAxisCoordData =[];\nfor(n=0;n<yAxisPanelQty;n++){\n    yAxisCoordData.push('');\n}\nxAxes.push({\n    // data: xAxisCoordData,\n        name: '',  //该处虽然是设置第一个x轴，但当第一个不设置时，第二个的name 显示位置不正常\n        nameLocation: 'center',\n        min: 0,\n        max: glassWidth,\n        splitNumber: xAxisPanelQty,\n        // interval:(2200/xAxisPanelQty).toFixed(2),\n        interval:glassWidth/xAxisPanelQty,\n        splitLine: {\n            show:false\n        } ,\n        axisLine: {\n                show: true\n            },\n        axisLabel : {\n            show: false,\n        },\n        // offset: 500,\n        axisTick : {\n            // show: true,\n            inside: true//该处虽然是设置第一个x轴，但当第一个不设置时,第二个的显示不正常\n        },\n        gridIndex: 1  //default is 0     \n        \n    });\nxAxes.push({\n        name: 'Width (mm)',\n        nameLocation: 'center',\n        nameGap:'30',\n        min: 0,\n        max: glassWidth,\n        splitLine: {\n            show:false\n        },\n        axisLine:{\n          show : true  \n        },\n        splitNumber: xAxisPanelQty,\n        // interval:(2200/xAxisPanelQty).toFixed(2),\n        interval:glassWidth/xAxisPanelQty,\n        axisLabel : {\n            show: true,\n            formatter:function(value,index){\n                return value.toFixed(0).toString();\n            }\n        },\n        axisTick: {\n            // show: true\n        },\n        // offset:'100%',\n        gridIndex: 1  //default is 0         \n    });\nxAxisIndexByZoom.push(1);\nyAxes.push({\n        name: 'Height (mm)',\n        nameLocation: 'center',\n        nameGap:'60',\n        min: 0,\n        inverse: true,\n        max: glassHeight,\n        splitNumber: yAxisPanelQty,\n        // interval:(2500/yAxisPanelQty).toFixed(1),\n        interval:glassHeight/yAxisPanelQty,\n        splitLine: {\n            show : false\n        },\n        axisLine: {\n                show: true\n            },\n        axisLabel : {\n            show: true,\n            formatter: function(value,index){\n                return value.toFixed(0).toString();\n            }\n        },\n        axisTick : {\n            show: true\n        },\n        gridIndex: 1  //default is 0            \n    });\nyAxes.push({\n        axisLine: {\n                show: true\n            },\n        gridIndex: 1  //default is 0\n    });\nyAxisIndexByZoom.push(0);\n//每个panel 都对应成一个grid\nfor(var i=0 ; i < xAxisPanelQty ; i++) {\n    for( var j =0 ; j < yAxisPanelQty ; j++ ) {\n        if(panelshow) {\n            titles.push({\n                text: String.fromCharCode(65+i)+(j+1),\n                top: topposition + (j)/yAxisPanelQty*(100-topposition-buttomposition)+1/yAxisPanelQty*(100-topposition-buttomposition)/2+'%',\n                left: (leftposition) + (i)/xAxisPanelQty*(100-leftposition-rightposition)+1/xAxisPanelQty*(100-topposition-buttomposition)/2+ '%',\n                textAlign: 'center',\n                textBaseline: 'middle', //\n                // textVeticalAlign: 'middle'\n            });\n        }\n        \n        \n        if(i===0){\n            if ( j===0 ) {\n                grids.push({\n    \t            left:leftposition +'%',\n    \t            show: panelshow,\n    \t            borderWidth: 0,\n    \t            backgroundColor: '#fff',\n    \t            shadowColor: 'rgba(0, 0, 0, 0.3)',\n    \t            shadowBlur: 1,\n    \t            height:1/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n    \t            top: topposition +'%',\t            \n    \t            width: (1/xAxisPanelQty*(100-leftposition-rightposition))+'%',\n    \t            //右边距right的位置：左边100先减去第一个左移的leftposition%，再减去宽度 (1/xAxisPanelQty*(100-leftposition))+'%'\n    \t            right: ((100-leftposition)-(1/xAxisPanelQty*(100-leftposition-rightposition)))+'%' \n        \t    });\n        \t    \n        \t}else{\n        \t    \n                grids.push({\n                    left:((leftposition)+(i)/xAxisPanelQty*(100-leftposition-rightposition))+'%',//除去第一个左边距的4%,剩余渐分都以96%进行分割\n                    show: panelshow,\n                    borderWidth: 0,\n                    backgroundColor: '#fff',\n                    shadowColor: 'rgba(0, 0, 0, 0.3)',\n                    shadowBlur: 1,\n                    height: 1/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n                    // top: (100-topposition)-(j/yAxisPanelQty*(100-topposition-buttomposition))+ '%',\n                    top: topposition + j/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n                    Width: (1/xAxisPanelQty*(100-leftposition-rightposition))+'%',\n                    //右边距right的位置：左边100%先减去第一个左移的leftposition%，再减去(100-leftposition)%为起始的该grid的左边距(i/xAxisPanelQty*(100-leftposition))，再减去宽度 (1/xAxisPanelQty*(100-leftposition))+'%'\n                    right:((100-leftposition)-(i/xAxisPanelQty*(100-leftposition-rightposition))-(1/xAxisPanelQty*(100-leftposition-rightposition)))+'%'\n        \t   });\n        \t   \n        \t}\n        \t\n        }else {\n            if ( j===0 ) {\n                grids.push({\n    \t            left:((leftposition)+(i)/xAxisPanelQty*(100-leftposition-rightposition))+'%',\n    \t            show: panelshow,\n    \t            borderWidth: 0,\n    \t            backgroundColor: '#fff',\n    \t            shadowColor: 'rgba(0, 0, 0, 0.3)',\n    \t            shadowBlur: 1,\n    \t            height:1/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n    \t            top: topposition +'%',\t            \n    \t            width: (1/xAxisPanelQty*(100-leftposition-rightposition))+'%',\n    \t            //右边距right的位置：左边100先减去第一个左移的leftposition%，再减去宽度 (1/xAxisPanelQty*(100-leftposition))+'%'\n    \t            right: ((100-leftposition)-(1/xAxisPanelQty*(100-leftposition-rightposition)))-(1/xAxisPanelQty*(100-leftposition-rightposition))+'%' \n        \t    });\n        \t}else{\n        \t    \n                grids.push({\n                    left:((leftposition)+(i)/xAxisPanelQty*(100-leftposition-rightposition))+'%',//除去第一个左边距的4%,剩余渐分都以96%进行分割\n                    show: panelshow,\n                    borderWidth: 0,\n                    backgroundColor: '#fff',\n                    shadowColor: 'rgba(0, 0, 0, 0.3)',\n                    shadowBlur: 1,\n                    height: 1/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n                    top: topposition + j/yAxisPanelQty*(100-topposition-buttomposition)+'%',\n                    Width: (1/xAxisPanelQty*(100-leftposition-rightposition))+'%',\n                    //右边距right的位置：左边100%先减去第一个左移的leftposition%，再减去100-leftposition%为起始的该grid的左边距(i/xAxisPanelQty*(100-leftposition-rightposition))，再减去宽度 (1/xAxisPanelQty*(100-leftposition-rightposition))+'%'\n                    right:((100-leftposition)-(i/xAxisPanelQty*(100-leftposition-rightposition))-(1/xAxisPanelQty*(100-leftposition-rightposition)))+'%'\n        \t   });\n        \t}\n        }\n        //给每一个panel对应的grid 添加坐标轴\n        xAxes.push({\n        \tdata: qpanelXAxisCoordData,\n        \taxisLine: {\n                show: panelshow\n            },\n            splitLine: {\n                show: true\n                } ,\n            axisLabel : {\n                show: true\n                },\n            axisTick : {\n                show: false\n                },\n            // axisLine: {\n            //     show: true\n            // },\n            gridIndex: grids.length -1\n        });\n        xAxes.push({\n            axisLine: {\n                show: panelshow\n            },\n            gridIndex: grids.length -1 ,\n            // axisLine: {\n            //     show: false\n            // }\n        });\n        xAxisIndexByZoom.push((grids.length-2)*2);\n        yAxes.push({\n            data:qpanelyAxisCoordData,\n            axisLine: {\n                show: panelshow\n            },\n            splitLine: {\n                    show : true\n                },\n            axisLabel : {\n                    show: false\n                },\n            axisTick : {\n                    show: false\n            },\n            // axisLine: {\n            //     show: false\n            // },\n            gridIndex: grids.length -1  \n        });\n        yAxes.push({\n            axisLine: {\n                show: panelshow\n            },\n            gridIndex: grids.length -1 ,\n            // axisLine: {\n            //     show: false\n            // }\n        });\n        yAxisIndexByZoom.push((grids.length-2)*2);\n    }\n}\n//设置series\nseries.push({\n    //example data : [xAxisCoordData,yAxisCoordData,value]\n    data:data,\n    type:'scatter'\n},{\n    type:'custom',\n    coordinateSystem: 'cartesian2d',\n    xAxisIndex: 1,\n    yAxisIndex: 0,\n    renderItem: function (params, api) {\n        var yValue = api.value(3);\n        var start = api.coord([api.value(0),  api.value(3)]);\n        var end = api.coord([api.value(2), api.value(1)]);\n        // var size = api.size([api.value(2)-api.value(0),api.value(1)-api.value(3)]);\n        var width = api.size([10, 100])[0] * ((api.value(2)-api.value(0))/10);\n        var height = api.size([10, 100])[1] * ((api.value(1)-api.value(3))/100);\n        var rectShape = echarts.graphic.clipRectByRect({\n            x: start[0],\n            y: start[1],\n            width: width,\n            height: height\n        }, {\n            x: params.coordSys.x,\n            y: params.coordSys.y,\n            width: params.coordSys.width,\n            height: params.coordSys.height\n        });\n    \n        return (\n            rectShape && {\n                type: 'rect',\n                shape: rectShape,\n                style: api.style()\n            }\n        );\n            \n\n    },\n    \n\n    dimensions: ['left', 'top', 'right','bottom'],\n    encode: {\n            x: [0, 2],      // 表示维度 0、2映射到 x 轴。\n            y: [3, 1],              // 表示维度 1，3 映射到 y 轴。\n            // tooltip: [0, 1, 2, 3] // 表示维度 0, 1, 2, 3 会在 tooltip 中显示。\n        },\n    data: dataRect\n});\n\noption = {\n    grid: grids,\n    title: titles,\n    xAxis: xAxes,\n    yAxis: yAxes,\n    series: series,\n    toolbox: {\n        show: true,\n        feature: {\n            dataView: {readOnly: true},\n            restore: {},\n            saveAsImage: {}\n        }\n    },\n    tooltip: {\n        trigger: 'item',\n        formatter: function (params) {\n            if(params.value.length ===4){\n                return \"start[\"+params.value[0]+\",\"+params.value[1]+\"]\"+\"<br/>\"+\"end[\"+params.value[2]+\",\"+params.value[1]+\"]\";\n            }\n            \n            return params.name + ' position: ['+params.value[0]+','+params.value[1]+']'+'<br/>value:'+(params.value[2]);\n        }\n    },\n    visualMap: {\n        type: 'continuous',\n        min: visualMapMinValue,\n        top: 0,\n        orient:'vertical',\n        max: visualMapMaxValue,\n        text:['High','Low'],\n        realtime: false,\n        calculable : true,\n        color: ['orangered','yellow','blue'],\n        seriesIndex : 0\n    },\n    dataZoom: [\n        {\n            id: 'dataZoomX',\n            type: 'slider',\n            xAxisIndex: xAxisIndexByZoom,\n            filterMode: 'filter',\n            showDataShadow: false,\n            height: 10,\n            handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n        handleSize: 20,\n        handleStyle: {\n            shadowBlur: 6,\n            shadowOffsetX: 1,\n            shadowOffsetY: 2,\n            shadowColor: '#aaa'\n        },\n        borderColor: 'transparent',\n        backgroundColor: '#e2e2e2',\n        },\n        {\n            id: 'dataZoomY',\n            type: 'slider',\n            yAxisIndex: yAxisIndexByZoom,\n            filterMode: 'filter',\n            showDataShadow: false,\n            width:10,\n            handleIcon: 'M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n        handleSize: 20,\n        handleStyle: {\n            shadowBlur: 6,\n            shadowOffsetX: 1,\n            shadowOffsetY: 2,\n            shadowColor: '#aaa'\n        },\n        borderColor: 'transparent',\n        backgroundColor: '#e2e2e2',\n        },\n        {\n            id: 'dataZoomXinside',\n            type: 'inside',\n            xAxisIndex: xAxisIndexByZoom,\n            filterMode: 'filter'\n        },\n        {\n            id: 'dataZoomYinside',\n            type: 'inside',\n            yAxisIndex: yAxisIndexByZoom,\n            filterMode: 'filter'\n        }\n    ],\n};","html":"","externalScripts":"","updaterUID":"bd-1493481016","theme":"","layout":"","viewCount":2517,"userName":"i***a","commentCount":0,"starCount":18,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xpb3Deb41P.png?v=1560352175527","isCustomThumbnail":0,"builtinTags":["category-work","dataZoom","grid","series-custom","series-scatter","title","toolbox","tooltip","visualMap"],"customTags":[],"updaterUserName":"i***a"}}