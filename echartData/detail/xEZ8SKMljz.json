{"status":0,"data":{"cid":"xEZ8SKMljz","authorUid":"bd-2427534238","authorUserName":"阳***还","title":"3D 饼图","description":"","latestVersion":5,"alwaysLatest":0,"createTime":"2021-11-11T07:51:36.000Z","lastUpdateTime":"2021-11-15T03:30:54.000Z","auth":2,"uid":"bd-2427534238","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"5.2.2","versionCreateTime":"2021-11-15T03:30:54.000Z","code":"// 生成扇形的曲面参数方程，用于 series-surface.parametricEquation\nfunction getParametricEquation(startRatio, endRatio, isSelected, isHovered, k, h) {\n    // 计算\n    const midRatio = (startRatio + endRatio) / 2;\n    const startRadian = startRatio * Math.PI * 2;\n    const endRadian = endRatio * Math.PI * 2;\n    const midRadian = midRatio * Math.PI * 2;\n    // 如果只有一个扇形，则不实现选中效果。\n    if (startRatio === 0 && endRatio === 1) {\n        isSelected = false;\n    }\n    // 通过扇形内径/外径的值，换算出辅助参数 k（默认值 1/3）\n    k = 1;\n    // 计算选中效果分别在 x 轴、y 轴方向上的位移（未选中，则位移均为 0）\n    const offsetX = isSelected ? Math.cos(midRadian) * 0.1 : 0;\n    const offsetY = isSelected ? Math.sin(midRadian) * 0.1 : 0;\n    // 计算高亮效果的放大比例（未高亮，则比例为 1）\n    const hoverRate = isHovered ? 1.05 : 1;\n    // 返回曲面参数方程\n    return {\n        u: {\n            min: -Math.PI,\n            max: Math.PI * 3,\n            step: Math.PI / 32,\n        },\n        v: {\n            min: 0,\n            max: Math.PI * 2,\n            step: Math.PI / 20,\n        },\n        x: function (u, v) {\n            if (u < startRadian) {\n                return offsetX + Math.cos(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian) {\n                return offsetX + Math.cos(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetX + Math.cos(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        y: function (u, v) {\n            if (u < startRadian) {\n                return offsetY + Math.sin(startRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            if (u > endRadian) {\n                return offsetY + Math.sin(endRadian) * (1 + Math.cos(v) * k) * hoverRate;\n            }\n            return offsetY + Math.sin(u) * (1 + Math.cos(v) * k) * hoverRate;\n        },\n        z: function (u, v) {\n            if (u < -Math.PI * 0.5) {\n                return Math.sin(u);\n            }\n            if (u > Math.PI * 2.5) {\n                return Math.sin(u) * h * 0.1;\n            }\n            return Math.sin(v) > 0 ? 1 * h * 0.1 : -1;\n        },\n    };\n}\n\n/**\n * 绘制3d图\n * @param pieData 总数据\n * @param internalDiameterRatio:透明的空心占比\n * @param distance 视角到主体的距离\n * @param alpha 旋转角度\n * @param pieHeight 立体的高度\n * @param opacity 饼或者环的透明度\n */\nfunction getPie3D(pieData, internalDiameterRatio, distance, alpha, pieHeight, opacity = 1) {\n    const series = [];\n    let sumValue = 0;\n    let startValue = 0;\n    let endValue = 0;\n    const legendData = [];\n    const k =\n        typeof internalDiameterRatio !== 'undefined'\n            ? (1 - internalDiameterRatio) / (1 + internalDiameterRatio)\n            : 1 / 3;\n    // 为每一个饼图数据，生成一个 series-surface 配置\n    for (let i = 0; i < pieData.length; i += 1) {\n        sumValue += pieData[i].value;\n        const seriesItem = {\n            name: typeof pieData[i].name === 'undefined' ? `series${i}` : pieData[i].name,\n            type: 'surface',\n            parametric: true,\n            wireframe: {\n                show: false,\n            },\n            pieData: pieData[i],\n            pieStatus: {\n                selected: false,\n                hovered: false,\n                k: k,\n            },\n        };\n        if (typeof pieData[i].itemStyle !== 'undefined') {\n            const itemStyle = {};\n            if (typeof pieData[i].itemStyle.color !== 'undefined') {\n                itemStyle.color = pieData[i].itemStyle.color;\n            }\n            if (typeof pieData[i].itemStyle.opacity !== 'undefined') {\n                itemStyle.opacity = pieData[i].itemStyle.opacity;\n            }\n            seriesItem.itemStyle = itemStyle;\n        }\n        series.push(seriesItem);\n    }\n    // 使用上一次遍历时，计算出的数据和 sumValue，调用 getParametricEquation 函数，\n    // 向每个 series-surface 传入不同的参数方程 series-surface.parametricEquation，也就是实现每一个扇形。\n    for (let i = 0; i < series.length; i += 1) {\n        endValue = startValue + series[i].pieData.value;\n        series[i].pieData.startRatio = startValue / sumValue;\n        series[i].pieData.endRatio = endValue / sumValue;\n        console.log(series[i].pieData.startRatio,\n            series[i].pieData.endRatio,\n            false,  \n            false,\n            k,\n            series[i].pieData.value)\n        series[i].parametricEquation = getParametricEquation(\n            series[i].pieData.startRatio,\n            series[i].pieData.endRatio,\n            false,\n            false,\n            k,\n            series[i].pieData.value\n        );\n        startValue = endValue;\n        legendData.push(series[i].name);\n    }\n    return series;\n}\n\nconst optionsData = [\n    {\n        name: 'aa',\n        value: 11,\n        itemStyle: {\n            color: '#41adf8',\n            // opacity: 1,\n        },\n    },\n    {\n        name: 'cc',\n        value: 33,\n        itemStyle: {\n            color: '#ffa100',\n            // opacity: 1,\n        },\n    },\n    {\n        name: 'bb',\n        value: 22,\n        itemStyle: {\n            color: '#2acf81',\n            // opacity: 1,\n        },\n    },\n];\n\nconst series = getPie3D(optionsData, 0.8, 240, 28, 26, 0.5);\n\nseries.push({\n    name: 'pie2d',\n    type: 'pie',\n    label: {\n        opacity: 1,\n        fontSize: 13,\n        lineHeight: 20,\n    },\n    labelLine: {\n        length: 30,\n        length2: 30,\n    },\n    startAngle: -30, //起始角度，支持范围[0, 360]。\n    clockwise: false, //饼图的扇区是否是顺时针排布。上述这两项配置主要是为了对齐3d的样式\n    radius: ['20%', '50%'],\n    center: ['50%', '50%'],\n    data: optionsData,\n    itemStyle: {\n        opacity: 0,\n    },\n});\n\noption = {\n    legend: {\n        tooltip: {\n            show: true,\n        },\n        data: ['aa', 'bb', 'cc'],\n        bottom: '10%',\n        textStyle: {\n            color: '#fff',\n            fontSize: 12,\n        },\n    },\n    tooltip: {\n        formatter: (params) => {\n            if (params.seriesName !== 'mouseoutSeries' && params.seriesName !== 'pie2d') {\n                let bfb = (\n                    (option.series[params.seriesIndex].pieData.endRatio -\n                        option.series[params.seriesIndex].pieData.startRatio) *\n                    100\n                ).toFixed(2);\n                return (\n                    `${params.seriesName}<br/>` +\n                    `<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${params.color};\"></span>` +\n                    `${bfb}%`\n                );\n            }\n        },\n    },\n    title: {\n        text: '3D 饼图',\n        x: 'center',\n        top: '20',\n        textStyle: {\n            color: '#fff',\n            fontSize: 22,\n        },\n    },\n    backgroundColor: '#333',\n    labelLine: {\n        show: true,\n        lineStyle: {\n            color: '#7BC0CB',\n        },\n    },\n    label: {\n        show: true,\n        position: 'outside',\n        formatter: '{b} \\n{c} {d}%',\n    },\n    xAxis3D: {\n        min: -1,\n        max: 1,\n    },\n    yAxis3D: {\n        min: -1,\n        max: 1,\n    },\n    zAxis3D: {\n        min: -1,\n        max: 1,\n    },\n    grid3D: {\n        show: false,\n        boxHeight: 30, // 三维笛卡尔坐标系在三维场景中的高度\n        viewControl: {\n            alpha: 40,\n            beta: 40,\n            distance: 500, //调整视角到主体的距离，类似调整zoom\n            rotateSensitivity: 0, // 设置为0无法旋转\n            zoomSensitivity: 0, // 设置为0无法缩放\n            panSensitivity: 0, // 设置为0无法平移\n            autoRotate: false, // 自动旋转\n        },\n    },\n    series: series,\n};\n","html":"","externalScripts":"https://cdnjs.cloudflare.com/ajax/libs/echarts-gl/2.0.8/echarts-gl.min.js","updaterUID":"bd-2427534238","theme":"","layout":"","viewCount":0,"userName":"阳***还","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xEZ8SKMljz.png?v=1636947054950","isCustomThumbnail":0,"builtinTags":["category-work","grid3D","legend","series-surface","title","tooltip"],"customTags":[],"updaterUserName":"阳***还"}}