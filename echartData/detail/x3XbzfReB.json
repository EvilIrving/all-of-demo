{"status":0,"data":{"cid":"x3XbzfReB","authorUid":"bd-4161428444","authorUserName":"b***n","title":"进度条柱形图","description":"进度条","latestVersion":1,"alwaysLatest":1,"createTime":"2019-11-28T10:45:02.000Z","lastUpdateTime":"2019-11-28T10:45:02.000Z","auth":2,"uid":"bd-4161428444","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":1,"parentVersion":-1,"echartsVersion":"4.4.0","versionCreateTime":"2019-11-28T10:45:02.000Z","code":"//声明数据\r\nvar chartData = [{\r\n        name: '部门名称1',\r\n        value: 50,\r\n        test: '备注1' //自定义参数\r\n    },\r\n    {\r\n        name: '部门名称2',\r\n        value: 60,\r\n        test: '备注2'\r\n    },\r\n    {\r\n        name: '部门名称3',\r\n        value: 66,\r\n        test: '备注3'\r\n    },\r\n    {\r\n        name: '部门名称4',\r\n        value: 72,\r\n        test: '备注4'\r\n    },\r\n    {\r\n        name: '部门名称5',\r\n        value: 80,\r\n        test: '备注5'\r\n    },\r\n    {\r\n        name: '部门名称6',\r\n        value: 88,\r\n        test: '备注6'\r\n    },\r\n    {\r\n        name: '部门名称7',\r\n        value: 96,\r\n        test: '备注7'\r\n    },\r\n    {\r\n        name: '部门名称8',\r\n        value: 100,\r\n        test: '备注8'\r\n    }\r\n];\r\n\r\nvar itemValue = [],\r\n    bgData = []; //声明背景数据\r\n\r\n// 取出所有数据最大值,作为柱形图背景数据\r\nchartData.forEach(function(items, index) { //console.log(items)\r\n    itemValue.push(items.value);\r\n});\r\nmaxdata = Math.max.apply(null, itemValue); ///applay方法★取得最大值\r\n//console.log(\"最大值为 %c\"+ maxdata, \"color:red\");\r\nfor (var i = 0; i < chartData.length; i++) {\r\n    bgData.push(maxdata); //取得最大值\r\n}\r\nconsole.log(bgData);\r\n\r\n//图表\r\n\r\noption = {\r\n    backgroundColor: '#0d073d', // 背景透明\r\n    title: {\r\n        show: false\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis', // axis , item\r\n        axisPointer: {\r\n            type: 'shadow' // 'line' | 'shadow'\r\n        },\r\n        //backgroundColor:'transparent',\r\n        padding: 0,\r\n        textStyle: {\r\n            fontSize: 16,\r\n            fontFamily: 'Simsun',\r\n            color: '#fff'\r\n        },\r\n        formatter: function(params, ticket, callback) {\r\n            console.log(params[1])\r\n            var res = '<table class=\"charts_tip\">' +\r\n                '<thead>' +\r\n                '<tr><th colspan=\"2\" style=\"padding:2px 5px; background:' + params[1].color + '\">' + params[1].name + '</th></tr>' +\r\n                '</thead>' +\r\n                '<tbody>' +\r\n                '<tr><td class=\"cc\" style=\"padding:2px 5px;\">数量</td><td>' + params[1].value + '</td></tr>' +\r\n                '<tr><td class=\"cc\" style=\"padding:2px 5px;\">备注</td><td>' + params[1].data.test + '</td></tr>' +\r\n                '</tbody>' +\r\n                '</table>';\r\n            setTimeout(function() {\r\n                callback(ticket, res); // 仅为了模拟异步回调\r\n            }, 3000)\r\n            return res;\r\n        }\r\n    },\r\n    legend: {\r\n        show: false\r\n    },\r\n    toolbox: {\r\n        show: false\r\n    },\r\n    grid: {\r\n        top: '8%',\r\n        left: '7%',\r\n        right: '15%',\r\n        bottom: '10%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [{\r\n        type: 'value',\r\n        position: 'bottom',\r\n        boundaryGap: true, // 边界间隙\r\n        min: 0,\r\n        axisLabel: {\r\n            show: false,\r\n            textStyle: {\r\n                color: '#fff',\r\n                fontSize: 16\r\n            }\r\n        },\r\n        axisLine: {\r\n            show: false,\r\n            lineStyle: {\r\n                color: 'rgba(255, 255, 255, .5)'\r\n            }\r\n        },\r\n        axisTick: {\r\n            show: false // 坐标轴小标记\r\n        },\r\n        splitLine: {\r\n            show: false, // 是否显示分割线\r\n            lineStyle: {\r\n                color: 'rgba(255, 255, 9255, 0)', // 纵向向网格线颜色\r\n                type: 'dashed',\r\n                width: 1\r\n            }\r\n        }\r\n    }],\r\n    yAxis: {\r\n        type: 'category',\r\n        position: 'left',\r\n        axisLabel: {\r\n            textStyle: {\r\n                color: '#8aa5ab',\r\n                fontSize: 15\r\n            }\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: 'rgba(255, 255, 255, .5)',\r\n                width: 1\r\n            }\r\n        },\r\n        axisTick: {\r\n            show: false // 坐标轴小标记\r\n        },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        data: (function(data) {\r\n            var arr = [];\r\n            data.forEach(function(items) {\r\n                arr.push(items.name);\r\n            });\r\n            return arr;\r\n        })(chartData) // 载入y轴数据\r\n    },\r\n    series: [{\r\n        type: 'bar',\r\n        barGap: \"-100%\",\r\n        label: {\r\n            normal: {\r\n                show: false\r\n            }\r\n        },\r\n        barWidth: 27,\r\n        itemStyle: {\r\n            normal: {\r\n                color: '#1a2859' // 图表颜色\r\n            }\r\n        },\r\n        data: bgData, // 载入背景数据\r\n        z: 0\r\n    }, {\r\n        type: 'bar',\r\n        label: {\r\n            normal: {\r\n                show: true,\r\n                position: 'right', // top, right, inside, insideTop,...\r\n                textStyle: {\r\n                    color: 'white',\r\n                    fontSize: 16\r\n                },\r\n                formatter: '{c}' + \"%\"\r\n                /*formatter: function(params) { console.log(params)\r\n                    var strVal = 0;\r\n                    chartData.forEach(function(v, i, array) {\r\n                        if (params.name == v.name) {\r\n                            strVal = v.value;\r\n                            params.data = v.test\r\n                        }\r\n                    })\r\n                    return strVal + '%';\r\n                }*/\r\n            }\r\n        },\r\n        barWidth: 27,\r\n        itemStyle: {\r\n            normal: {\r\n                //color:'#ffc938', // 图表颜色\r\n                color: function(params) { // 颜色定制显示（按顺序）\r\n                    var colorList = ['#ea9ef3', 'yellowgreen', '#4a5eea', '#00a0e9', '#8957a1', '#80f1b0', '#ff6692', '#f29b76'];\r\n                    return colorList[params.dataIndex]\r\n                },\r\n                //barBorderRadius: [0, 17, 17, 0]  //圆角\r\n            }\r\n        },\r\n        data: chartData, // 载入数据(内含自定义参数)\r\n        z: 1\r\n    }]\r\n};\r\n\r\n// 使用刚指定的配置项和数据显示图表\r\nmyChart.setOption(option);","html":"","externalScripts":"","updaterUID":"bd-4161428444","theme":"","layout":"","viewCount":1577,"userName":"b***n","commentCount":0,"starCount":15,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/x3XbzfReB.png?v=1574937902512","isCustomThumbnail":0,"builtinTags":["category-work","grid","legend","series-bar","title","toolbox","tooltip"],"customTags":[],"updaterUserName":"b***n"}}