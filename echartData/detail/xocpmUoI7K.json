{"status":0,"data":{"cid":"xocpmUoI7K","authorUid":"bd-2201329624","authorUserName":"赵***4","title":"折线图 渐变区域带选中高亮效果","description":"","latestVersion":5,"alwaysLatest":1,"createTime":"2019-01-23T02:10:49.000Z","lastUpdateTime":"2019-01-23T02:10:49.000Z","auth":2,"uid":"bd-2201329624","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":5,"parentVersion":4,"echartsVersion":"4.2.0","versionCreateTime":"2019-01-23T09:17:19.000Z","code":" function obtainEchartDataSource() {\r\n     var source = {\r\n         \"beans\": [{\r\n                 \"avgIncome\": \"3158.00\",\r\n                 \"subTitle\": \"较前一年变化 --\",\r\n                 \"year\": \"2014\"\r\n             },\r\n             {\r\n                 \"avgIncome\": \"2450.00\",\r\n                 \"subTitle\": \"较前一年减少 22.42%\",\r\n                 \"year\": \"2015\"\r\n             },\r\n             {\r\n                 \"avgIncome\": \"6450.00\",\r\n                 \"subTitle\": \"较前一年增加 163.27%\",\r\n                 \"year\": \"2016\"\r\n             },\r\n             {\r\n                 \"avgIncome\": \"8222.00\",\r\n                 \"subTitle\": \"较前一年增加 21.27%\",\r\n                 \"year\": \"2017\"\r\n             },\r\n             {\r\n                 \"avgIncome\": \"0\",\r\n                 \"subTitle\": \"较前一年减少 100.00%\",\r\n                 \"year\": \"2018\"\r\n             },\r\n             {\r\n                 \"avgIncome\": \"0\",\r\n                 \"subTitle\": \"较前一年变化 --\",\r\n                 \"year\": \"2019\"\r\n             }\r\n         ]\r\n     };\r\n\r\n     var beans = source.beans;\r\n     var xAxisData = [];\r\n     var seriesLineData = [];\r\n     var tooltipsData = [];\r\n     var scatterData = [];\r\n     for (var i in beans) {\r\n         var y = beans[i].year;\r\n         var avgIncome = beans[i].avgIncome;\r\n         var subTitle = beans[i].subTitle;\r\n         // x轴刻度\r\n         xAxisData.push({\r\n             value: y\r\n         });\r\n         // 折线数据\r\n         seriesLineData.push({\r\n             value: avgIncome\r\n         });\r\n         // 提示框次级数据\r\n         tooltipsData.push(subTitle);\r\n         // x轴坐标点数据\r\n         scatterData.push({\r\n             value: [y, 0]\r\n         })\r\n     }\r\n     var last = (Number)(beans[beans.length - 1].year);\r\n     // 限制到2020年   无限制放开\r\n     tailRecursion(xAxisData, last);\r\n\r\n     return {\r\n         xAxisData: xAxisData,\r\n         scatterData: scatterData,\r\n         seriesLineData: seriesLineData,\r\n         tooltipsData: tooltipsData\r\n     }\r\n }\r\n\r\n /**\r\n  * 处理x轴年份扩展\r\n  * @param xData\r\n  * @param value\r\n  */\r\n function tailRecursion(xData, value) {\r\n     if (value < 2020) {\r\n         value++;\r\n         xData.push({\r\n             value: value\r\n         });\r\n         tailRecursion(xData, value);\r\n     }\r\n }\r\n\r\n var dataSource = obtainEchartDataSource();\r\n\r\n\r\n var option = {\r\n     tooltip: {\r\n         show: true\r\n     },\r\n     grid: {\r\n         top: '30%',\r\n         left: '1%',\r\n         right: '1%',\r\n         bottom: '0%',\r\n         containLabel: true\r\n     },\r\n     xAxis: [{\r\n         type: 'category',\r\n         // boundaryGap: false,\r\n         axisTick: {\r\n             show: false\r\n         },\r\n         // x轴 点击触发事件\r\n         triggerEvent: true,\r\n         data: dataSource.xAxisData\r\n     }],\r\n     yAxis: [{\r\n         type: 'value',\r\n         name: '单位（元）',\r\n         splitLine: {\r\n             show: false\r\n         },\r\n         axisLine: {\r\n             show: false\r\n         },\r\n         axisLabel: {\r\n             show: true\r\n         },\r\n         axisTick: {\r\n             show: false\r\n         }\r\n     }],\r\n     series: [{\r\n             name: '人均纯收入',\r\n             type: 'line',\r\n             //是否平滑曲线显示\r\n             smooth: true,\r\n             // 默认是空心圆（中间是白色的），改成实心圆\r\n             symbol: 'circle',\r\n             // 屏蔽标记鼠标事件\r\n             silent: true,\r\n             symbolSize: 1,\r\n             lineStyle: {\r\n                 normal: {\r\n                     width: 4,\r\n                     // 线条颜色\r\n                     color: \"#4C84FF\"\r\n                 }\r\n             },\r\n             label: {\r\n                 show: true,\r\n                 position: 'top',\r\n                 formatter: '{c} 元',\r\n                 textStyle: {\r\n                     color: '#4f4a51',\r\n                     fontSize: 14,\r\n                     fontWeight: 'bold'\r\n                 }\r\n             },\r\n             areaStyle: { //区域填充样式\r\n                 normal: {\r\n                     color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                         offset: 0,\r\n                         color: 'rgba(0, 136, 212, 0.2)'\r\n                     }, {\r\n                         offset: 1,\r\n                         color: 'rgba(0, 136, 212, 0)'\r\n                     }], false),\r\n                     shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                     shadowBlur: 10\r\n                 }\r\n             },\r\n             data: dataSource.seriesLineData\r\n         },\r\n         {\r\n             type: 'pictorialBar',\r\n             data: deepClone(dataSource.seriesLineData),\r\n             barGap: \"10%\",\r\n             symbolRepeat: true,\r\n             symbolMargin: 2,\r\n             // 点状线 鼠标不触发事件\r\n             silent: true,\r\n             symbol: \"rect\",\r\n             symbolSize: 2,\r\n             color: '#c8c5d1',\r\n             symbolClip: true\r\n\r\n         },\r\n         {\r\n             type: 'scatter',\r\n             name: '年份',\r\n             symbolSize: 10,\r\n             data: dataSource.scatterData,\r\n             tooltip: {\r\n                 show: true,\r\n                 backgroundColor: 'white',\r\n                 textStyle: {\r\n                     color: '#000'\r\n                 },\r\n                 formatter: function(param) {\r\n                     var index = param.dataIndex;\r\n                     var lineData = option.series[0].data[index].value;\r\n                     var tooltipsData = dataSource.tooltipsData;\r\n                     return '<div style=\"border: medium #0094ff;\"><span style=\"font-size:15px;color: #0a080b\"><strong>人均纯收入：</span><span style=\"color: #F84040\">' + lineData +\r\n                         '</style></span>元</strong></br>' +\r\n                         '<span style=\"font-size:13px; color: #9D9D9D\">' + tooltipsData[index] + '</span></div>';\r\n                 },\r\n                 extraCssText: 'box-shadow: 0 0 3px #A0C5C8;'\r\n             },\r\n             itemStyle: {\r\n                 borderWidth: 1,\r\n                 borderColor: '#00a7db',\r\n                 color: {\r\n                     type: 'radial',\r\n                     x: 0.5,\r\n                     y: 0.5,\r\n                     r: 0.5,\r\n                     colorStops: [{\r\n                         offset: 0.4,\r\n                         color: '#ffffff'\r\n                     }, {\r\n                         offset: 1,\r\n                         color: '#4C84FF' // 100% 处的颜色\r\n                     }],\r\n                     globalCoord: false\r\n                 }\r\n             }\r\n         }\r\n     ]\r\n };\r\n\r\n\r\n myChart.setOption(option);\r\n\r\n /**\r\n  *\r\n  * 对象深拷贝\r\n  *\r\n  * @param json\r\n  */\r\n function deepClone(json) {\r\n     var s = JSON.stringify(json);\r\n     return JSON.parse(s);\r\n }\r\n\r\n\r\n /**\r\n  * 注册x 轴  点击事件\r\n  */\r\n myChart.on('click', function(e) {\r\n\r\n     var componentType = e.componentType;\r\n     var year = '';\r\n     switch (componentType) {\r\n         case 'series':\r\n             year = e.name;\r\n             break;\r\n         case 'xAxis':\r\n             year = e.value;\r\n             break;\r\n     }\r\n     selectAction(year)\r\n });\r\n // 加载后默认选中当前年\r\n selectCurrent();\r\n\r\n /**\r\n  * 选中操作\r\n  * @param year\r\n  * @param callback 自定义事件函数钩子 参数为 x轴刻度值\r\n  * @see selectedStyle\r\n  */\r\n function selectAction(year, callback) {\r\n     selectedStyle(year, callback);\r\n\r\n     if ('[object Function]' === Object.prototype.toString.call(callback)) {\r\n         callback(year);\r\n     }\r\n\r\n     myChart.setOption(option);\r\n }\r\n\r\n /**\r\n  *  点击x 轴 事件   触发选中高亮  同时触发 callback 事件\r\n  * @param year\r\n  */\r\n function selectedStyle(year) {\r\n     var scatterData = option.series[2].data;\r\n     var length = scatterData.length;\r\n\r\n     for (var i = 0; i < length; i++) {\r\n\r\n         var lineData = option.series[0].data[i];\r\n         // 移除坐标轴点样式\r\n         delete scatterData[i].itemStyle;\r\n\r\n         // 移除折线样式\r\n         delete lineData.label;\r\n         //匹配到就增加样式\r\n         if (year === scatterData[i].value[0]) {\r\n             var scatterColor = '#4C84FF';\r\n             // 折线选中变大 变色\r\n             lineData.label = {\r\n                 show: true,\r\n                 fontSize: 16,\r\n                 color: scatterColor\r\n             };\r\n             // x轴圆点变色\r\n             scatterData[i].itemStyle = {\r\n                 color: scatterColor\r\n             };\r\n         }\r\n     }\r\n\r\n }\r\n\r\n\r\n /**\r\n  * 默认选中当前年\r\n  * @param callback  回调钩子\r\n  */\r\n function selectCurrent(callback) {\r\n     var currentYear = new Date().getFullYear().toString();\r\n     selectAction(currentYear, callback)\r\n }","html":"","externalScripts":"","updaterUID":"bd-2201329624","theme":"","layout":"","viewCount":1655,"userName":"赵***4","commentCount":0,"starCount":2,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xocpmUoI7K.png?v=1548235039603","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-line","series-pictorialBar","series-scatter","tooltip"],"customTags":[],"updaterUserName":"赵***4"}}