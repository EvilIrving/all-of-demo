{"status":0,"data":{"cid":"xgbq3iH40k","authorUid":"bd-1462118531","authorUserName":"d***6","title":"愁人啊","description":"","latestVersion":2,"alwaysLatest":1,"createTime":"2020-05-28T02:15:42.000Z","lastUpdateTime":"2020-05-28T02:15:42.000Z","auth":2,"uid":"bd-1462118531","publishedVersion":0,"forkFrom":"-","isSpam":0,"version":2,"parentVersion":1,"echartsVersion":"4.8.0","versionCreateTime":"2020-05-30T08:49:16.000Z","code":"const CubeLeft = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        const xAxisPoint = shape.xAxisPoint\r\n        const c0 = [shape.x, shape.y]\r\n        const c1 = [shape.x - 9, shape.y - 9]\r\n        const c2 = [xAxisPoint[0] - 9, xAxisPoint[1] - 9]\r\n        const c3 = [xAxisPoint[0], xAxisPoint[1]]\r\n        ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath()\r\n    }\r\n})\r\nconst CubeRight = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        const xAxisPoint = shape.xAxisPoint\r\n        const c1 = [shape.x, shape.y]\r\n        const c2 = [xAxisPoint[0], xAxisPoint[1]]\r\n        const c3 = [xAxisPoint[0] + 18, xAxisPoint[1] - 9]\r\n        const c4 = [shape.x + 18, shape.y - 9]\r\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n    }\r\n})\r\nconst CubeTop = echarts.graphic.extendShape({\r\n    shape: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    buildPath: function(ctx, shape) {\r\n        const c1 = [shape.x, shape.y]\r\n        const c2 = [shape.x + 18, shape.y - 9]\r\n        const c3 = [shape.x + 9, shape.y - 18]\r\n        const c4 = [shape.x - 9, shape.y - 9]\r\n        ctx.moveTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).lineTo(c4[0], c4[1]).closePath()\r\n    }\r\n})\r\necharts.graphic.registerShape('CubeLeft', CubeLeft)\r\necharts.graphic.registerShape('CubeRight', CubeRight)\r\necharts.graphic.registerShape('CubeTop', CubeTop)\r\nconst MAX = [6000, 6000, 6000, 6000, 6000, 5000, 4000, 3000, 2000, 4000, 3000, 2000]\r\nconst VALUE = [2012, 1230, 3790, 2349, 1654, 1230, 3790, 2349, 1654, 3790, 2349, 1654]\r\noption = {\r\n    backgroundColor: \"#012366\",\r\n    title: {\r\n        text: '',\r\n        top: 32,\r\n        left: 18,\r\n        textStyle: {\r\n            color: '#00F6FF',\r\n            fontSize: 24\r\n        }\r\n    },\r\n    grid: {\r\n        left: 20,\r\n        right: 40,\r\n        bottom: '19%',\r\n        top: 107,\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['德州', '德城区', '陵城区','禹城市','乐陵市','临邑县',\r\n            '平原县','夏津县','武城县','庆云县','宁津县','齐河县'],\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        offset: 20,\r\n        axisTick: {\r\n            show: false,\r\n            length: 9,\r\n            alignWithLabel: true,\r\n            lineStyle: {\r\n                color: '#7DFFFD'\r\n            }\r\n        },\r\n        axisLabel: {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        axisTick: {\r\n            show: false\r\n        },\r\n        axisLabel: {\r\n            fontSize: 16\r\n        },\r\n        boundaryGap: ['20%', '20%']\r\n    },\r\n    series: [{\r\n        type: 'custom',\r\n        renderItem: function(params, api) {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(47,102,192,.27)'\r\n                    }\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(59,128,226,.27)'\r\n                    }\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: 'rgba(72,156,221,.27)'\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        data: MAX\r\n    }, {\r\n        type: 'custom',\r\n        renderItem: (params, api) => {\r\n            const location = api.coord([api.value(0), api.value(1)])\r\n            return {\r\n                type: 'group',\r\n                children: [{\r\n                    type: 'CubeLeft',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#49BEE5'\r\n                            }\r\n                        ])\r\n                    }\r\n                }, {\r\n                    type: 'CubeRight',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#49BEE5'\r\n                            }\r\n                        ])\r\n                    }\r\n                }, {\r\n                    type: 'CubeTop',\r\n                    shape: {\r\n                        api,\r\n                        xValue: api.value(0),\r\n                        yValue: api.value(1),\r\n                        x: location[0],\r\n                        y: location[1],\r\n                        xAxisPoint: api.coord([api.value(0), 0])\r\n                    },\r\n                    style: {\r\n                        fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                offset: 0,\r\n                                color: '#3B80E2'\r\n                            },\r\n                            {\r\n                                offset: 1,\r\n                                color: '#49BEE5'\r\n                            }\r\n                        ])\r\n                    }\r\n                }]\r\n            }\r\n        },\r\n        data: VALUE\r\n    }, {\r\n        type: 'bar',\r\n        label: {\r\n            normal: {\r\n                show: true,\r\n                position: 'top',\r\n                formatter: (e) => {\r\n                    switch (e.name) {\r\n                        case '10kV线路':\r\n                            return VALUE[0]\r\n                        case '公用配变':\r\n                            return VALUE[1]\r\n                        case '35kV主变':\r\n                            return VALUE[2]\r\n                        case '水':\r\n                        \r\n                    }\r\n                },\r\n                fontSize: 16,\r\n                color: '#fff',\r\n                offset: [4, -25]\r\n            }\r\n        },\r\n        itemStyle: {\r\n            color: 'transparent'\r\n        },\r\n        data: MAX\r\n    }]\r\n}","html":"","externalScripts":"","updaterUID":"bd-1462118531","theme":"","layout":"","viewCount":16408,"userName":"d***6","commentCount":2,"starCount":95,"isStared":0,"thumbnailURL":"https://www.makeapie.com/ecg-storage/ec_gallery_thumbnail/xgbq3iH40k.png?v=1590828556426","isCustomThumbnail":0,"builtinTags":["category-work","grid","series-bar","series-custom","title"],"customTags":[],"updaterUserName":"d***6"}}