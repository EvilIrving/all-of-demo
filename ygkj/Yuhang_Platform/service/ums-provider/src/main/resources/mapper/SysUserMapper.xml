<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygkj.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.ygkj.entity.SysUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="is_admin" jdbcType="TINYINT" javaType="boolean" property="isAdmin" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="create_where" jdbcType="TINYINT" property="createWhere" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="slogan" jdbcType="VARCHAR" property="slogan" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="ding_user_id" property="dingUserId"/>
    <result column="ding_dept_name" property="dingDeptName"/>
    <result column="ding_dept_id" property="dingDeptId"/>
    <result column="unit_id" property="unitId"/>
  </resultMap>
  <!--避免sql语句中的join，引入mybatis延迟加载功能-->
  <resultMap id="lazyMap" type="com.ygkj.entity.SysUser" extends="BaseResultMap">
    <association property="dept" fetchType="lazy" column="dept_id"
                 select="com.ygkj.mapper.SysDeptMapper.selectByPrimaryKey"/>
    <collection property="roleIds" fetchType="lazy" column="id"
                 select="com.ygkj.mapper.SysUserRoleMapper.getRoleIdsByUserId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, salt, `password`, phone, dept_id, real_name, nick_name, email, `status`, user_type,is_admin,
    sex, deleted, create_id, update_id, create_where, create_time, update_time,slogan,job,sort,identity_number,
    ding_user_id,ding_dept_name,ding_dept_id,unit_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="lazyMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ygkj.entity.SysUser">
    insert into sys_user (id, username, salt, 
      `password`, phone, dept_id, 
      real_name, nick_name, email, user_type,is_admin,
      `status`, sex, deleted, 
      create_id, update_id, create_where, 
      create_time, update_time,slogan,job,sort,identity_number)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{userType,jdbcType=VARCHAR},  #{isAdmin,jdbcType=TINYINT},
      #{status,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, #{deleted,jdbcType=TINYINT},
      #{createId,jdbcType=VARCHAR}, #{updateId,jdbcType=VARCHAR}, #{createWhere,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{slogan,jdbcType=VARCHAR},#{job,jdbcType=VARCHAR}
      ,#{sort,jdbcType=INTEGER},#{identityNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ygkj.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="createWhere != null">
        create_where,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="slogan != null">
        slogan,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createWhere != null">
        #{createWhere,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="slogan != null">
        #{slogan,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
      #{sort,jdbcType=INTEGER},
    </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert" parameterType="com.ygkj.entity.SysUser">
    INSERT INTO sys_user(id,username,salt,password,phone,dept_id,
        real_name,create_time,update_time,user_type,sort)
    VALUE
        <foreach collection="list" separator="," item="item">
          (#{item.id},#{item.username},#{item.salt},#{item.password},#{item.phone},#{item.deptId},
          #{item.realName},NOW(),#{item.updateTime},'1',#{item.sort})
        </foreach>
  </insert>

    <insert id="insertInvokeLog" parameterType="com.ygkj.entity.InvokeLog">
        INSERT INTO ph_monitor_data_db.dts_ra_monitor_data_db_invoke_log
            (invoke_ip,request_path,request_method,invoke_param,
             user_id,invoke_time,invoke_type)
        VALUES
            (#{invokeIp},#{requestPath},#{requestMethod},#{invokeParam}
            ,#{userId},#{invokeTime},#{invokeType})
    </insert>

    <update id="batchUpdate" parameterType="com.ygkj.entity.SysUser">
    UPDATE sys_user
    <trim prefix="set" suffixOverrides=",">

      <trim prefix="`username` =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.username != null">
            WHEN id=#{item.id} THEN #{item.username}
          </if>
        </foreach>
      </trim>

      <trim prefix="phone =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.phone != null">
            WHEN id=#{item.id} THEN #{item.phone}
          </if>
        </foreach>
      </trim>

      <trim prefix="real_name =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.realName != null">
            WHEN id=#{item.id} THEN #{item.realName}
          </if>
        </foreach>
      </trim>

      <trim prefix="update_time =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.updateTime != null">
            WHEN id=#{item.id} THEN #{item.updateTime}
          </if>
        </foreach>
      </trim>

      <trim prefix="sort =case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.sort != null">
            WHEN id=#{item.id} THEN #{item.sort}
          </if>
        </foreach>
      </trim>

    </trim>
    WHERE id IN
    <foreach collection="list" item="item" separator="," open="(" close=")">
      #{item.id}
    </foreach>

  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.ygkj.entity.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createWhere != null">
        create_where = #{createWhere,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="slogan != null">
        slogan = #{slogan,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ygkj.entity.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      user_type = #{userType,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      deleted = #{deleted,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=VARCHAR},
      update_id = #{updateId,jdbcType=VARCHAR},
      create_where = #{createWhere,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      slogan = #{slogan,jdbcType = VARCHAR},
        job = #{job,jdbcType = VARCHAR},
        sort = #{sort,jdbcType = INTEGER},
        identity_number = #{identityNumber,jdbcType = INTEGER}

    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getUserInfoByName" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM sys_user
    WHERE username=#{userName}
    AND deleted=1
  </select>

  <select id="selectUserInfoByDeptIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from sys_user
    where dept_id in
    <foreach collection="list" open="(" close=")" separator="," item="item">
      #{item}
    </foreach>
    and deleted=1
  </select>

  <select id="selectAll" resultMap="lazyMap" parameterType="com.ygkj.vo.req.UserPageReqVO">
    select <include refid="Base_Column_List"></include>
    from sys_user
    <where>
      deleted=1
      <if test="username!=null and username!=''">
        AND username LIKE concat('%',#{username},'%')
      </if>
      <if test="nickName!=null and nickName!=''">
        AND nick_name LIKE concat('%',#{nickName},'%')
      </if>
      <if test="startTime!=null and startTime!=''">
        AND create_time &gt;= #{startTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        AND create_time &lt;= #{endTime}
      </if>
      <if test="userId!=null and userId!='' ">
        AND id=#{userId}
      </if>
      <if test="status!=null and status!='' or status==0 ">
        AND `status`=#{status}
      </if>
      <if test="phone!=null and phone!='' ">
        AND phone=#{phone}
      </if>
      <if test="deptId!=null and deptId!='' ">
        AND dept_id=#{deptId}
      </if>
      <if test="userType!=null and userType!='' ">
        AND user_type=#{userType}
      </if>
      ORDER BY status,sort
    </where>
  </select>

  <select id="getUserListByDeptId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from sys_user
    where dept_id=#{deptId}
    and deleted=1
  </select>

  <select id="getUserListByDeptIdAndName" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from sys_user
    where dept_id=#{deptId}
    and deleted=1
    <if test="username!=null and username!=''">
      and username LIKE concat('%',#{username},'%')
    </if>
  </select>

  <select id="getUser" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from sys_user
    where dept_id=#{deptId}
    and deleted=1
  </select>

  <update id="deletedUsers" parameterType="com.ygkj.entity.SysUser">
    update sys_user
    <set>
        deleted = 0,
      <if test="sysUser.updateId != null">
        update_id = #{sysUser.updateId,jdbcType=VARCHAR},
      </if>
      <if test="sysUser.updateTime != null">
        update_time = #{sysUser.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id in
    <foreach collection="list" open="(" close=")" separator="," item="item">
    #{item}
  </foreach>
  </update>

  <update id="updateByDeptId">
    update sys_user set status = #{status,jdbcType=TINYINT}, update_time = now()
    where dept_id = #{deptId,jdbcType=VARCHAR}
  </update>

  <select id="selectUserNameById" resultType="java.lang.String">
    SELECT username from sys_user where id = #{id}
  </select>
  <select id="selectByIds" resultType="com.ygkj.entity.SysUser">
    SELECT * FROM sys_user WHERE id IN
    <foreach collection="list" open="(" separator="," close=")" item="item">
      #{item}
    </foreach>
  </select>

  <select id="selectByPhone" resultType="com.ygkj.vo.req.LoginReqVO">
    SELECT phone AS username,password FROM sys_user WHERE phone = #{phone}
  </select>

    <select id="findDeportUser" resultType="java.lang.Integer">
        SELECT COUNT(1) num FROM `sys_user` WHERE deleted = 1 AND FIND_IN_SET(dept_id,#{deportIds}) AND id = #{userId}
    </select>

    <select id="findUserNotInIds" resultType="com.ygkj.entity.SysUser">
      SELECT * FROM `sys_user` where deleted = 1 AND id not in
      <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </select>
  <select id="findByIds" resultType="com.ygkj.auth.api.user.model.SysUser">
    SELECT * FROM `sys_user` WHERE deleted =1 AND FIND_IN_SET(id,#{userIds})
  </select>
  <select id="selectByDingUserId" resultType="com.ygkj.vo.req.LoginReqVO">
    SELECT phone username,password FROM sys_user WHERE ding_user_id = #{accountId}
  </select>

  <select id="selectOne" resultType="com.ygkj.vo.req.LoginReqVO">
    SELECT phone username,password FROM sys_user WHERE deleted = 1 LIMIT 1
  </select>

    <select id="listAllUser" resultType="com.ygkj.entity.SysUser">
      SELECT * FROM sys_user
    </select>
  <select id="listAllDingUser" resultType="com.ygkj.entity.DingDingUser">
    SELECT * FROM dingding_user
  </select>

</mapper>